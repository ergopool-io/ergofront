{"version":3,"sources":["build/production.js","hoc/with_layout/withLayout.js","utils.js","network/api.js","build/constant.js","store/reducers/proxyReducer.js","store/actionTypes.js","store/reducers/apiReducer.js","store/reducers/uiReducer.js","store/reducers/index.js","store/index.js","store/actions/apiActions.js","layouts/main_layout/header/menu_bar/menu/Menu.js","layouts/main_layout/header/menu_bar/MenuBar.js","layouts/main_layout/footer/Footer.js","layouts/admin_layout/navigation_toggle/NavigationToggle.js","layouts/admin_layout/AdminLayout.js","layouts/admin_layout/admin_system_layout/AdminSystemLayout.js","page/admin/dashboard/AdminDashboard.js","components/data_table/table-row/TableRow.js","components/data_table/DataTable.js","page/admin/dashboard/block/Block.js","formatter.js","page/admin/dashboard/transaction/transaction-detail/TransactionDetail.js","page/admin/dashboard/transaction/Transaction.js","page/admin/dashboard/payment/payment-row/PaymentRow.js","page/admin/dashboard/payment/Payment.js","layouts/error_layout/ErrorLayout.js","page/errors/error404/Error404.js","page/errors/error500/Error500.js","page/errors/error_maintenance/errorMaintenance.js","page/errors/error_coming/errorComing.js","components/popup/Popup.js","layouts/main_layout/header/search/Search.js","layouts/main_layout/header/Header.js","layouts/main_layout/style/Style.js","layouts/main_layout/MainLayout.js","components/panel/Panel.js","page/main/earning/Earning.js","page/main/hash_rate/HashRate.js","page/main/Index.js","page/main/static/StaticPage.js","layouts/user_layout/address/Address.js","layouts/main_layout/header/menu_bar/MenuBarNavigation.js","components/modal/Modal.js","network/proxy.js","layouts/user_layout/navigation_toggle/NavigationToggle.js","layouts/user_layout/navigation_header/NavigationHeader.js","store/actions/proxyActions.js","layouts/user_layout/UserLayout.js","page/user/chart_filter/ChartFilter.js","page/user/main/card_row/card/Card.js","page/user/main/card_row/card/CardTitle.js","page/user/main/card_row/card/CardContent.js","page/user/main/card_row/card_col/CardCol.js","components/timer/Timer.js","page/user/main/proxy_card_row/custom_col/CustomCol.js","page/user/main/proxy_card_row/custom_col/custom_card/CustomCard.js","page/user/main/proxy_card_row/ProxyCardRow.js","page/user/main/card_row/card/CardTitle2.js","page/user/main/card_row/card/CardFilter.js","page/user/main/card_row/CardRow.js","page/user/main/MainPage.js","page/user/config/save-mnemonic/SaveMnemonic.js","page/user/config/ConfigPage.js","components/zoomable_chart/ZoomableChart.js","page/user/wallet/wallet_box/WalletBox.js","page/user/wallet/payout/Payout.js","page/user/wallet/withdraw/Withdraw.js","page/user/wallet/addresses/Addresses.js","page/user/wallet/WalletPage.js","page/main/faq/Accordion/Element/Header/Header.js","page/main/faq/Accordion/Element/Content/Content.js","page/main/faq/Accordion/Element/Element.js","page/main/faq/Accordion/Accordion.js","page/main/faq/Faq.js","page/main/support/support_form/SupportForm.js","page/main/support/Support.js","page/admin/profile/change_password/ChangePassword.js","page/admin/profile/twoFA/TwoFA.js","page/admin/profile/Profile.js","page/admin/user/User.js","page/admin/manage/MiningParamForm.js","page/admin/manage/RewardForm.js","page/admin/manage/WithdrawForm.js","page/admin/manage/Manage.js","layouts/admin_layout/admin_user_layout/AdminUserLayout.js","page/admin/user/UserMain/UserMainPage.js","page/admin/user/UserWallet/UserWalletPage.js","layouts/admin_layout/admin_ui_manage_layout/AdminUiManageLayout.js","components/data_table/DraggableTable.js","page/admin/ui_manage/AdminUiManageFaq.js","page/admin/ui_manage/AdminUiManageStatic.js","page/admin/ui_manage/AdminUiManageMenuLink.js","page/admin/ui_manage/AdminUiManageFooterLink.js","page/admin/ui_manage/AdminUiManageIndexContent.js","page/admin/ui_manage/AdminUiManageNotification.js","page/admin/login/Login.js","app/App.js","store/actions/uiActions.js","serviceWorker.js","index.js"],"names":["BuildType","Object","freeze","Server","Symbol","Proxy","ProductionType","Production","IsServer","IsProxy","withLayout","Layout","layoutProps","Component","componentProps","props","CompareObject","a","b","exclude","aProps","getOwnPropertyNames","bProps","map","key","indexOf","pop","length","i","propName","BASE_URL","undefined","window","backend","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","data","detail","console","log","removeItem","location","reload","e","Promise","reject","ApiNetwork","info","resolve","get","then","catch","dashboard","userId","hashRate","queries","getQueries","fromTimeStamp","push","toTimeStamp","getQueryStr","join","share","payout","income","getLogin","login","username","password","recaptcha","twofa","params","recaptcha_code","otp_token","post","getConfig","setConfig","configJson","getUsers","getUiJson","path","setUiJson","elements","JSON","stringify","getSupport","support","name","email","subject","message","change2Fa","getPayment","postPayment","getPastPayment","getBlock","withdraw","amount","proxyInitialState","node","synced","start","mining","height","peers","version","bestBlock","pk","mnemonicSaved","apiKey","walletInitialized","walletLocked","wallet","balance","address","reducer","state","action","type","payload","apiInitialState","messages","menu","footer","extra","items","hash_rate","network","pool","miners","active_miners","price","btc","usd","blocks_in_hour","round_valid_shares","round_invalid_shares","timestamp","Date","current","avg","user","immature","mature","syncing","combineReducers","proxy","proxyReducer","api","apiReducer","ui","uiReducer","store","createStore","applyMiddleware","thunk","loadApiDashboardAsync","loadOnce","dispatch","loadData","getState","setTimeout","split","users","setUserPk","loadMenu","storeMessage","newMessages","msgIndex","msg","index","display","to","link","exact","title","MenuBar","toggled","toggleClick","setState","render","className","onClick","style","links","superuser","color","Menu","this","prevProps","prevState","snapshot","React","connect","Footer","renderLink","startsWith","newTab","target","rel","href","backgroundColor","column1","column","replace","toLowerCase","loadFooter","NavigationToggle","click","AdminLayout","navigationOpen","toggleNavigation","logout","history","getUrl","suffix","layoutClasses","activeClassName","children","match","url","AdminSystemLayout","Fragment","TableRow","showDetail","toggleDetail","getDetailRow","DetailComponent","colSpan","columns","rowSelect","content","dataTable","width","hideSorting","header","sort","sorting","sortingDir","dataRow","row","miner","Icon","Transaction","date","loadPayments","results","DataTable","value","toFixed","ergo","pieces","parseFloat","ii","splice","substr","formatter","paid","transactionDetail","payments","total_payment","is_confirmed","TransactionDetail","paymentRow","checked","enabled","onChange","saveEnabled","miner_pk","actual_payment","Payment","submitPayments","forEach","submitRow","loading","checkMiner","isChecked","item","PaymentRow","padding","float","ErrorLayout","background","Popup","getCurrentMessages","resultMessages","closeAllMessages","nextMessage","markup","Search","handleKeyDown","navigate","placeholder","onKeyDown","event","withRouter","hide_search","Style","mainLayout","classes","customClass","process","REACT_APP_BACKEND_URL2","panel","Earning","hashrate","blockInDay","networkHashRate","earning","res","collateral","Math","ceil","HashRate","poolHashRate","slider","sliderHeader","sliderSubTitle","sliderLink","sliderLinkTitle","IndexContent","priceType","features","firstBoxTitle","firstBoxContent","changePriceType","priceIcon","Panel","id","Index","getData","MainLayout","StaticPage","pages","loaded","page","pathname","urlKey","Error404","modal","onClose","onSuccess","successTitle","ProxyNetworking","saveMnemonic","pass","loadMnemonic","payment","walletStatus","callback","errorCallback","walletLock","walletUnlock","proxyReload","proxyResetStatus","NavigationHeader","authModal","unlockModal","initialModal","unlockPassword","openAuthPanel","closeAuthPanel","openUnlockPanel","closeUnlockPanel","setApiKey","proxyNetworking","storeApiKey","isInitialized","isUnlocked","alert","lockWallet","setUnlockPassword","reloadProxyConfig","statusClassName","Modal","UserLayout","updateUserId","stateUserId","proxyUserId","urlUserId","MenuBarNavigation","Address","ChartFilter","visible","changeState","apply","onApply","series","card","CardTitle","cardContent","CardCol","Timer","initial","getTime","seconds","minutes","hours","padDigit","currentTime","diff","parseInt","customCol","customCard","nodeStartDate","moment","format","nodeStartTime","Card","CardContent","CustomCol","CustomCard","PERIOD_STATES","CardRow","period","rotatePeriod","contribution","totalShare","validShareRatio","invalidShareRatio","CardTitle2","CardFilter","ProxyCardRow","hashRateSeries","shareSeries","MainPage","fromDate","fromTime","toDate","toTime","setHashRateState","setShareState","getTimeStamp","dateStr","toDateString","timeStr","toString","toTimeString","loadHashRateChart","force","loadShareChart","loadDashboard","getApiDashboard","loadCharts","dataKey","textAnchor","tickFormatter","strokeDasharray","isAnimationActive","labelFormatter","stroke","verticalAlign","selected","time","MainPageConnected","SaveMnemonic","submit","method","StreamingDemo","refAreaLeft","refAreaRight","zoomStart","zoomEnd","sliceData","xFormatter","leftIndex","findIndex","xKey","rightIndex","oldState","slice","activeLabel","yKey","fill","onMouseDown","bind","onMouseMove","onMouseUp","zoom","x1","x2","strokeOpacity","WalletBox","walletAmount","walletLoaded","sendTransaction","paymentMessage","payToAddress","loadWalletAmount","showLoading","dataIndex","copy","WalletPage","loadPayoutChart","data_row","loadIncomeChart","WalletPageConnected","Header","clicked","Content","Element","active","Accordion","handleElementChange","rows","question","answer","Faq","questions","SupportForm","siteKey","responseMessage","responseClass","setKey","getRecaptcha","site_key","setResponseMessage","preventDefault","onSubmit","htmlFor","sitekey","ChangePassword","oldPassword","newPassword","passwordConfirm","TwoFA","qrcode","enable2FA","alt","src","User","loadUsers","columnIndex","dir","userRow","miningParamForm","POOL_BASE_FACTOR","save","THRESHOLD_HEIGHT","THRESHOLD_TIMESTAMP","rewardForm","TOTAL_REWARD","REWARD_FACTOR","REWARD_FACTOR_PRECISION","FEE_FACTOR","MAX_REWARD","REWARD_ALGORITHM","PPLNS_N","withdrawForm","TRANSACTION_FEE","CONFIRMATION_LENGTH","MAX_NUMBER_OF_OUTPUTS","MIN_WITHDRAW_THRESHOLD","MAX_WITHDRAW_THRESHOLD","DEFAULT_WITHDRAW_THRESHOLD","REWARD_KEYS","WITHDRAW_KEYS","MINING_KEYS","Manage","reward","savePanelValue","submitPanel","keys","filter","includes","reduce","obj","MiningParamForm","RewardForm","WithdrawForm","AdminUserLayout","prefix","AdminUiManageLayout","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","FaqUiManage","edit","initialElements","objectKey","available","addedElement","createEmptyRow","element","choices","addRow","newElement","editElement","removeRow","elem","elemIndex","editRow","selectedElement","saveChanges","postData","uiPath","storeValue","storeExtraValue","moveUp","moveDown","find","contentKey","selectedTab","editorSelectedTab","onTabChange","generateMarkdownPreview","markdown","makeHtml","adminUiManageFaq","DraggableTable","adminUiManageStatic","initialLinks","adminUiManageMenuLink","extraItems","adminUiManageFooterLink","adminUiManageIndexContent","adminUiManageNotification","Login","errors","non_field_errors","saveContent","redirect","queryParams","queryString","parse","search","next","signIn","setItem","errorData","captcha","reset","ref","marginBottom","App","basename","component","Error500","ErrorMaintenance","ErrorComing","Support","UserMainPage","UserWalletPage","UserConfigPage","AdminLogin","AdminDashboardInfo","AdminDashboardBlock","AdminDashboardTransaction","AdminDashboardPayment","AdminProfile","AdminUser","AdminUserMain","AdminUserWallet","AdminManage","AdminUiManageFaq","AdminUiManageStatic","AdminUiManageMenuLink","AdminUiManageFooterLink","AdminUiManageIndexContent","AdminUiManageNotification","setSyncing","getApiInfo","getNodeData","getMessages","proxyNetwork","fullHeight","headersHeight","launchTime","isMining","peersCount","appVersion","previousFullHeaderId","health","reason","mnemonicStatus","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAAMA,EAAYC,OAAOC,OAAO,CAC5BC,OAAUC,OAAO,UACjBC,MAAQD,OAAO,WAGbE,EAAiBN,EAAUG,OAEpBI,EAAb,kCAAaA,EACFC,SAAW,kBAAOF,IAAmBN,EAAUG,QAD7CI,EAEFE,QAAU,kBAAOH,IAAmBN,EAAUK,OCNzD,IAUeK,EAVI,SAACC,GAA8B,IAAtBC,EAAqB,uDAAT,KACpC,OAAO,SAACC,GAAoC,IAAzBC,EAAwB,uDAAT,KAC9B,OAAO,SAACC,GAAD,OACH,kBAACJ,EAAD,iBAAYC,EAAiBG,GACzB,kBAACF,EAAD,iBAAeC,EAAoBC,Q,+BCCtCC,G,MAAgB,SAAhBA,EAAiBC,EAAGC,GAAmB,IAAhBC,EAAe,uDAAP,GACxC,GAAgB,kBAANF,EAAe,CAErB,IAAIG,EAASnB,OAAOoB,oBAAoBJ,GACpCK,EAASrB,OAAOoB,oBAAoBH,GAWxC,GAVAC,EAAQI,KAAI,SAAAC,GAKR,OAJGJ,EAAOK,QAAQD,IAAM,GACpBJ,EAAOM,IAAIN,EAAOK,QAAQD,IAC3BF,EAAOG,QAAQD,IAAM,GACpBF,EAAOI,IAAIJ,EAAOG,QAAQD,IACvB,QAKPJ,EAAOO,SAAWL,EAAOK,OACzB,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAOO,OAAQC,IAAK,CACpC,IAAIC,EAAWT,EAAOQ,GAItB,IAAgD,IAA5CZ,EAAcC,EAAEY,GAAWX,EAAEW,IAC7B,OAAO,EAMf,OAAO,EAEP,OAAOZ,IAAMC,I,kBCpCfY,OAA+BC,IAAnBC,OAAOC,QADA,+BAC4CD,OAAOC,QACtEC,EAAWC,IAAMC,OAAO,CAACC,QAASP,IAExCI,EAASI,aAAaC,QAAQC,KAAI,SAAAC,GAC9B,IAAMC,EAAQC,aAAaC,QCTN,SDUrB,OAAIF,EACO,2BACAD,GADP,IAEII,QAAQ,2BACDJ,EAAOI,SADP,IAEHC,cAAe,SAAWJ,MAI/BD,KAGXP,EAASI,aAAaS,SAASP,KAAI,SAAAO,GAAQ,OAAIA,KAAU,SAAAC,GACrD,KACkC,MAA1BA,EAAMD,SAASE,QAA6C,MAA1BD,EAAMD,SAASE,QAAiD,mBAA/BD,EAAMD,SAASG,KAAKC,UACvFC,QAAQC,IAAI,oCACZV,aAAaW,WC1BA,SD2BbtB,OAAOuB,SAASC,UAEvB,MAAOC,GACJL,QAAQC,IAAII,GAEhB,OAAOC,QAAQC,OAAOX,MAGnB,IAAMY,EAAb,kCAAaA,EAEFC,KAAO,WACV,OAAO,IAAIH,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,SAASC,MAAK,SAAAjB,GACvBe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAbVG,EAkBFM,UAAY,SAAAC,GACf,OAAO,IAAIT,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,QAAUI,EAAS,KAAKH,MAAK,SAAAjB,GACtCe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QA7BVG,EAkCFQ,SAAW,SAACD,EAAQE,GACvB,OAAO,IAAIX,SAAQ,SAACI,EAASH,GACzB,IACI,IAAMW,EAAa,GACfD,EAAQE,eACRD,EAAWE,KAAK,SAAWH,EAAQE,eACnCF,EAAQI,aACRH,EAAWE,KAAK,QAAUH,EAAQI,aACtC,IAAMC,EAAcJ,EAAWK,KAAK,KACpCzC,EAAS6B,IAAI,QAAUI,EAAS,eAAiBO,GAAaV,MAAK,SAAAjB,GAC/De,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAnDVG,EAwDFgB,MAAQ,SAACT,EAAQE,GACpB,OAAO,IAAIX,SAAQ,SAACI,EAASH,GACzB,IACI,IAAMW,EAAa,GACfD,EAAQE,eACRD,EAAWE,KAAK,SAAWH,EAAQE,eACnCF,EAAQI,aACRH,EAAWE,KAAK,QAAUH,EAAQI,aACtC,IAAMC,EAAcJ,EAAWK,KAAK,KACpCzC,EAAS6B,IAAI,QAAUI,EAAS,WAAaO,GAAaV,MAAK,SAAAjB,GAC3De,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAzEVG,EA8EFiB,OAAS,SAAAV,GACZ,OAAO,IAAIT,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,QAAUI,EAAS,YAAYH,MAAK,SAAAjB,GAC7Ce,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAzFVG,EA8FFkB,OAAS,SAAAX,GACZ,OAAO,IAAIT,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,QAAUI,EAAS,YAAYH,MAAK,SAAAjB,GAC7Ce,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAzGVG,EA8GFmB,SAAW,WACd,OAAO,IAAIrB,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,UAAWC,MAAK,SAAAjB,GACzBe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAvHVG,EA4HFoB,MAAQ,SAACC,EAAUC,EAAUC,EAAWC,GAC3C,OAAO,IAAI1B,SAAQ,SAACI,EAASH,GACzB,IACI,IAAI0B,EAAS,CACTJ,SAAUA,EACVC,SAAUA,EACVI,eAAgBH,GAEhBC,IACAC,EAAOE,UAAYH,GAEvBlD,EAASsD,KAAK,SAAUH,GAAQrB,MAAK,SAAAjB,GACjCe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QA7IVG,EAkJF6B,UAAY,WACf,OAAO,IAAI/B,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,SAASC,MAAK,SAAAjB,GACvBe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QA3JVG,EAgKF8B,UAAY,SAAAC,GACf,OAAO,IAAIjC,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAASsD,KAAK,qBAAsBG,GAAY3B,MAAK,SAAAjB,GACjDe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAzKVG,EA8KFgC,SAAW,WACd,OAAO,IAAIlC,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,wBAAwBC,MAAK,SAAAjB,GACtCe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAvLVG,EA4LFiC,UAAY,SAACC,GAChB,OAAO,IAAIpC,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,MAAQ+B,EAAO,KAAK9B,MAAK,SAAAjB,GAClCe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QArMVG,EA0MFmC,UAAY,SAACD,EAAME,GACtB,OAAO,IAAItC,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAASsD,KAAK,MAAQM,EAAO,IAAK,CAAC5C,KAAM+C,KAAKC,UAAUF,KAAYhC,MAAK,SAAAjB,GACrEe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAnNVG,EAwNFuC,WAAa,WAChB,OAAO,IAAIzC,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,YAAaC,MAAK,SAAAjB,GAC3Be,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAjOVG,EAsOFwC,QAAU,SAACC,EAAMC,EAAOC,EAASC,EAASrB,GAC7C,OAAO,IAAIzB,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAASsD,KAAK,WAAY,CACtBa,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,QAASA,EACTlB,eAAgBH,IACjBnB,MAAK,SAAAjB,GACJe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QArPVG,EA0PF6C,UAAY,WACf,OAAO,IAAI/C,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAASsD,KAAK,QAAS,IAAIxB,MAAK,SAAAjB,GAC5Be,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAnQVG,EAwQF8C,WAAa,WAChB,OAAO,IAAIhD,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,WAAY,IAAIC,MAAK,SAAAjB,GAC9Be,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAjRVG,EAsRF+C,YAAc,SAACzD,GAClB,OAAO,IAAIQ,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAASsD,KAAK,WAAYtC,GAAMc,MAAK,SAAAjB,GACjCe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QA/RVG,EAoSFgD,eAAiB,WACpB,OAAO,IAAIlD,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,gCAAiC,IAAIC,MAAK,SAAAjB,GACnDe,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QA7SVG,EAkTFiD,SAAW,WACd,OAAO,IAAInD,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,UAAW,IAAIC,MAAK,SAAAjB,GAC7Be,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QA3TVG,EAgUFkD,SAAW,SAACC,GACf,OAAO,IAAIrD,SAAQ,SAACI,EAASH,GACzB,IACIzB,EAAS6B,IAAI,WAAY,IAAIC,MAAK,SAAAjB,GAC9Be,EAAQf,EAASG,SAClBe,OAAM,SAAAR,GACLE,EAAOF,MAEb,MAAOA,GACLE,EAAOF,QAMRvB,Q,iBE/WF8E,EAAoB,CAC7BC,KAAM,CACFC,QAAQ,EACRC,MAAO,EACPC,QAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,QAAS,GACTC,UAAW,GACXC,GAAI,GACJxE,OAAQ,MACRuD,QAAS,GACTkB,eAAe,GAEnBC,OAAQ,GACRC,mBAAmB,EACnBC,cAAc,EACdC,OAAQ,CACJ7E,OAAQ,GACR8E,QAAS,EACTC,QAAS,KAuBFC,EAnBQ,WAAwC,IAAvCC,EAAsC,uDAA9BlB,EAAmBmB,EAAW,uCAC1D,OAAQA,EAAOC,MACX,IC7BuB,kBD8BnB,OAAO,2BACAF,GADP,IAEIjB,KAAMkB,EAAOE,UAErB,ICjC0B,qBDkCtB,OAAO,2BACAH,GADP,IAEIP,OAAQQ,EAAOE,QAAQV,OACvBC,kBAAmBO,EAAOE,QAAQT,kBAClCC,aAAcM,EAAOE,QAAQR,eAIzC,OAAOK,GExCEI,EAAkB,CAC3BnE,OAAQ,GACRzB,MAAO,GACP6F,SAAU,GACVC,KAAM,GACNC,OAAQ,CACJC,MAAO,GACPC,MAAO,IAEX9E,KAAM,CACF+E,UAAW,CACPC,QAAS,SACTC,KAAM,GAEVC,OAAQ,EACRC,cAAe,EACfC,MAAO,CACHC,IAAK,KACLC,IAAK,MAETC,eAAgB,GAEpBlF,UAAW,CACPmF,mBAAoB,KACpBC,qBAAsB,EACtBC,UAAW,IAAIC,KACfZ,UAAW,CACPa,QAAS,EACTC,IAAK,GAETC,KAAM,CACFN,mBAAoB,EACpBC,qBAAsB,EACtBM,SAAU,EACVC,OAAQ,EACR/C,SAAU,EACV8B,UAAW,CACPa,QAAS,EACTC,IAAK,MAgDNzB,EA1CQ,WAAsC,IAArCC,EAAoC,uDAA5BI,EAAiBH,EAAW,uCACxD,OAAQA,EAAOC,MACX,ID7CsB,iBC8ClB,OAAO,2BACAF,GADP,IAEIrE,KAAMsE,EAAOE,UAErB,IDjDgC,2BCkD5B,OAAO,2BACAH,GADP,IAEIhE,UAAWiE,EAAOE,UAE1B,IDrDmB,cCsDf,OAAO,2BACAH,GADP,IAEI/D,OAAQgE,EAAOE,UAEvB,IDzDwB,mBC0DpB,OAAO,2BACAH,GADP,IAEIxF,MAAOyF,EAAOE,UAEtB,ID7DwB,mBC8DpB,OAAO,2BACAH,GADP,IAEIM,KAAML,EAAOE,UAErB,IDjEoB,eCkEhB,OAAO,2BACAH,GADP,IAEIO,OAAQN,EAAOE,UAEvB,IDrEsB,iBCsElB,OAAO,2BACAH,GADP,IAEIK,SAAUJ,EAAOE,UAI7B,OAAOH,GCpFElB,EAAoB,CAC7BC,KAAM,CACFC,QAAQ,EACRC,MAAO,EACPC,QAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,QAAS,GACTC,UAAW,GACXC,GAAI,GACJxE,OAAQ,QACRuD,QAAS,MAEbmB,OAAQ,GACRC,mBAAmB,EACnBC,cAAc,EACdC,OAAQ,CACJ7E,OAAQ,GACR8E,QAAS,EACTC,QAAS,KA4BFC,EAxBQ,WAAwC,IAAvCC,EAAsC,uDAA9BlB,EAAmBmB,EAAW,uCAC1D,OAAQA,EAAOC,MACX,IF3BuB,kBE4BnB,OAAO,2BACAF,GADP,IAEIjB,KAAMkB,EAAOE,UAErB,IF/B0B,qBEgCtB,OAAO,2BACAH,GADP,IAEIP,OAAQQ,EAAOE,QAAQV,OACvBC,kBAAmBO,EAAOE,QAAQT,kBAClCC,aAAcM,EAAOE,QAAQR,eAErC,IFrCsB,iBEsClB,OAAO,2BACAK,GADP,IAEI4B,SAAS,IAIrB,OAAO5B,GCxCED,EAAU8B,YAAgB,CACnCC,MAAOC,EACPC,IAAKC,EACLC,GAAIC,ICLFC,EAAQC,YAAYtC,EAASuC,YAC/BC,MCmBSC,EAAwB,WAAuB,IAAtBC,EAAqB,wDACvD,OAAO,SAAAC,IACc,SAAXC,IACF,IAAM1G,EAASmG,EAAMQ,WAAWZ,IAAI/F,OAChCA,EACAP,EAAWM,UAAUC,GAAQH,MAAK,SAAAjB,GACzB4H,GACDI,YAAW,kBAAMF,MAAY,KAEjC,IAAMxC,EAAU,CACZkB,UAAW,IAAIC,KAAKzG,EAASG,KAAKqG,UAAUyB,MAAM,KAAKrG,KAAK,MAC5DiE,UAAW7F,EAASG,KAAK0F,UACzBS,mBAAoBtG,EAASG,KAAKmG,mBAClCC,qBAAsBvG,EAASG,KAAKoG,qBACpCK,KAAK,eAAK5G,EAASG,KAAK+H,MAAM9G,KAElCyG,EAAS,CACLxC,KLpCgB,2BKqChBC,QAAQ,eAAKA,QAElBpE,OAAM,SAAAjB,GACA2H,GACDI,YAAW,kBAAMF,MAAY,QAIrCE,YAAW,kBAAMF,MAAY,KAGrCA,KAIKK,EAAY,SAAC/G,GACtB,OAAO,SAAAyG,GACHA,EAAS,CACLxC,KLtDe,cKuDfC,QAASlE,IAEbuG,GAAsB,KAIjBS,EAAW,WACpB,OAAO,SAAAP,GACHhH,EAAWiC,UAAU,iBAAiB7B,MAAK,SAAAd,IACsB,IAAzDlC,EAAcsJ,EAAMQ,WAAWZ,IAAI1B,KAAMtF,EAAKyF,QAC9CiC,EAAS,CACLxC,KLhEY,mBKiEZC,QAASnF,EAAKyF,aAoBrByC,EAAe,SAAA7C,GACxB,IAAML,EAAQoC,EAAMQ,WACdO,EAAW,YAAOnD,EAAMgC,IAAI3B,UAmBlC,OAlBAA,EAAShH,KAAI,SAAAiF,GACT,IAAI8E,GAAY,EAehB,OAdAD,EAAY9J,KAAI,SAACgK,EAAKC,GAOlB,OANIxK,EAAcuK,EAAK/E,EAAS,CAAC,cAC7B8E,EAAWE,EACS,QAAhBD,EAAIE,UACJjF,EAAQiF,QAAU,QAGnB,SAEO,IAAdH,EACAD,EAAY7G,KAAZ,eAAqBgC,IAErB6E,EAAYC,GAAZ,eAA4B9E,GAEzB,QAEJ,CACH4B,KLzGsB,iBK0GtBC,QAASgD,ICxGF7C,EARF,SAACzH,GACV,OACI,4BACI,kBAAC,IAAD,CAAS2K,GAAI3K,EAAM4K,KAAMC,OAAO,GAAO7K,EAAM8K,SCDnDC,E,4MACF5D,MAAM,CACF6D,SAAS,G,EAUbC,YAAc,WACV,EAAKC,UAAS,SAAA/D,GACV,OAAO,2BAAIA,GAAX,IAAkB6D,SAAU7D,EAAM6D,c,EAI1CG,OAAS,WACL,IAAMC,EAAY,kBAAoB,EAAKjE,MAAM6D,QAAU,UAAY,IACvE,OACI,yBAAKI,UAAWA,GACZ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACf,4BAAQA,UAAU,oBAAoBC,QAAS,EAAKJ,aAChD,uBAAGG,UAAU,2BACb,uBAAGA,UAAU,mBAEjB,wBAAIA,UAAU,WAAWE,MAAO,EAAKtL,MAAMsL,OACtC,EAAKtL,MAAMuL,MAAM/K,KAAI,SAACoK,EAAMH,GACzB,MAAuB,QAAnBG,EAAKY,WAAwB5J,aAAaC,QTpCjD,SSqCO+I,EAAKa,MAAc,kBAACC,EAAD,CAAMjL,IAAKmK,EAAKA,KAAMA,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,MAAOQ,MAAO,CAACG,MAAOb,EAAKa,SAC9F,kBAACC,EAAD,CAAMjL,IAAKmK,EAAKA,KAAMA,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,QAFe,Y,mEAxB7Fa,KAAK3L,MAAMoK,a,yCAGIwB,EAAWC,EAAWC,GACrCH,KAAK3L,MAAMoK,e,GAVG2B,IAAMjM,WAiDbkM,eARS,SAAA7E,GAAK,MAAK,CAC9BoE,MAAOpE,EAAMgC,IAAI1B,SAGM,SAAAoC,GAAQ,MAAK,CACpCO,SAAU,kBAAMP,EAASO,SAGd4B,CAA6CjB,GCjDtDkB,E,4MACF9E,MAAQ,CACJoE,MAAO,GACP5D,MAAO,I,EAWXuE,WAAa,SAACtB,EAAMH,GAChB,OAAIG,EAAKA,KAAKuB,WAAW,YAAcvB,EAAKA,KAAKuB,WAAW,aAA+B,QAAhBvB,EAAKwB,OACxD,QAAhBxB,EAAKwB,OACE,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAM3B,EAAKA,KAAMQ,UAAU,OAAO3K,IAAKgK,GAAQG,EAAKE,OAEjG,uBAAGyB,KAAM3B,EAAKA,KAAMQ,UAAU,OAAO3K,IAAKgK,GAAQG,EAAKE,OAG3D,kBAAC,IAAD,CAAMH,GAAIC,EAAKA,KAAMQ,UAAU,OAAO3K,IAAKgK,GAAQG,EAAKE,Q,EAIvEK,OAAS,WAEL,OACI,yBAAKC,UAAU,SAASE,MAAO,CAACkB,gBAAiB,EAAKxM,MAAMyL,QACxD,yBAAKL,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAY,EAAKpL,MAAM0H,OAAOC,MAAM8E,UANvD,CAAC,UAAW,UAAW,WAQdjM,KAAI,SAAAkM,GAAM,OACf,yBAAKtB,UAAU,MAAM3K,IAAKiM,GACtB,yBAAKtB,UAAU,SAAS,EAAKpL,MAAM0H,OAAOC,MAAM+E,IAC/C,EAAK1M,MAAM0H,OAAOE,MAAMpH,KAAI,SAACoK,EAAMH,GAChC,OAAOG,EAAK8B,OAAOC,QAAQ,IAAK,IAAIC,gBAAkBF,EAAS,EAAKR,WAAWtB,EAAMH,GAAS,aAK9G,yBAAKW,UAAU,UACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QAAf,aAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,cAAcmB,KAAK,gDAA+C,uBAC3EnB,UAAU,6BACd,uBAAGA,UAAU,cAAcmB,KAAK,gCAA+B,uBAC3DnB,UAAU,4BACd,uBAAGA,UAAU,cAAcmB,KAAK,8BAA6B,uBACzDnB,UAAU,4BACd,uBAAGA,UAAU,cAAcmB,KAAK,kCAAiC,uBAC7DnB,UAAU,6BAGtB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAAf,2BAIJ,yBAAKA,UAAU,QAEf,yBAAKA,UAAU,c,mEA7D/BO,KAAK3L,MAAM6M,e,yCAGIjB,EAAWC,EAAWC,GACrCH,KAAK3L,MAAM6M,iB,GAXEd,IAAMjM,WAoFZkM,eARS,SAAA7E,GAAK,MAAK,CAC9BO,OAAQP,EAAMgC,IAAIzB,WAGK,SAAAmC,GAAQ,MAAK,CACpCgD,WAAY,kBAAMhD,GHNX,SAAAA,GACHhH,EAAWiC,UAAU,mBAAmB7B,MAAK,SAAAd,IACgB,IAArDlC,EAAcsJ,EAAMQ,WAAWZ,IAAIzB,OAAQvF,IAC3C0H,EAAS,CACLxC,KL5EQ,eK6ERC,QAASnF,cGId6J,CAA6CC,GC5E7Ca,EAXU,SAAC9M,GACtB,OACI,wBAAIoL,UAAU,UACV,4BAAQC,QAASrL,EAAM+M,OACnB,uBAAG3B,UAAU,uCACb,uBAAGA,UAAU,sCCsFd4B,E,4MAtFX7F,MAAQ,CACJ8F,gBAAgB,G,EAUpBC,iBAAmB,WACf,EAAKhC,UAAS,SAAAW,GACV,MAAO,CAACoB,gBAAiBpB,EAAUoB,oB,EAI3CE,OAAS,WACLvL,aAAaW,WZ1BI,SY2BjB,EAAKvC,MAAMoN,QAAQ3J,KAAK,M,EAG5B4J,OAAS,SAACC,GAAD,MAAY,UAAYA,G,EAEjCnC,OAAS,WACL,IAAIoC,EAAgB,CAAC,QAKrB,OAJI,EAAKpG,MAAM8F,gBACXM,EAAc9J,KAAK,UAEvB8J,EAAgBA,EAAc3J,KAAK,KAE/B,6BACI,yBAAKwH,UAAWmC,GACZ,kBAAC,EAAD,MACA,wBAAInC,UAAU,cACV,kBAAC,EAAD,CAAkB2B,MAAO,kBAAM,EAAKG,sBACpC,4BACI,kBAAC,IAAD,CAASM,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,YAC9C,uBAAGjC,UAAU,4BACb,6CAGR,4BACI,kBAAC,IAAD,CAASoC,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,UAC9C,uBAAGjC,UAAU,0BACb,yCAGR,4BACI,kBAAC,IAAD,CAASoC,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,YAC9C,uBAAGjC,UAAU,6BACb,8CAGR,4BACI,kBAAC,IAAD,CAASoC,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,eAC9C,uBAAGjC,UAAU,gCACb,iDAGR,4BACI,kBAAC,IAAD,CAASoC,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,aAC9C,uBAAGjC,UAAU,4BACb,iDAGR,4BACI,4BAAQC,QAAS,EAAK8B,QAClB,uBAAG/B,UAAU,yBACb,2CAIZ,yBAAKA,UAAU,WACV,EAAKpL,MAAMyN,WAGpB,yBAAKrC,UAAU,UACf,yBAAKA,UAAU,UACX,kBAAC,EAAD,S,mEA1EZ/I,QAAQC,IAAIV,aAAaC,QZbR,UYcZD,aAAaC,QZdD,UYeb8J,KAAK3L,MAAMoN,QAAQ3J,KAAK,sBAAwBkI,KAAK3L,MAAM0N,MAAMC,S,GARnD5B,IAAMjM,WCF1B8N,E,4MAEFP,OAAS,SAACC,GAAD,MAAY,iBAAmBA,G,EAExCnC,OAAS,WACL,OACI,kBAAC,IAAM0C,SAAP,KACI,wBAAIzC,UAAU,gBACV,4BACI,kBAAC,IAAD,CAAST,GAAI,EAAK0C,OAAO,IAAKxC,OAAK,GAAnC,gBAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,SAAUxC,OAAK,GAAxC,WAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,eAAgBxC,OAAK,GAA9C,iBAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,WAAYxC,OAAK,GAA1C,aAGP,EAAK7K,MAAMyN,W,YArBI1B,IAAMjM,WA2BvBH,IAAWqN,EAAXrN,CAAwBiO,GCjBxBjO,IAAWiO,EAAXjO,EATQ,SAACK,GACpB,OACI,iCC0CO8N,G,0NA/CX3G,MAAQ,CACJ4G,YAAY,G,EAGhBC,aAAe,WACX,EAAK9C,UAAS,SAAA/D,GACV,OAAO,2BAAIA,GAAX,IAAkB4G,YAAa5G,EAAM4G,iB,EAI7CE,aAAe,WACX,GAAI,EAAKjO,MAAMoC,QAAU,EAAK+E,MAAM4G,WAAY,CAC5C,IAAMG,EAAkB,EAAKlO,MAAMoC,OACnC,OACI,4BACI,wBAAI+L,QAAS,EAAKnO,MAAMoO,QAAQxN,OAAS,EAAGwK,UAAU,UAClD,kBAAC8C,EAAD,CAAiB/L,KAAM,EAAKnC,MAAMmC,SAKlD,OAAO,M,EAGXgJ,OAAS,WACL,OACI,kBAAC,IAAM0C,SAAP,KACI,wBAAIpN,IAAK,EAAKT,MAAMmC,KAAK1B,KACpB,EAAKT,MAAMoC,OACR,wBAAIiJ,QAAS,EAAK2C,cACb,EAAK7G,MAAM4G,WAAa,uBAAG3C,UAAU,iBAAmB,uBAAGA,UAAU,mBAE3E,KACF,EAAKpL,MAAMoO,QAAQ5N,KAAI,SAAAkM,GAAM,OAC1B,wBAAIjM,IAAKiM,EAAOjM,IACZ4K,QAAS,kBAAM,EAAKrL,MAAMqO,UAAY,EAAKrO,MAAMqO,UAAU,EAAKrO,MAAMmC,MAAQ,OAC7EuK,EAAO4B,QAAU5B,EAAO4B,QAAQ,EAAKtO,MAAMmC,MACxC,8BAAO,EAAKnC,MAAMmC,KAAKuK,EAAOjM,WAI7C,EAAKwN,iB,YA1CClC,IAAMjM,YCgDdyO,EA/CG,SAACvO,GACf,OACI,+BACI,+BACA,4BACKA,EAAMoC,OACH,wBAAIoM,MAAO,KACZ,KACFxO,EAAMoO,QAAQ5N,KAAI,SAAAkM,GAAM,OACrB,wBAAIjM,IAAKiM,EAAOjM,IAAK2K,UAAU,UAC1BpL,EAAMyO,YAAc/B,EAAOgC,OAC5B,4BAAQtD,UAAU,cACVC,QAAS,kBAAMrL,EAAM2O,KAAO3O,EAAM2O,KAAKjC,EAAOjM,KAAO,OACxDiM,EAAOgC,OAFZ,QAGKhC,EAAOjM,MAAQT,EAAM4O,QAA+B,QAArB5O,EAAM6O,WAClC,uBAAGzD,UAAU,mBAAqB,uBAAGA,UAAU,2BAC/C,uBAAGA,UAAU,wBAOjC,+BAEIpL,EAAMmC,KAAK3B,KAAI,SAACsO,EAASrE,GAAV,OACX,kBAAC,EAAD,CACIhK,IAAKgK,EACLtI,KAAM2M,EACNV,QAASpO,EAAMoO,QACfC,UAAWrO,EAAMqO,UACjBjM,OAAQpC,EAAMoC,YAIzBpC,EAAM0H,OACH,wBAAIyG,QAASnO,EAAMoO,QAAQxN,QACvB,kC,GACUZ,MAAM0H,SAGpB,Q,SC5BV0G,EAAU,CACZ,CAACM,OAAQ,SAAUjO,IAAK,UACxB,CAACiO,OAAQ,YAAajO,IAAK,aAC3B,CAACiO,OAAQ,eAAgBjO,IAAK,qBAC9B,CAACiO,OAAQ,WAAYjO,IAAK,QAAS6N,QAAS,SAAAS,GAAQ,OAAOA,EAAIC,MAAM1J,OACrE,CAACoJ,OAAQ,QAASjO,IAAK,OAAQ6N,QAZnB,SAAAS,GACZ,OAAGA,EAAIhH,KACI,kBAACkH,EAAA,EAAD,CAAM3J,KAAK,UACf,uBAAG8F,UAAU,qBAYlB8D,G,4MACF/H,MAAQ,CACJhF,KAAM,GACNgN,KAAM,GACN/L,OAAQ,I,EAGZgM,aAAe,WACXvM,EAAWiD,WAAW7C,MAAK,SAAAjB,GAEvB,EAAKkJ,SAAS,CAAC/I,KAAMH,EAASqN,c,EAQtClE,OAAS,WACL,OACI,yBAAKC,UAAU,sBACX,kBAACkE,EAAD,CACIb,aAAa,EACbtM,KAAM,EAAKgF,MAAMhF,KACjBkM,UAAW,EAAKA,UAChBD,QAASA,M,mEAVrBzC,KAAKyD,mB,GAfarD,IAAMjM,WA+BjBH,KAAWiO,EAAXjO,CAA8BuP,ICvDvC5B,GAAS,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAEhCjK,GAAW,SAAAkM,GACpB,QAAcvO,IAAVuO,EACA,MAAO,KAEX,IADA,IAAI9E,EAAQ,EACL8E,EAAQ,MACX9E,GAAS,EACT8E,GAAS,KAEb,OAAOA,EAAMC,QAAQ,GAAK,IAAMlC,GAAO7C,IAI9BgF,GAAO,SAAAF,GAIhB,IAHA,IACMG,EAASC,WADDJ,EAAQ,KACWC,QAAQ,GAAGvF,MAAM,IAC9C2F,EAAKF,EAAO9O,OAAS,IACjBgP,GAAI,GAAK,GACbF,EAAOG,OAAOD,EAAI,EAAG,KAEzB,OAAOF,EAAO9L,KAAK,KAGVM,GAAW,SAAAqL,GACpB,OAAQA,EAAM3O,OAAS,GAAM2O,EAAQA,EAAMO,OAAO,EAAG,IAAM,OCrBzD1B,GAAU,CACZ,CAACM,OAAQ,OAAQjO,IAAK,MACtB,CAACiO,OAAQ,SAAUjO,IAAK,OAAQ6N,QAAS,SAAAS,GAAQ,OAAOgB,GAAehB,EAAIiB,SAgBhEC,GAZW,SAACjQ,GACvB,OACI,yBAAKoL,UAAU,gBACf,kBAACkE,EAAD,CACIb,aAAa,EACbtM,KAAMnC,EAAMmC,KAAK+N,SACjB9B,QAASA,OCAfA,GAAU,CACZ,CAACM,OAAQ,iBAAkBjO,IAAK,SAChC,CAACiO,OAAQ,SAAUjO,IAAK,gBAAiB6N,QAAS,SAAAS,GAAQ,OAAOgB,GAAehB,EAAIoB,iBACpF,CAACzB,OAAQ,YAAajO,IAAK,eAAgB6N,QAR1B,SAAAS,GACjB,OAAGA,EAAIqB,aACI,kBAACnB,EAAA,EAAD,CAAM3J,KAAK,UACf,uBAAG8F,UAAU,oBAMpB,CAACsD,OAAQ,YAAajO,IAAK,eAGzByO,G,4MACF/H,MAAQ,CACJhF,KAAM,GACNgN,KAAM,GACN/L,OAAQ,I,EAGZgM,aAAe,WACXvM,EAAWgD,iBAAiB5C,MAAK,SAAAjB,GAC7B,EAAKkJ,SAAS,CAAC/I,KAAMH,Q,EAS7BmJ,OAAS,WACL,OACI,yBAAKC,UAAU,sBACX,kBAACkE,EAAD,CACIb,aAAa,EACbtM,KAAM,EAAKgF,MAAMhF,KACjBkM,UAAW,EAAKA,UAChBjM,OAAQiO,GACRjC,QAASA,O,mEAZrB/L,QAAQC,IAAI,QACZqJ,KAAKyD,mB,GAfarD,IAAMjM,WAgCjBH,KAAWiO,EAAXjO,CAA8BuP,I,UCzC9BoB,GATI,SAAAtQ,GAAK,OACpB,4BACI,4BAAI,2BAAOqH,KAAK,WAAWkJ,QAASvQ,EAAMwQ,QAASC,SAAU,SAAA/N,GAAC,OAAI1C,EAAM0Q,YAAYhO,EAAE2J,OAAOkE,aAC7F,4BAAKrM,GAASlE,EAAM2Q,WACpB,4BAAKZ,GAAe/P,EAAMgH,UAC1B,4BAAK+I,GAAe/P,EAAM4Q,mB,oBCH5BC,G,4MACF1J,MAAQ,CACJ,KAAQ,GACR,QAAW,OACX,WAAc,MACd,UAAa,EACb,QAAW,I,EAGfiI,aAAe,WACXvM,EAAW8C,aAAa1C,MAAK,SAAAjB,GACzB,IAAMG,EAAOH,EAASxB,KAAI,SAAAuO,GACtB,OAAO,2BAAIA,GAAX,IAAgByB,SAAS,OAE7B,EAAKtF,SAAS,CAAC/I,KAAMA,Q,EAI7B2O,eAAiB,WACb,EAAK5F,SAAS,CAAC,SAAW,IAC1B,IAAI/I,EAAO,GACX,EAAKgF,MAAMhF,KAAK4O,SAAQ,SAAAjC,GAAY,IACzB0B,EAAyB1B,EAAzB0B,QAAYQ,EADY,aACClC,EADD,aAE5B0B,GACCrO,EAAKsB,KAAKuN,MAGlBnO,EAAW+C,YAAYzD,GAAMc,MAAK,SAAAjB,GAC9B,EAAKkJ,SAAS,CAAC+F,SAAS,OACzB/N,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAAC+F,SAAS,Q,EAQhCC,WAAa,SAACzG,EAAO0G,GACjB,IAAIhP,EAAI,YAAO,EAAKgF,MAAMhF,MAC1BA,EAAKsI,GAAO+F,QAAUW,EACtB9O,QAAQC,IAAIH,GACZ,EAAK+I,SAAS,CAAC,KAAQ/I,K,mEAPvBwJ,KAAKyD,iB,+BAUC,IAAD,OACL,OACI,yBAAKhE,UAAU,sBACX,+BACI,+BACA,4BACI,6BACA,qCACA,uCACA,gDAGJ,+BACCO,KAAKxE,MAAMhF,KAAK3B,KAAI,SAAC4Q,EAAM3G,GAAP,OAAiB,kBAAC4G,GAAD,iBAAgBD,EAAhB,CAAsBV,YAAa,SAAAnB,GAAK,OAAI,EAAK2B,WAAWzG,EAAO8E,WAEzG,+BACA,4BACI,wBAAIpB,QAAS,EAAG7C,MAAO,CAACgG,QAAS,KAC7B,4BAAQlG,UAAU,WAAWC,QAASM,KAAKmF,eAAgBxF,MAAO,CAACiG,MAAO,UAA1E,kBAEK5F,KAAKxE,MAAM8J,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,e,GAjE/DM,IAAMjM,WA6EbH,KAAWiO,EAAXjO,CAA8BkR,IChE9BW,GAjBK,SAACxR,GACjB,OACI,yBAAKoL,UAAU,QAAQE,MAAO,CAACmG,WAAYzR,EAAMyL,QAC7C,yBAAKL,UAAU,WACX,yBAAKA,UAAU,cACf,uBAAGmB,KAAK,+CAA+CnB,UAAU,UAAS,uBAAGA,UAAU,4BAAvF,KACA,uBAAGmB,KAAK,+BAA+BnB,UAAU,UAAS,uBAAGA,UAAU,2BAAvE,KACA,uBAAGmB,KAAK,6BAA6BnB,UAAU,UAAS,uBAAGA,UAAU,2BAArE,KACA,uBAAGmB,KAAK,iCAAiCnB,UAAU,UAAS,uBAAGA,UAAU,0BAAzE,MAEJ,yBAAKA,UAAU,YACVpL,EAAMyN,YCKR9N,KAAW6R,GAAX7R,EAdE,SAACK,GACd,OACI,6BACI,6BACI,mCACA,oDACA,yDACA,kBAAC,IAAD,CAAM2K,GAAG,KAAT,iBAEJ,yBAAKS,UAAU,8BCKZzL,KAAW6R,GAAa,CACnC/F,MAAO,WADI9L,EAdE,SAACK,GACd,OACI,6BACI,6BACI,mCACA,+DACA,wGACA,kBAAC,IAAD,CAAM2K,GAAG,KAAT,iBAEJ,yBAAKS,UAAU,8BCGZzL,KAAW6R,GAAX7R,EAbU,SAACK,GACtB,OACI,6BACI,6BACI,oCACA,oDACA,mHAEJ,yBAAKoL,UAAU,sCCKZzL,KAAW6R,GAAX7R,EAbK,SAACK,GACjB,OACI,6BACI,6BACI,oCACA,6CACA,uGAEJ,yBAAKoL,UAAU,iC,SCNrBsG,G,4MAEFC,mBAAqB,WACjB,IAAIC,EAAiB,GAOrB,OANA,EAAK5R,MAAMwH,SAAShH,KAAI,SAACiF,EAASgF,GAI9B,MAHwB,QAApBhF,EAAQiF,SACRkH,EAAenO,KAAKgC,GAEjB,QAEJmM,G,EAGXC,iBAAmB,WACf,IAAMvH,EAAc,EAAKtK,MAAMwH,SAAShH,KAAI,SAAAiF,GACxC,OAAO,2BAAIA,GAAX,IAAoBiF,QAAS,WAEjC,EAAK1K,MAAMqK,aAAaC,I,EAG5BwH,YAAc,SAACrM,GACX,EAAKzF,MAAMqK,aAAa,CAAC,2BAAI5E,GAAL,IAAciF,QAAS,W,EAGnDS,OAAS,WACL,IAAM3D,EAAW,EAAKmK,qBACtB,GAAwB,IAApBnK,EAAS5G,OACT,OAAO,KACX,IAAM6E,EAAU+B,EAAS,GACnB4D,EAAY,eAAiB3F,EAAQ4B,KAC3C,OACI,yBAAK+D,UAAU,mBACX,yBAAKA,UAAWA,GACZ,yBAAKA,UAAU,cACX,4BAAQA,UAAU,YAAYC,QAAS,EAAKwG,kBACxC,uBAAGzG,UAAU,oBAGrB,yBAAKA,UAAU,iBACX,4BAAK3F,EAAQqF,OACb,kBAAC,YAAD,CAAUiH,OAAQtM,EAAQ6I,WAE9B,yBAAKlD,UAAU,qBACX,4BAAQA,UAAU,aAAaC,QAAS,kBAAM,EAAKyG,YAAYrM,KAC1D+B,EAAS5G,OAAS,EAAI,OAAS,a,YA5CxCmL,IAAMjM,WA6DXkM,gBARS,SAAA7E,GAAK,MAAK,CAC9BK,SAAUL,EAAMgC,IAAI3B,aAGG,SAAAqC,GAAQ,MAAK,CACpCQ,aAAc,SAAC5E,GAAD,OAAaoE,EAASQ,EAAa5E,QAGtCuG,CAA6C0F,I,SC7DtDM,G,4MACF7K,MAAQ,CACJyB,KAAM,I,EAEVqJ,cAAgB,SAACvP,GACC,UAAVA,EAAEjC,KACF,EAAKyR,Y,EAIbA,SAAW,WACP,EAAKlS,MAAMmK,UAAU,EAAKhD,MAAMyB,MAChC,EAAK5I,MAAMoN,QAAQ3J,KAAK,SAAW,EAAK0D,MAAMyB,KAAO,M,EAGzDuC,OAAS,WACL,OACI,yBAAKC,UAAU,kBACX,uBACIA,UAAU,iBACVC,QAAS,EAAK6G,WAElB,2BACI7K,KAAK,OACL8K,YAAY,sBACZ5C,MAAO,EAAKpI,MAAMyB,KAClBwJ,UAAW,EAAKH,cAChBxB,SAAU,SAAC4B,GAAD,OAAW,EAAKnH,SAAS,CAACtC,KAAMyJ,EAAMhG,OAAOkD,a,YA3BtDxD,IAAMjM,WA0CZkM,gBARS,SAAA7E,GAAK,MAAK,CAC9BrE,KAAMqE,EAAMgC,IAAIhG,cAGO,SAAA0G,GAAQ,MAAK,CACpCM,UAAW,kBAAMN,EAASM,OAGf6B,CAA6CsG,aAAWN,KC7BxDtD,OAff,SAAgB1O,GACZ,OACI,yBAAKoL,UAAU,UACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACVpL,EAAM8K,OAEV9K,EAAMuS,YAAc,KAAO,kBAAC,GAAD,SCA7BC,GAVD,SAACxS,GACX,OACI,yBAAKoL,UAAU,SACX,yBAAKA,UAAU,WACVpL,EAAMyN,YCaRgF,GAdI,SAACzS,GAChB,IAAM0S,EAAU,SAAW1S,EAAM2S,YAAc3S,EAAM2S,YAAc,IACnE,OACI,yBAAKvH,UAAWsH,GACXE,mHAAYC,uBACb,kBAAC,GAAD,CAAQN,YAAavS,EAAMuS,YAAazH,MAAO9K,EAAM8K,QACrD,kBAAC,GAAD,KACK9K,EAAMyN,UAEX,kBAAC,EAAD,QCDGqF,GAXD,SAAC9S,GACX,OACI,yBAAKoL,UAAW,SAAWpL,EAAMoL,UAAY,IAAMpL,EAAMoL,UAAY,KACjE,yBAAKA,UAAU,iBACVpL,EAAMyN,SACP,yBAAKrC,UAAU,aCqChB2H,G,4MA1CX5L,MAAQ,CACJ6L,SAAU,I,EAGdC,WAAa,WACT,IAAID,EAAW,EACZ,EAAK7L,MAAM6L,WACVA,EAAiC,KAAtB,EAAK7L,MAAM6L,SAAkB,MAC5C,IAAME,EAAkB,EAAKlT,MAAM8H,QAAUkL,EAC7C,OAAwB,IAApBE,EAA8B,EAC3BF,EAAWE,EAAkB,GAAK,I,EAG7CC,QAAU,WACN,IAAMC,EAA0B,GAApB,EAAKH,aACjB,OAAIG,EAAM,EACCA,EAAI5D,QAAQ,GAChB,G,EAGX6D,WAAa,WAET,OADiD,IAApCC,KAAKC,KAAK,EAAKN,cAAgB,GAAU,M,uDAKhD,IAAD,OACL,OACI,yBAAK7H,UAAU,WACX,0DAEI,2BAAOmE,MAAO5D,KAAKxE,MAAM6L,SAClBvC,SAAU,SAAC4B,GAAD,OAAW,EAAKnH,SAAS,CAAC8H,SAAUX,EAAMhG,OAAOkD,YAEtE,0CAAgB5D,KAAKwH,UAArB,QACA,oDAA0BxH,KAAK0H,aAA/B,QACA,8CAAoB1H,KAAKwH,UAAzB,a,GArCMpH,IAAMjM,WCoBb0T,G,uKAjBP,OACI,yBAAKpI,UAAW,YACZ,6BACI,gDACA,iDACA,4BAAK2E,GAAmBpE,KAAK3L,MAAMkT,iBAAnC,QAEJ,6BACI,6CACA,iDACA,4BAAKnD,GAAmBpE,KAAK3L,MAAMyT,cAAnC,a,GAZG1H,IAAMjM,WCUvB4T,GAAS,SAAC1T,GACZ,OACI,yBAAKoL,UAAU,UACX,yBAAKA,UAAU,QACX,4BAAKpL,EAAM2T,cACX,4BAAK3T,EAAM4T,gBACX,kBAAC,IAAD,CAAMxI,UAAU,WAAWT,GAAI3K,EAAM6T,YAAa7T,EAAM8T,kBAE5D,yBAAK1I,UAAU,UACf,yBAAKA,UAAU,YAKrB2I,G,4MACF5M,MAAQ,CACJ6M,UAAW,MACXC,SAAU,GACVxJ,MAAO,CACHkJ,aAAc,iDACdC,eAAgB,0HAChBC,WAAY,QACZC,gBAAiB,eACjBI,cAAe,GACfC,gBAAiB,K,EAIzBC,gBAAkB,WACd,EAAKlJ,UAAS,SAAA/D,GACV,IAAI6M,EAAY,MAGhB,MAFwB,QAApB7M,EAAM6M,YACNA,EAAY,OACT,2BAAI7M,GAAX,IAAkB6M,UAAWA,Q,EAIrCK,UAAY,WACR,MAA6B,QAAzB,EAAKlN,MAAM6M,UAA4B,IACpC,O,EAGX7I,OAAS,WACL,OACI,yBAAKC,UAAU,gBACX,kBAAC,GAAD,MACA,4BAAK,EAAKpL,MAAMyK,MAAMyJ,eACtB,4BAAK,EAAKlU,MAAMyK,MAAM0J,iBACtB,kBAAC,GAAD,MACA,yBAAK/I,UAAU,QACX,yBAAKA,UAAU,OACX,0CACA,iDACA,4BAAK2E,GAAmB,EAAK/P,MAAM8C,KAAK+E,UAAUE,MAAlD,QAEJ,yBAAKqD,UAAU,OACX,6CACA,4BAAK,EAAKpL,MAAM8C,KAAKmF,gBAEzB,yBAAKmD,UAAU,OACX,sCACA,4BAAK,EAAKpL,MAAM8C,KAAKkF,SAEzB,yBAAKoD,UAAU,OACX,wCACA,4BAAK,EAAKpL,MAAM8C,KAAKuF,iBAEzB,yBAAK+C,UAAU,OACX,qCAAU,uBAAGA,UAAU,mBAAmBC,QAAS,EAAK+I,mBACxD,4BAAK,EAAKpU,MAAM8C,KAAKoF,MAAM,EAAKf,MAAM6M,WAAtC,IAAmD,EAAKK,eAGhE,yBAAKjJ,UAAU,UACX,uBAAGA,UAAU,kBAEjB,wCACA,yBAAKA,UAAU,YACV,EAAKpL,MAAMiU,SAASzT,KAAI,SAAC4Q,EAAM3G,GAAP,OACrB,yBAAKW,UAAU,kBAAkB3K,IAAKgK,GAClC,yBAAKW,UAAU,iBACX,kBAACkJ,GAAD,KACKlD,EAAKtG,aAM1B,wBAAIyJ,GAAG,cAAP,0BACA,kBAACD,GAAD,CAAOlJ,UAAW,iBACd,kBAAC,GAAD,CAAU8H,gBAAiB,EAAKlT,MAAM8C,KAAK+E,UAAUC,QAC3C2L,aAAc,EAAKzT,MAAM8C,KAAK+E,UAAUE,OAClD,kBAAC,GAAY,EAAK/H,MAAM8C,KAAK+E,c,YA7EtBkE,IAAMjM,WAoF3B0U,G,4MACFrN,MAAQ,CACJ8M,SAAU,GACVxJ,MAAO,CACHkJ,aAAc,GACdC,eAAgB,GAChBC,WAAY,GACZC,gBAAiB,GACjBI,cAAe,GACfC,gBAAiB,K,EAGzBM,QAAU,WACN5R,EAAWiC,UAAU,cAAc7B,MAAK,SAAAwH,IACoB,IAApDxK,EAAcwK,EAAM7C,MAAO,EAAKT,MAAM8M,YAAwE,IAAjDhU,EAAcwK,EAAM9C,MAAO,EAAKR,MAAMsD,QACnG,EAAKS,SAAS,CACV+I,SAAUxJ,EAAM7C,MAChB6C,MAAOA,EAAM9C,Y,EAc7BwD,OAAS,WACL,OACI,kBAACuJ,GAAD,eAAYnC,aAAa,EAAMI,YAAY,QAAQ7H,MAAO4I,GAAO,EAAKvM,MAAMsD,QAAY,EAAKzK,OACzF,kBAAC,GAAD,eAAciU,SAAU,EAAK9M,MAAM8M,SAAUxJ,MAAO,EAAKtD,MAAMsD,OAAW,EAAKzK,U,iEAXxE4L,EAAWC,EAAWC,GACrCH,KAAK8I,Y,2CAIL9I,KAAK8I,c,GA5BO1I,IAAMjM,WA4CXkM,gBAJS,SAAA7E,GAAK,MAAK,CAC9BrE,KAAMqE,EAAMgC,IAAIrG,QAGLkJ,CAAyBwI,ICxGzBG,G,4MA1CXxN,MAAQ,CACJyN,MAAO,GACPC,QAAQ,G,EAGZJ,QAAU,WACN5R,EAAWiC,UAAU,aAAa7B,MAAK,SAAA2R,IACiB,IAAjD3U,EAAc2U,EAAMhN,MAAO,EAAKT,MAAMyN,QACrC,EAAK1J,SAAS,CAAC0J,MAAOA,EAAMhN,MAAOiN,QAAQ,Q,EAavD1J,OAAS,WACL,IAAImD,EAAU,KACVxD,EAAQ,KASZ,GARAzI,QAAQC,IAAI,EAAK6E,OACjB,EAAKA,MAAMyN,MAAMpU,KAAI,SAAAsU,GAKjB,OAJG,EAAK9U,MAAMwC,SAASuS,WAAaD,EAAKE,SACrC1G,EAAUwG,EAAKxG,QACfxD,EAAQgK,EAAKhK,OAEV,QAEI,OAAZwD,GAAoB,EAAKnH,MAAM0N,OAC9B,OAAO,kBAACI,GAAD,MAEX,IAAMnV,EAAYH,EAAW+U,GAAY,CAAC5J,MAAOA,GAA/BnL,EAAuC,SAACK,GACtD,OAAO,kBAAC,YAAD,CAAU+R,OAAQzD,OAE7B,OAAO,yBAAKlD,UAAU,eAAc,kBAACtL,EAAD,Q,iEAzBrB8L,EAAWC,EAAWC,GACrCH,KAAK8I,Y,2CAIL9I,KAAK8I,c,GAnBY1I,IAAMjM,W,SCKhBmH,GAXC,SAACjH,GACb,OACI,yBAAKoL,UAAU,qBACX,yBAAKA,UAAU,UAAUN,MAAO9K,EAAMoD,QACjCpD,EAAMoD,QAEVpD,EAAMyN,WCFb1C,G,4MACF5D,MAAQ,CACJ6D,SAAS,G,EAWbC,YAAc,WACV,EAAKC,UAAS,SAAA/D,GACV,OAAO,2BAAIA,GAAX,IAAkB6D,SAAU7D,EAAM6D,c,EAI1CG,OAAS,WACL,IAAMC,EAAY,oBAAsB,EAAKjE,MAAM6D,QAAU,UAAY,IACzE,OACI,wBAAII,UAAWA,GACX,4BAAQA,UAAU,QAAQC,QAAS,EAAKJ,aAAxC,gBAGA,wBAAIG,UAAU,sBAAsBE,MAAO,EAAKtL,MAAMsL,OACjD,EAAKtL,MAAMuL,MAAM/K,KAAI,SAACoK,EAAMH,GACzB,MAAuB,QAAnBG,EAAKY,WAAwB5J,aAAaC,QvClC7C,SuCmCG+I,EAAKa,MAAc,kBAACC,EAAD,CAAMjL,IAAKmK,EAAKA,KAAMA,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,MAC7CQ,MAAO,CAACG,MAAOb,EAAKa,SAC1C,kBAACC,EAAD,CAAMjL,IAAKmK,EAAKA,KAAMA,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,QAHe,W,mEAtBzFa,KAAK3L,MAAMoK,a,yCAGIwB,EAAWC,EAAWC,GACrCH,KAAK3L,MAAMoK,e,GAVG2B,IAAMjM,WA+CbkM,gBARS,SAAA7E,GAAK,MAAK,CAC9BoE,MAAOpE,EAAMgC,IAAI1B,SAGM,SAAAoC,GAAQ,MAAK,CACpCO,SAAU,kBAAMP,EAASO,SAGd4B,CAA6CjB,ICzB7CmK,GAzBD,SAAClV,GACX,OACI,6BACKA,EAAM0K,QACH,yBAAKU,UAAU,SACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,iBACVpL,EAAMyN,SACP,yBAAKrC,UAAU,cACX,yBAAKA,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASrL,EAAMmV,SAA5C,WAEJ,yBAAK/J,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASrL,EAAMoV,WAAYpV,EAAMqV,mBAMlF,OCpBVlU,GAAWC,IAAMC,OAAO,CAACC,QAAS,MAExCH,GAASI,aAAaC,QAAQC,KAAI,SAAAC,GAC9B,IAAMkF,EAAS2C,EAAMQ,WAAWd,MAAMrC,OAItC,OAHIA,IACAlF,EAAOI,QAAU,CAAC,QAAW8E,IAE1BlF,KACR,SAAAO,O,IAIGqT,G,kCAAAA,GACKxS,KAAO,WACV,OAAO,IAAIH,SAAQ,SAACI,EAASH,GACzB,IACIzB,GAAS6B,IAAI,QAAQC,MAAK,SAAAjB,GACtBe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QAZjB4S,GAiBKC,aAAe,SAACpR,GACnB,OAAO,IAAIxB,SAAQ,SAACI,EAASH,GACzB,IACIzB,GAASsD,KAAK,sBAAuB,CAAC+Q,KAAMrR,IAAWlB,MAAK,SAAAjB,GACxDe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QA5BjB4S,GAiCKG,aAAe,SAACtR,GACnB,OAAO,IAAIxB,SAAQ,SAACI,EAASH,GACzB,IACIzB,GAASsD,KAAK,sBAAuB,CAAC+Q,KAAMrR,IAAWlB,MAAK,SAAAjB,GACxDe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QA5CjB4S,GAiDKI,QAAU,SAACzO,EAASjB,GACvB,OAAO,IAAIrD,SAAQ,SAACI,EAASH,GACzB,IACIzB,GAASsD,KAAK,uBAAwB,CAAC,CACnCwC,QAASA,EACTsI,MAAOvJ,KACP/C,MAAK,SAAAjB,GACLe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QA/DjB4S,GAoEKtO,QAAU,WACb,OAAO,IAAIrE,SAAQ,SAACI,EAASH,GACzB,IACIzB,GAAS6B,IAAI,mBAAmBC,MAAK,SAAAjB,GACjCe,EAAQf,MACTkB,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZW,EAAOX,MAEb,MAAOS,GACLL,QAAQC,IAAII,GACZE,EAAOF,QA/EjB4S,GAoFKK,aAAe,WACf,IADgB/O,EACjB,uDAD0B,GAAIgP,EAC9B,uCADwCC,EACxC,uDADwD,SAAA5T,KAE1D,IACI,IAAMH,EAAU,CACZ,QAAW8E,GAEfzF,GAAS6B,IAAI,gBAAiB,CAAClB,QAASA,IAAUmB,MAAK,SAAAjB,GACnD4T,EAAS5T,MACVkB,OAAM,SAAAjB,GACL4T,EAAc5T,MAEpB,MAAOS,GACLL,QAAQC,IAAII,GACZmT,EAAcnT,KAjGpB4S,GAqGKQ,WAAa,SAACF,GACd,IADwBC,EACzB,uDADyC,SAAA5T,KAE3C,IACId,GAAS6B,IAAI,eAAeC,MAAK,SAAAjB,GAC7B4T,EAAS5T,MACVkB,OAAM,SAAAjB,GACL4T,EAAc5T,MAEpB,MAAOS,GACLL,QAAQC,IAAII,GACZmT,EAAcnT,KA/GpB4S,GAmHKS,aAAe,SAAC5R,EAAUyR,GAC1B,IADoCC,EACrC,uDADqD,SAAA5T,KAEvD,IACId,GAASsD,KAAK,gBAAiB,CAAC+Q,KAAMrR,IAAWlB,MAAK,SAAAjB,GAClD4T,EAAS5T,MACVkB,OAAM,SAAAjB,GACL4T,EAAc5T,MAEpB,MAAOS,GACLL,QAAQC,IAAII,GACZmT,EAAcnT,KA7HpB4S,GAiIKU,YAAc,SAACJ,GACf,IADyBC,EAC1B,uDAD0C,SAAA5T,KAE5C,IACId,GAASsD,KAAK,uBAAuBxB,MAAK,SAAAjB,GACtC4T,EAAS5T,MACVkB,OAAM,SAAAjB,GACL4T,EAAc5T,MAEpB,MAAOS,GACLL,QAAQC,IAAII,GACZmT,EAAcnT,KA3IpB4S,GA+IKW,iBAAmB,SAACL,GAA2C,IAAjCC,EAAgC,uDAAhB,SAAA5T,KACjD,IACId,GAASsD,KAAK,sBAAsBxB,MAAK,SAAAjB,GACrC4T,EAAS5T,MACVkB,OAAM,SAAAjB,GACL4T,EAAc5T,MAEpB,MAAOS,GACLL,QAAQC,IAAII,GACZmT,EAAcnT,KAKX4S,UC9JAxI,GAXU,SAAC9M,GACtB,OACI,wBAAIoL,UAAU,UACV,4BAAQC,QAASrL,EAAM+M,OACnB,uBAAG3B,UAAU,uCACb,uBAAGA,UAAU,sCCAvB8K,G,4MACF/O,MAAQ,CACJgP,WAAW,EACXC,aAAa,EACbC,cAAc,EACdzP,OAAQ,GACR0P,eAAgB,I,EAGpBC,cAAgB,WACZ,EAAKrL,SAAS,CAACiL,WAAW,K,EAG9BK,eAAiB,WACb,EAAKtL,SAAS,CAACiL,WAAW,EAAOvP,OAAQ,M,EAG7C6P,gBAAkB,WACd,EAAKvL,SAAS,CAACkL,aAAa,K,EAGhCM,iBAAmB,WACf,EAAKxL,SAAS,CAACkL,aAAa,K,EAGhCO,UAAY,WACRC,GAAgBjB,aAAa,EAAKxO,MAAMP,QAAQ,SAAA5E,GAC5CK,QAAQC,IAAIN,GACZ,EAAKhC,MAAM6W,YAAY,EAAK1P,MAAMP,OAAQ5E,EAASG,KAAK2U,eAAgB9U,EAASG,KAAK4U,YACtF,EAAK7L,SAAS,CAACiL,WAAW,EAAOvP,OAAQ,QAC1C,SAAA3E,GACC+U,MAAM,uB,EAIdC,WAAa,WACTL,GAAgBd,YAAW,SAAA9T,GACvB,EAAKhC,MAAM6W,YAAY,EAAK7W,MAAM4G,OAAQ,EAAK5G,MAAM6G,mBAAmB,MACzE,SAAA5E,Q,EAKPiV,kBAAoB,WAChBN,GAAgBb,aAAa,EAAK5O,MAAMmP,gBAAgB,SAAAtU,GACpD,EAAKhC,MAAM6W,YAAY,EAAK7W,MAAM4G,OAAQ,EAAK5G,MAAM6G,mBAAmB,GACxE,EAAKqE,SAAS,CAACkL,aAAa,EAAOE,eAAgB,QACpD,SAAArU,Q,EAKPkV,kBAAoB,WAChBP,GAAgBZ,aAAY,SAAAhU,Q,uDAItB,IAAD,OACDoV,EAAkB,MAItB,MAH+B,UAA3BzL,KAAK3L,MAAMkG,KAAKhE,SAAoBkV,GAAmB,WAC5B,QAA3BzL,KAAK3L,MAAMkG,KAAKhE,SAAkBkV,GAAmB,SAC1B,WAA3BzL,KAAK3L,MAAMkG,KAAKhE,SAAqBkV,GAAmB,WAExD,6BACI,kBAACC,GAAD,CACI3M,QAASiB,KAAKxE,MAAMgP,UACpBhB,QAASxJ,KAAK6K,eACdpB,UAAWzJ,KAAKgL,UAChBtB,aAAa,eAEb,2CACA,4CACA,kEACA,2BAAO9F,MAAO5D,KAAKxE,MAAMP,OAClB6J,SAAU,SAAC4B,GAAD,OAAW,EAAKnH,SAAS,CAACtE,OAAQyL,EAAMhG,OAAOkD,YAEpE,kBAAC8H,GAAD,CACI3M,QAASiB,KAAKxE,MAAMiP,YACpBjB,QAASxJ,KAAK+K,iBACdtB,UAAWzJ,KAAKuL,kBAChB7B,aAAa,iBACb,oDACA,2BAAO9F,MAAO5D,KAAKxE,MAAMmP,eAClBjP,KAAK,WACLoJ,SAAU,SAAC4B,GAAD,OAAW,EAAKnH,SAAS,CAACoL,eAAgBjE,EAAMhG,OAAOkD,YAE5E,yBAAKnE,UAAW,gBAAkBgM,GAC9B,wBAAIhM,UAAU,cACV,kBAAC,GAAD,CAAkB2B,MAAOpB,KAAK3L,MAAMkN,oBAExC,yBAAK9B,UAAU,mBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,kBAAf,oBAEJ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,YACdO,KAAK3L,MAAM4G,OACR,kBAAC,IAAMiH,SAAP,KACI,4BAAQzC,UAAU,WAAWC,QAASM,KAAK4K,eAA3C,kBACE5K,KAAK3L,MAAM6G,kBAGT8E,KAAK3L,MAAM8G,aACX,4BAAQsE,UAAU,eAAeC,QAASM,KAAK8K,iBAA/C,iBAEA,4BAAQrL,UAAU,eAAeC,QAASM,KAAKsL,YAA/C,eALA,4BAAQ7L,UAAU,eAAeC,QAASM,KAAK4K,eAA/C,sBAQR,4BAAQnL,UAAU,uBAAuBC,QAASM,KAAK4K,eAAvD,eAEJ,4BAAQnL,UAAU,2BAA2BC,QAASM,KAAKwL,kBACnDrM,MAAM,6BAA4B,uBAAGM,UAAU,sBAE3D,yBAAKA,UAAU,gBACVO,KAAK3L,MAAMkG,KAAKT,QACb,kBAAC,IAAMoI,SAAP,KACI,uBAAGzC,UAAU,wBACb,yBAAKA,UAAU,WACVO,KAAK3L,MAAMkG,KAAKT,UAEJ,a,GAzHtBsG,IAAMjM,WAiJtBkM,gBAfS,SAAA7E,GACpB,MAAO,CACHP,OAAQO,EAAM8B,MAAMrC,OACpBC,kBAAmBM,EAAM8B,MAAMpC,kBAC/BC,aAAcK,EAAM8B,MAAMnC,aAC1BZ,KAAMiB,EAAM8B,MAAM/C,SAIC,SAAA2D,GACvB,MAAO,CACHgN,YAAa,SAACjQ,EAAQC,EAAmBC,GAA5B,OAA6C+C,EClHvC,SAACjD,EAAQC,EAAmBC,GAA5B,MAA8C,CACrEO,K1CnC8B,qB0CmCQC,QAAS,CAC3CV,OAAQA,EACRC,kBAAmBA,EACnBC,aAAcA,ID8GqD+P,CAAYjQ,EAAQC,EAAmBC,QAInGkF,CAA6CkK,IE5ItDoB,G,4MACFnQ,MAAQ,CACJ8F,gBAAgB,G,EAGpBsK,aAAe,WACX,IAAMC,EAAc,EAAKxX,MAAMoD,OAC/B,GAAI5D,EAAWE,UAAW,CACtB,IAAM+X,EAAc,EAAKzX,MAAMyX,YAC3BA,IAAgBD,GAChB,EAAKxX,MAAMmK,UAAUsN,OAEtB,CACH,IAAMC,EAAY,EAAK1X,MAAM0N,MAAMpJ,OAAOlB,OACtCsU,IAAcF,GACd,EAAKxX,MAAMmK,UAAUuN,K,EAajCxK,iBAAmB,WACf,EAAKhC,UAAS,SAAAW,GACV,MAAO,CAACoB,gBAAiBpB,EAAUoB,oB,EAI3CI,OAAS,SAACC,GAAD,OAAY9N,EAAWC,WAAa,SAAW,EAAKO,MAAM0N,MAAMpJ,OAAOlB,OAASkK,EAASA,G,EAElGnC,OAAS,WACL,IAAIoC,EAAgB/N,EAAWC,WAAa,CAAC,QAAU,CAAC,QAAS,QAKjE,OAJI,EAAK0H,MAAM8F,gBACXM,EAAc9J,KAAK,UAEvB8J,EAAgBA,EAAc3J,KAAK,KAE/B,6BACI,yBAAKwH,UAAWmC,GACX/N,EAAWC,WAAa,kBAAC,EAAD,MAAa,kBAAC,GAAD,CAAkByN,iBAAkB,EAAKA,mBAC/E,wBAAI9B,UAAU,cACT5L,EAAWC,WAAa,kBAAC,GAAD,CAAkBsN,MAAO,kBAAM,EAAKG,sBAAwB,KACrF,4BAAI,kBAAC,IAAD,CAASM,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,KAAMxC,OAAK,GAC7D,uBAAGO,UAAU,2BAA0B,6CAE3C,4BAAI,kBAAC,IAAD,CAASoC,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,aAClD,uBAAGjC,UAAU,wBAAuB,0CAKvC5L,EAAWE,UACR,kBAAC,IAAMmO,SAAP,KACI,4BAAI,kBAAC,IAAD,CAASL,gBAAgB,SAAS7C,GAAI,EAAK0C,OAAO,aAClD,uBAAGjC,UAAU,yBAAwB,4CAEzC,6BACA,4BACI,uBAAGmB,KAAK,WAAWF,OAAO,SAASC,IAAI,uBACnC,uBAAGlB,UAAU,4BACb,2CAGR,4BACI,uBAAGmB,KAAK,mCAAmCF,OAAO,SAASC,IAAI,uBAC3D,uBAAGlB,UAAU,kCACb,4CAGR,4BACI,uBAAGmB,KAAK,0BAA0BF,OAAO,SAASC,IAAI,uBAClD,uBAAGlB,UAAU,0BACb,gDAGR,4BACI,uBAAGmB,KAAK,qBAAqBF,OAAO,SAASC,IAAI,uBAC7C,uBAAGlB,UAAU,sBACb,6CAKZ,kBAAC,IAAMyC,SAAP,KACI,4BAAI,kBAAC,IAAD,CAASL,gBAAgB,SAAS7C,GAAG,aACrC,uBAAGS,UAAU,2BAA0B,2CAE3C,kBAACuM,GAAD,QAIZ,yBAAKvM,UAAU,WACV5L,EAAWC,WACR,kBAAC,IAAMoO,SAAP,gBAEI,kBAAC+J,GAAD,CAASxU,OAAQ,EAAKpD,MAAM0N,MAAMpJ,OAAOlB,UAE7C,KACH,EAAKpD,MAAMyN,WAGpB,yBAAKrC,UAAU,UACf,kBAAC,EAAD,Q,kEAvFRO,KAAK4L,iB,yCAGU3L,EAAWC,EAAWC,GACrCH,KAAK4L,mB,GAzBYxL,IAAMjM,WAkIhBkM,gBAhBS,SAAA7E,GACpB,IAAIiM,EAAM,CACNjQ,UAAWgE,EAAMgC,IAAIhG,UACrBC,OAAQ+D,EAAMgC,IAAI/F,QAKtB,OAHG5D,EAAWE,YACV0T,EAAG,YAAkBjM,EAAM8B,MAAM/C,KAAKQ,IAEnC0M,KAGgB,SAAAvJ,GAAQ,MAAK,CACpCM,UAAW,SAAC/G,GAAD,OAAYyG,EAASM,EAAU/G,QAI/B4I,CAA6CsL,ICzF7CO,G,4MAnDX1Q,MAAQ,CACJ2Q,SAAS,G,EAGbC,YAAc,WACV,EAAK7M,UAAS,SAAAW,GACV,MAAO,CAACiM,SAAUjM,EAAUiM,a,EAIpCE,MAAQ,WACJ,EAAKhY,MAAMiY,UACX,EAAKF,e,uDAIL,OACI,kBAAC,IAAMlK,SAAP,KACI,wBAAIzC,UAAW,iBAAmBO,KAAKxE,MAAM2Q,QAAU,SAAW,KAC9D,yBAAKzM,QAASM,KAAKoM,aAAnB,sBACuB,uBAAG3M,UAAU,0BAEpC,yBAAKA,UAAU,wBACVO,KAAK3L,MAAMyN,SACZ,yBAAKrC,UAAU,cACX,yBAAKA,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASM,KAAKoM,aAA3C,WAEJ,yBAAK3M,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASM,KAAKqM,OAA3C,aAKhB,wBAAI5M,UAAU,uBAENO,KAAK3L,MAAMkY,OAAO1X,KACd,SAAA+O,GAAK,OACD,wBAAI9O,IAAK8O,EAAM9O,KACX,0BAAM6K,MAAO,CAACkB,gBAAiB+C,EAAM9D,SACpC8D,EAAM9O,c,GAzCjBsL,IAAMjM,WCYjBqY,GAXF,SAACnY,GACV,IAAMoL,EAAYpL,EAAM2S,YAAc,QAAU3S,EAAM2S,YAAc,OACpE,OACI,yBAAKvH,UAAWA,GACZ,yBAAKA,UAAU,gBACVpL,EAAMyN,YCHR2K,GAFG,SAACpY,GAAD,OAAW,yBAAKoL,UAAU,cAAcpL,EAAMyN,WCEjD4K,GAFK,SAACrY,GAAD,OAAW,yBAAKoL,UAAW,gBAAkBpL,EAAMoL,UAAY,IAAMpL,EAAMoL,UAAY,KAAOpL,EAAMyN,WCQzG6K,GARC,SAACtY,GACb,OACI,yBAAKoL,UAAU,YACVpL,EAAMyN,WCsCJ8K,G,4MAzCXpR,MAAQ,CACJqR,SAAS,IAAI/P,MAAOgQ,UACpBC,QAAQ,EACRC,QAAQ,EACRC,MAAM,G,EAEVC,SAAW,SAAAtJ,GAAK,OAAIA,EAAQ,GAAK,IAAMA,EAAQA,G,EAO/CnJ,MAAQ,WACJ4D,YAAW,WACP,IAAMwO,EAAW,EAAKxY,MAAMwY,QAAW,EAAKxY,MAAMwY,QAAU,EAAKrR,MAAMqR,QACjEM,GAAc,IAAIrQ,MAAOgQ,UACzBM,EAAOC,UAAUF,EAAcN,GAAW,KAC1CE,EAAUK,EAAO,GACjBJ,EAAUK,SAASD,EAAO,IAAM,GAChCH,EAAQI,SAASD,EAAO,MAC9B,EAAK7N,SAAS,CACVwN,QAASA,EACTC,QAASA,EACTC,MAAOA,MAEZ,M,kEAlBHjN,KAAKvF,U,yCAEUwF,EAAWC,EAAWC,GACrCH,KAAKvF,U,+BAoBL,OACI,6BACI,yBAAKgF,UAAU,cAAcO,KAAKxE,MAAMyR,OACxC,yBAAKxN,UAAU,gBAAf,KAAiCO,KAAKkN,SAASlN,KAAKxE,MAAMwR,UAC1D,yBAAKvN,UAAU,gBAAf,KAAiCO,KAAKkN,SAASlN,KAAKxE,MAAMuR,e,GApCtD3M,IAAMjM,W,oBCSXmZ,GARG,SAACjZ,GACf,OACI,yBAAKoL,UAAU,mBACVpL,EAAMyN,WCQJyL,GAXI,SAAClZ,GAChB,OACI,yBAAKoL,UAAU,eACX,4BAAKpL,EAAM8K,OACX,yBAAKM,UAAU,eACX,8BAAOpL,EAAMuP,UCsDdvD,gBANS,SAAA7E,GACpB,MAAO,CACHjB,KAAMiB,EAAM8B,MAAM/C,QAIX8F,EAnDM,SAAChM,GAClB,IAAMkG,EAAOlG,EAAMkG,KACbiT,EAAgBC,KAAO,IAAI3Q,KAAKvC,EAAKE,QAAQiT,OAAO,cACpDC,EAAgBF,KAAO,IAAI3Q,KAAKvC,EAAKE,QAAQiT,OAAO,aAC1D,OACI,kBAAC,IAAMxL,SAAP,KACI,kBAAC,GAAD,KACI,kBAAC0L,GAAD,KACI,kBAAC,GAAD,wBACA,kBAACC,GAAD,KACI,kBAAC,GAAD,CAAOhB,QAAStS,EAAKE,QACrB,kBAACoT,GAAD,CAAapO,UAAU,WAAW+N,GAClC,kBAACK,GAAD,CAAapO,UAAU,WAAWkO,MAI9C,kBAAC,GAAD,KACI,kBAACC,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,mBACA,kBAAC6G,GAAD,CACIpO,UAAU,aAAalF,EAAKC,OAAS,SAAW,oBAExD,kBAACoT,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,sBACA,kBAAC6G,GAAD,CAAapO,UAAU,aAAalF,EAAKG,OAAS,UAAY,cAGtE,kBAAC,GAAD,KACI,kBAACkT,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,uBACA,kBAAC6G,GAAD,KAActT,EAAKI,SAEvB,kBAACiT,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,wBACA,kBAAC6G,GAAD,KAActT,EAAKK,SAG3B,kBAACkT,GAAD,KACI,kBAACC,GAAD,CAAY5O,MAAM,eAAeyE,MAAOrJ,EAAKM,UAC7C,kBAACkT,GAAD,CAAY5O,MAAM,gBAAgByE,MAAOrJ,EAAKO,iBC7C/C2R,GAFG,SAACpY,GAAD,OAAW,yBAAKoL,UAAU,eAAepL,EAAMyN,WCElD4K,GAFK,SAACrY,GAAD,OAAW,yBAAKoL,UAAU,eAAepL,EAAMyN,WCU7DkM,GAAgB,CAAC,QAAS,SAAU,WAEpCC,G,4MACFzS,MAAQ,CACJ0S,OAAQ,S,EAGZC,aAAe,WACX,EAAK5O,UAAS,SAAA/D,GACV,IAAMsD,GAASkP,GAAcjZ,QAAQyG,EAAM0S,QAAU,GAAKF,GAAc/Y,OACxE,OAAO,2BACAuG,GADP,IAEI0S,OAAQF,GAAclP,S,EAKlCU,OAAS,WACL,IAAI4O,EAAe,EACf,EAAK/Z,MAAMsI,qBACXyR,EAAgB,EAAK/Z,MAAMmD,UAAUmF,mBAAqB,EAAKtI,MAAMsI,oBACzEyR,GAAgB,IAAMA,GAAcvK,QAAQ,GAC5C,IAAMwK,EAAa,EAAKha,MAAMmD,UAAUyF,KAAKN,mBAAqB,EAAKtI,MAAMmD,UAAUyF,KAAKL,qBACtF0R,GAAmBD,EAAa,EAAI,IAAM,EAAKha,MAAMmD,UAAUyF,KAAKN,mBAAqB0R,EAAa,KAAKxK,QAAQ,GACnH0K,GAAqBF,EAAa,EAAI,IAAM,EAAKha,MAAMmD,UAAUyF,KAAKL,qBAAuByR,EAAa,GAAGxK,QAAQ,GACrHnM,EAAW,EAAKrD,MAAM8C,KAAK+E,UAC7BsL,EAAU,EASd,OARyB,IAArB9P,EAASyE,UACTqL,EAAU,KAAS,EAAKnT,MAAMmD,UAAUyF,KAAKf,UAAUc,IAAM,IAAMtF,EAASyE,QAAU,GAAK,OAErE,WAAtB,EAAKX,MAAM0S,OACX1G,GAAW,EACkB,YAAtB,EAAKhM,MAAM0S,SAClB1G,GAAW,IAGX,yBAAK/H,UAAU,YACX,kBAAC,GAAD,KACI,kBAACmO,GAAD,KACI,kBAAC,GAAD,qBACA,kBAACC,GAAD,KACI,kBAAC,GAAD,CAAOhB,QAAS,EAAKxY,MAAMmD,UAAUqF,aAEzC,kBAAC,GAAD,qBACA,kBAACgR,GAAD,KAAcO,EAAd,OAGR,kBAAC,GAAD,KACI,kBAACR,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,yBACA,kBAAC6G,GAAD,KAAczJ,GAAe,EAAK/P,MAAMmD,UAAUyF,KAAKC,UAAvD,SAEJ,kBAAC0Q,GAAD,CAAM5G,YAAY,aACd,kBAAC,GAAD,uBACA,kBAAC6G,GAAD,KAAczJ,GAAe,EAAK/P,MAAMmD,UAAUyF,KAAKE,QAAvD,UAGR,kBAAC,GAAD,KACI,kBAACyQ,GAAD,KACI,kBAAC,GAAD,uBACA,kBAACY,GAAD,cAAmBF,EAAnB,KACA,kBAACT,GAAD,KAAc,EAAKxZ,MAAMmD,UAAUyF,KAAKN,oBACxC,kBAAC6R,GAAD,gBAAqBD,EAArB,KACA,kBAACV,GAAD,KAAc,EAAKxZ,MAAMmD,UAAUyF,KAAKL,wBAGhD,kBAAC,GAAD,KACI,kBAACgR,GAAD,KACI,kBAAC,GAAD,iBACA,kBAACY,GAAD,gBAAoB,6BAApB,gBACA,kBAACX,GAAD,KAAczJ,GAAmB,EAAK/P,MAAMmD,UAAUyF,KAAKf,UAAUa,SAArE,OACA,kBAACyR,GAAD,sBACA,kBAACX,GAAD,KAAczJ,GAAmB,EAAK/P,MAAMmD,UAAUyF,KAAKf,UAAUc,KAArE,SAGR,kBAAC,GAAD,KACI,kBAAC4Q,GAAD,KACI,kBAAC,GAAD,0BACA,kBAACC,GAAD,KAAczJ,GAAeoD,GAA7B,QACA,kBAACiH,GAAD,2BACA,kBAACZ,GAAD,KACK,EAAKrS,MAAM0S,OACZ,uBAAGzO,UAAU,iBAAiBC,QAAS,EAAKyO,kBAIvDta,EAAWE,UACR,kBAAC2a,GAAD,MACA,KACJ,yBAAKjP,UAAU,Y,YAvFTW,IAAMjM,WAmGbkM,gBANS,SAAA7E,GAAK,MAAK,CAC9BhE,UAAWgE,EAAMgC,IAAIhG,UACrBgG,IAAKhC,EAAMgC,IACXrG,KAAMqE,EAAMgC,IAAIrG,QAGLkJ,CAAyB4N,I,wCCjGlCU,GAAiB,CACnB,CAAC7Z,IAAK,UAAWgL,MAAO,WACxB,CAAChL,IAAK,MAAOgL,MAAO,YAGlB8O,GAAc,CAChB,CAAC9Z,IAAK,QAASgL,MAAO,WACtB,CAAChL,IAAK,UAAWgL,MAAO,YAGtB+O,G,4MACFrT,MAAQ,CACJ9D,SAAU,CACNuF,KAAM,GACNzG,KAAM,GACNsY,SAAU,KACVC,SAAU,KACVC,OAAQ,KACRC,OAAQ,MAEZ/W,MAAO,CACH+E,KAAM,GACNzG,KAAM,GACNsY,SAAU,KACVC,SAAU,KACVC,OAAQ,KACRC,OAAQ,MAEZxX,OAAQ,I,EAGZyX,iBAAmB,SAACpa,EAAK8O,GACrB,EAAKrE,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEI9D,SAAS,2BACF8D,EAAM9D,UADL,mBAEH5C,EAAM8O,U,EAMvBuL,cAAgB,SAACra,EAAK8O,GAClB,EAAKrE,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEItD,MAAM,2BACCsD,EAAMtD,OADR,mBAEApD,EAAM8O,U,EAMvBwL,aAAe,SAACN,EAAUC,GACtB,GAAID,GAAYC,EAAU,CACtB,IAAMM,EAAUP,EAASQ,eACnBC,EAAU,IAAIzS,KAAKiS,EAASS,YAAYC,eAE9C,OADsB,IAAI3S,KAAKuS,EAAU,IAAME,GAC1BzC,UAAY,IAErC,OAAO,M,EAGX4C,kBAAoB,WAAoB,IAAnBC,EAAkB,wDACnC,GAAI,EAAKtb,MAAMoD,SAAW,EAAK+D,MAAM9D,SAASuF,MAAQ0S,EAAO,CACzD,EAAKpQ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEI9D,SAAS,2BACF8D,EAAM9D,UADL,IAEJuF,KAAM,EAAK5I,MAAMoD,cAI7B,IAAII,EAAgB,EAAKuX,aAAa,EAAK5T,MAAM9D,SAASoX,SAAU,EAAKtT,MAAM9D,SAASqX,UACpFhX,EAAc,EAAKqX,aAAa,EAAK5T,MAAM9D,SAASsX,OAAQ,EAAKxT,MAAM9D,SAASuX,QACpF/X,EAAWQ,SAAS,EAAKrD,MAAMoD,OAAQ,CACnCI,cAAeA,EACfE,YAAaA,IACdT,MAAK,SAAAjB,GACJ,EAAKkJ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEI9D,SAAS,2BACF8D,EAAM9D,UADL,IAEJuF,KAAM,EAAK5I,MAAMoD,OACjBjB,KAAMH,EAASG,iB,EAQvCoZ,eAAiB,WAAoB,IAAnBD,EAAkB,wDAChC,GAAI,EAAKtb,MAAMoD,SAAW,EAAK+D,MAAMtD,MAAM+E,MAAQ0S,EAAO,CACtD,EAAKpQ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEItD,MAAM,2BACCsD,EAAMtD,OADR,IAED+E,KAAM,EAAK5I,MAAMoD,cAI7B,IAAII,EAAgB,EAAKuX,aAAa,EAAK5T,MAAMtD,MAAM4W,SAAU,EAAKtT,MAAMtD,MAAM6W,UAC9EhX,EAAc,EAAKqX,aAAa,EAAK5T,MAAMtD,MAAM8W,OAAQ,EAAKxT,MAAMtD,MAAM+W,QAC9E/X,EAAWgB,MAAM,EAAK7D,MAAMoD,OAAQ,CAChCI,cAAeA,EACfE,YAAaA,IACdT,MAAK,SAAAjB,GACJ,EAAKkJ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEItD,MAAM,2BACCsD,EAAMtD,OADR,IAED+E,KAAM,EAAK5I,MAAMoD,OACjBjB,KAAMH,EAASG,iB,EAQvCqZ,cAAgB,WACR,EAAKxb,MAAMoD,SAAW,EAAK+D,MAAM/D,SACjC,EAAKpD,MAAMyb,kBACX,EAAKvQ,SAAS,CAAC9H,OAAQ,EAAKpD,MAAMoD,W,EAI1CsY,WAAa,WACT,EAAKL,oBACL,EAAKE,iBACL,EAAKC,iB,EAWTrQ,OAAS,WACL,OACI,6BACI,kBAAC,GAAD,MACA,kBAACmJ,GAAD,KACI,kBAAC,KAAD,CAAqBhO,OAAQ,KACzB,kBAAC,KAAD,CAAWnE,KAAM,EAAKgF,MAAM9D,SAASlB,MACjC,kBAAC,KAAD,CAAOwZ,QAAQ,YACRC,WAAW,MACXC,cAAe,SAAArT,GAAS,OAAI4Q,KAAO,IAAI3Q,KAAK,IAAOD,IAAY6Q,OAAO,YAC7E,kBAAC,KAAD,CAAOwC,cAAe,SAAAtM,GAAK,OAAKQ,GAAmBR,GAAS,SAC5D,kBAAC,KAAD,CAAeuM,gBAAgB,QAC/B,kBAAC,KAAD,CACIC,mBAAmB,EACnBhM,UAAW,SAACR,EAAOjK,EAAMtF,GAAd,OAAyB+P,GAAmBR,GAAS,OAChEyM,eAAgB,SAACzM,GAAD,OAAW6J,KAAO,IAAI3Q,KAAK,IAAO8G,IAAQ8J,OAAO,uBACrE,kBAAC,KAAD,CAAM0C,mBAAmB,EAAO1U,KAAK,SAASsU,QAAQ,UAAUM,OAAO,YACvE,kBAAC,KAAD,CAAMF,mBAAmB,EAAO1U,KAAK,WAAWsU,QAAQ,MAAMM,OAAO,YACrE,kBAAC,KAAD,CAAQC,cAAc,MAAM5V,OAAQ,OAG5C,kBAAC,GAAD,CACI2R,QAAS,kBAAM,EAAKoD,mBAAkB,IACtCnD,OAAQoC,IACR,uCACA,kBAAC,KAAD,CAAY6B,SAAU,EAAKhV,MAAM9D,SAASoX,SAC9BhK,SAAU,SAACtB,GAAD,OAAU,EAAK0L,iBAAiB,WAAY1L,MAClE,kBAAC,KAAD,CAAYI,MAAO,EAAKpI,MAAM9D,SAASqX,SAC3BjK,SAAU,SAAC2L,GAAD,OAAU,EAAKvB,iBAAiB,WAAYuB,MAClE,qCACA,kBAAC,KAAD,CAAYD,SAAU,EAAKhV,MAAM9D,SAASsX,OAC9BlK,SAAU,SAACtB,GAAD,OAAU,EAAK0L,iBAAiB,SAAU1L,MAChE,kBAAC,KAAD,CAAYI,MAAO,EAAKpI,MAAM9D,SAASuX,OAC3BnK,SAAU,SAAC2L,GAAD,OAAU,EAAKvB,iBAAiB,SAAUuB,QAGxE,kBAAC9H,GAAD,KACI,kBAAC,KAAD,CAAqBhO,OAAQ,KACzB,kBAAC,KAAD,CAAWnE,KAAM,EAAKgF,MAAMtD,MAAM1B,MAC9B,kBAAC,KAAD,CAAOwZ,QAAQ,OACRE,cAAe,SAAArT,GAAS,OAAI4Q,KAAO,IAAI3Q,KAAK,IAAOD,IAAY6Q,OAAO,YAC7E,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAeyC,gBAAgB,QAC/B,kBAAC,KAAD,CACIC,mBAAmB,EACnBC,eAAgB,SAACzM,GAAD,OAAW6J,KAAO,IAAI3Q,KAAK,IAAO8G,IAAQ8J,OAAO,uBACrE,kBAAC,KAAD,CACI0C,mBAAmB,EACnB1U,KAAK,SACLsU,QAAQ,QACRM,OAAO,YACX,kBAAC,KAAD,CACIF,mBAAmB,EACnB1U,KAAK,WACLsU,QAAQ,UACRM,OAAO,cAGnB,kBAAC,GAAD,CACIhE,QAAS,kBAAM,EAAKsD,gBAAe,IACnCrD,OAAQqC,IACR,uCACA,kBAAC,KAAD,CAAY4B,SAAU,EAAKhV,MAAMtD,MAAM4W,SAC3BhK,SAAU,SAACtB,GAAD,OAAU,EAAK2L,cAAc,WAAY3L,MAC/D,kBAAC,KAAD,CAAYI,MAAO,EAAKpI,MAAMtD,MAAM6W,SACxBjK,SAAU,SAAC2L,GAAD,OAAU,EAAKtB,cAAc,WAAYsB,MAC/D,qCACA,kBAAC,KAAD,CAAYD,SAAU,EAAKhV,MAAMtD,MAAM8W,OAC3BlK,SAAU,SAACtB,GAAD,OAAU,EAAK2L,cAAc,SAAU3L,MAC7D,kBAAC,KAAD,CAAYI,MAAO,EAAKpI,MAAMtD,MAAM+W,OACxBnK,SAAU,SAAC2L,GAAD,OAAU,EAAKtB,cAAc,SAAUsB,U,iEA9E9DxQ,EAAWC,EAAWC,GACrCH,KAAK+P,e,0CAIL/P,KAAK+P,iB,GAvIU3P,IAAMjM,WAmOhBuc,GAAoBrQ,aAXT,SAAA7E,GAAK,MAAK,CAC9BrE,KAAMqE,EAAMgC,IAAIhG,UAChBC,OAAQ+D,EAAMgC,IAAI/F,WAGK,SAAAyG,GACvB,MAAO,CACH4R,gBAAiB,kBAAM5R,EAASF,GAAsB,QAI7BqC,CAA6CwO,IAE/D7a,KAAW2X,GAAX3X,CAAuB0c,IC1PhCC,G,4MACFnV,MAAQ,CACJhD,SAAU,GACV8M,SAAS,EACTxL,QAAS,I,EAGbgL,SAAW,SAAC4B,GACR,EAAKnH,SAAS,CAAC/G,SAAUkO,EAAMhG,OAAOkD,S,EAG1CgN,OAAS,WACL,EAAKrR,SAAS,CAAC+F,SAAS,IACxB,IAAIuL,EAASlH,GAAgBC,aAC1B,EAAKvV,MAAM2G,gBACV6V,EAASlH,GAAgBG,cAE7B+G,EAAO,EAAKrV,MAAMhD,UAAUlB,MAAK,SAAAjB,GAC7B,EAAKkJ,SAAS,CAAC+F,SAAS,OACzB/N,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAAC+F,SAAS,Q,uDAM5B,OADA5O,QAAQC,IAAIqJ,KAAK3L,MAAM2G,eAEnB,yBAAKyE,UAAU,eACX,yBAAKA,UAAU,oBACX,mDAEI,2BAAO/D,KAAK,WAAWkI,MAAO5D,KAAKxE,MAAMhD,SAAUsM,SAAU9E,KAAK8E,YAEtE,4BAAQrF,UAAU,WAAWC,QAASM,KAAK4Q,QACtC5Q,KAAK3L,MAAM2G,cAAgB,gBAAkB,gBAC7CgF,KAAKxE,MAAM8J,QAAU,kBAAC,KAAD,CAAWxF,MAAM,UAAY,OAG1DE,KAAK3L,MAAM2G,cACR,yBAAKyE,UAAU,oBAAf,0CAEI,6BAFJ,wCAMA,yBAAKA,UAAU,oBAAf,2DAEI,6BAFJ,yD,GA7COW,IAAMjM,WAgElBkM,gBARS,SAAA7E,GAAK,MAAK,CAC9BR,cAAeQ,EAAM8B,MAAM/C,KAAKS,kBAGT,SAAAkD,GAAQ,MAAK,CACpCO,SAAU,kBAAMP,EAASO,SAGd4B,CAA6CsQ,ICtD7C3c,KAAW2X,GAAX3X,EAVI,SAACK,GAChB,OACI,yBAAKoL,UAAU,QACX,kBAACkJ,GAAD,KACI,kBAAC,GAAD,WCGKmI,G,4MACjBtV,MAAQ,CACJuV,YAAa,GACbC,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,UAAW,I,EAyCfC,WAAa,SAAAxN,GAET,OADAlN,QAAQC,IAAIiN,GACT,EAAKvP,MAAM+c,WACH,EAAK/c,MAAM+c,WAAWxN,GAE1BA,G,qDA3CH,IAAD,SAC+B5D,KAAKxE,MAAlCuV,EADF,EACEA,YAAaC,EADf,EACeA,aAClB,GAAID,IAAgBC,GAAiC,KAAjBA,EAApC,CAQA,GAAID,EAAcC,EAAlB,OACkC,CAACA,EAAcD,GAA5CA,EADL,KACkBC,EADlB,KAEA,IAAMK,EAAYrR,KAAK3L,MAAMmC,KAAK8a,WAAU,SAAA7L,GAAI,OAAIA,EAAK,EAAKpR,MAAMkd,QAAUR,KACxES,EAAaxR,KAAK3L,MAAMmC,KAAK8a,WAAU,SAAA7L,GAAI,OAAIA,EAAK,EAAKpR,MAAMkd,QAAUP,KAC/EhR,KAAKT,UAAS,SAACkS,GAAD,MAAe,CACzBV,YAAa,GACbC,aAAc,GACdC,UAAWF,EACXG,QAASF,EACTG,UAAW,EAAK9c,MAAMmC,KAAKkb,MAAML,EAAWG,YAhB5CxR,KAAKT,UAAS,iBAAO,CACjBwR,YAAa,GACbC,aAAc,S,kCAiBdja,GACR,IACIiJ,KAAKT,SAAS,CAACwR,YAAaha,EAAE4a,cACjC,MAAO5a,O,kCAIAA,GACR,IACOiJ,KAAKxE,MAAMuV,aACV/Q,KAAKT,SAAS,CAACyR,aAAcja,EAAE4a,cACtC,MAAO5a,O,+BAcR,IAAIoa,EAAYnR,KAAKxE,MAAM2V,UAG3B,OAFwB,IAArBA,EAAUlc,SACTkc,EAAYnR,KAAK3L,MAAMmC,MAEvB,yBAAKiJ,UAAU,wBACX,kBAAC,KAAD,CAAqB9E,OAAQ,KACzB,kBAAC,KAAD,CAAUnE,KAAM2a,GACZ,kBAAC,KAAD,CACIjB,cAAelQ,KAAKoR,WACpBpB,QAAShQ,KAAK3L,MAAMkd,OACxB,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAepB,gBAAgB,QAC/B,kBAAC,KAAD,CAASC,mBAAmB,IAC5B,kBAAC,KAAD,CACIA,mBAAmB,EACnBJ,QAAShQ,KAAK3L,MAAMud,KACpBtB,OAAQtQ,KAAK3L,MAAMyL,MACnB+R,KAAM7R,KAAK3L,MAAMyL,UAG7B,kBAAC,KAAD,CAAqBnF,OAAQ,KACzB,kBAAC,KAAD,CAAWnE,KAAMwJ,KAAK3L,MAAMmC,KACjBsb,YAAa9R,KAAK8R,YAAYC,KAAK/R,MACnCgS,YAAahS,KAAKgS,YAAYD,KAAK/R,MACnCiS,UAAWjS,KAAKkS,KAAKH,KAAK/R,OACjC,kBAAC,KAAD,CAAOgQ,QAAShQ,KAAK3L,MAAMkd,OAC3B,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAepB,gBAAgB,QAC/B,kBAAC,KAAD,CACIzU,KAAK,WACLsU,QAAShQ,KAAK3L,MAAMud,KACpBtB,OAAQtQ,KAAK3L,MAAMyL,MACnB+R,KAAM7R,KAAK3L,MAAMyL,MACjBsQ,mBAAmB,IACtBpQ,KAAKxE,MAAMuV,aAAe/Q,KAAKxE,MAAMwV,aACtC,kBAAC,KAAD,CACImB,GAAInS,KAAKxE,MAAMuV,YACfqB,GAAIpS,KAAKxE,MAAMwV,aACfqB,cAAe,KACZ,kBAAC,KAAD,CACHF,GAAI,EACJC,GAAIpS,KAAKxE,MAAMyV,UACfoB,cAAe,KAElBrS,KAAKxE,MAAMuV,aAAe/Q,KAAKxE,MAAMwV,aAAe,KAAM,kBAAC,KAAD,CACnDmB,GAAInS,KAAKxE,MAAM0V,QACfkB,GAAIpS,KAAK3L,MAAMmC,KAAKvB,OAAS,EAC7Bod,cAAe,Y,GAvGJjS,IAAMjM,WCsElCme,G,4MA7EX9W,MAAQ,CACJnB,OAAQ,EACRiB,QAAS,GACTiX,aAAc,EACdC,cAAc,EACdlN,SAAS,EACTmN,iBAAiB,EACjBC,eAAgB,I,EAGpB5N,SAAW,SAAChQ,EAAK8O,GACb,EAAKrE,SAAL,gBAAgBzK,EAAM8O,K,EAG1B+O,aAAe,WACX,EAAKpT,SAAS,CAACkT,iBAAiB,IAChC9I,GAAgBI,QAAQ,EAAKvO,MAAMF,QAA6B,IAApB,EAAKE,MAAMnB,QAAc/C,MAAK,SAAAjB,GACtE,EAAKkJ,SAAS,CAACkT,iBAAiB,EAAOC,eAAgBrc,EAASG,UACjEe,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAACkT,iBAAiB,EAAOC,eAAgBpc,EAAME,W,EAIrEoc,iBAAmB,SAACC,GACbA,GACC,EAAKtT,SAAS,CAAC+F,SAAS,IAE5BqE,GAAgBtO,UAAU/D,MAAK,SAAAjB,GAC3B,EAAKkJ,SAAS,CACVgT,aAAclc,EAASG,KAAK6E,QAC5BmX,cAAc,EACdlN,SAAS,OAEd/N,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAAC+F,SAAS,Q,kEAKxBtF,KAAKxE,MAAMgX,cAAiBxS,KAAKxE,MAAM8J,SACvCtF,KAAK4S,kBAAiB,K,+BAIpB,IAAD,OACL,OACI,yBAAKnT,UAAU,eACX,yBAAKA,UAAU,oBACX,mDAEI,2BAAOmE,MAAO5D,KAAKxE,MAAMF,QAClBwJ,SAAU,SAAA4B,GAAK,OAAI,EAAK5B,SAAS,UAAW4B,EAAMhG,OAAOkD,WAEpE,wCAEI,2BAAOA,MAAO5D,KAAKxE,MAAMnB,OAClByK,SAAU,SAAA4B,GAAK,OAAI,EAAK5B,SAAS,SAAU4B,EAAMhG,OAAOkD,WAEnE,4BAAQnE,UAAU,WAAWC,QAASM,KAAK2S,cAA3C,OAEK3S,KAAKxE,MAAMiX,gBAAkB,kBAAC,KAAD,CAAW3S,MAAM,UAAY,MAE/D,6BAAME,KAAKxE,MAAMkX,iBAErB,yBAAKjT,UAAU,oBACX,8CACA,4BAAK2E,GAAepE,KAAKxE,MAAM+W,cAA/B,SACA,4BAAQ9S,UAAU,WAAWC,QAAS,kBAAM,EAAKkT,kBAAiB,KAAlE,SAEK5S,KAAKxE,MAAM8J,QAAU,kBAAC,KAAD,CAAWxF,MAAM,UAAY,Y,GAtEnDM,IAAMjM,WCFxBsO,ICAiBrC,IAAMjM,UDAb,CACZ,CACIgL,MAAO,UACP2T,UAAW,OACXhe,IAAK,QAET,CACIqK,MAAO,cACP2T,UAAW,cACXhe,IAAK,eAET,CACIqK,MAAO,YACP2T,UAAW,YACXhe,IAAK,aAET,CACIqK,MAAO,eACP2T,UAAW,SACXhe,IAAK,UAET,CACIqK,MAAO,UACP2T,UAAW,KACXhe,IAAK,Q,IAIQsL,IAAMjM,U,mBEdrBsO,GAAU,CACZ,CAACM,OAAQ,UAAWjO,IAAK,UAAW6N,QAAS,SAAAS,GAAG,OAAIA,IACpD,CAACL,OAAQ,IAAKjO,IAAK,SAAU6N,QAZb,SAAAS,GAAG,OACnB,kBAAC,KAAD,CACI5D,OAAQ,gBAAEuT,EAAF,EAAEA,KAAF,OACJ,yBAAKrT,QAAS,kBAAMqT,EAAK3P,KACrB,kBAACE,EAAA,EAAD,CAAM3J,KAAK,gBCIrBqZ,IDOkB5S,IAAMjM,U,4MCN1BqH,MAAQ,CACJhF,KAAM,GACN4B,OAAQ,CACJ6E,KAAM,GACNzG,KAAM,IAEV2B,OAAQ,CACJ8E,KAAM,GACNzG,KAAM,CACF,CAACgN,MAAM,IAAI1G,MAAOgQ,UAAY,IAAM3U,OAAQ,M,EAKxD8a,gBAAkB,WAAoB,IAAnBtD,EAAkB,yDAC7B,EAAKtb,MAAMoD,SAAW,EAAK+D,MAAMrD,OAAO8E,MAAQ0S,KAChD,EAAKpQ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEIrD,OAAO,2BACAqD,EAAMrD,QADP,IAEF8E,KAAM,EAAK5I,MAAMoD,cAI7BP,EAAWiB,OAAO,EAAK9D,MAAMoD,QAAQH,MAAK,SAAAjB,GACtC,EAAKkJ,UAAS,SAAA/D,GACV,IAAIhF,EAAOH,EAASG,KAAKkN,QAQzB,OAPKlN,GAAwB,IAAhBA,EAAKvB,SACduB,EAAO,CAAC,CAACgN,MAAM,IAAI1G,MAAOgQ,UAAY,IAAM3U,OAAQ,KACxD3B,EAAK4O,SAAQ,SAAA8N,GACLA,EAAS7Y,OAAS,IAClB6Y,EAAS7Y,QAAU6Y,EAAS7Y,WAG7B,2BACAmB,GADP,IAEIrD,OAAO,2BACAqD,EAAMrD,QADP,IAEF8E,KAAM,EAAK5I,MAAMoD,OACjBjB,KAAMA,c,EAQ9B2c,gBAAkB,WAAoB,IAAnBxD,EAAkB,yDAC7B,EAAKtb,MAAMoD,SAAW,EAAK+D,MAAMpD,OAAO6E,MAAQ0S,KAChD,EAAKpQ,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEIpD,OAAO,2BACAoD,EAAMpD,QADP,IAEF6E,KAAM,EAAK5I,MAAMoD,cAI7BP,EAAWkB,OAAO,EAAK/D,MAAMoD,QAAQH,MAAK,SAAAjB,GACtCK,QAAQC,IAAIN,EAASG,MACrB,EAAK+I,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEIpD,OAAO,2BACAoD,EAAMpD,QADP,IAEF6E,KAAM,EAAK5I,MAAMoD,OACjBjB,KAAMH,EAASG,iB,EAQvCuZ,WAAa,WACT,EAAKkD,kBACL,EAAKE,mB,iEAGUlT,EAAWC,EAAWC,GACrCH,KAAK+P,e,0CAIL/P,KAAK+P,e,+BAKL,OACI,6BACKlc,EAAWE,WAAaiM,KAAK3L,MAAM4G,OAChC,kBAAC0N,GAAD,KACI,kBAAC,GAAD,OAEJ,KAIJ,kBAACA,GAAD,KACI,kBAAC,GAAD,CACIhO,OAAQ,IACRmF,MAAM,cACNyR,KAAK,OACLK,KAAK,SACLR,WAAY,SAAAvU,GAAS,OAAI4Q,KAAO,IAAI3Q,KAAK,IAAOD,IAAY6Q,OAAO,YAEnElX,KAAMwJ,KAAKxE,MAAMrD,OAAO3B,QAIhC,kBAACmS,GAAD,KACI,kBAAC,GAAD,CACIhO,OAAQ,IACRmF,MAAM,UACNyR,KAAK,SACLK,KAAK,UACLpb,KAAMwJ,KAAKxE,MAAMpD,OAAO5B,a,GAvHvB4J,IAAMjM,YAkJlBif,GAAsB/S,aAbX,SAAA7E,GACpB,IAAIiM,EAAM,CACNtQ,KAAMqE,EAAMgC,IAAIhG,UAChBC,OAAQ+D,EAAMgC,IAAI/F,QAKtB,OAHI5D,EAAWE,YACX0T,EAAIxM,OAASO,EAAM8B,MAAMrC,QAEtBwM,KAGgB,SAAAvJ,GAAQ,MAAK,KAELmC,CAA6C2S,IACjEhf,KAAW2X,GAAX3X,CAAuBof,IC3JvBC,GAJA,SAAChf,GACZ,OAAO,yBAAKqL,QAASrL,EAAMif,QAAS7T,UAAU,UAAUpL,EAAMsO,UCOnD4Q,GARC,SAAClf,GAAD,OACZ,yBAAKoL,UAAU,WACX,yBAAKA,UAAU,WACX,kBAAC,YAAD,CAAU2G,OAAQ/R,EAAMsO,aCarB6Q,GAfC,SAACnf,GACb,OACI,wBAAIoL,UAAWpL,EAAM0K,QAAU,SAAW,MACtC,kBAAC,GAAD,CACI4D,QAAStO,EAAM8K,MACfmU,QAASjf,EAAMof,SAEnB,kBAAC,GAAD,CACI9Q,QAAStO,EAAMsO,QACf5D,QAAS1K,EAAM0K,YCkBhB2U,G,4MA3BXlY,MAAQ,CACJuB,QAAS,G,EAEb4W,oBAAsB,SAAC7U,GACnB,EAAKS,SAAS,CAACxC,QAAS+B,K,EAG5BU,OAAS,WACL,IAAIlG,EAAW,EAAKjF,MAAMuf,KAAK/e,KAAI,SAAC8N,EAAS7D,GACzC,OACI,kBAAC,GAAD,CACIhK,IAAKgK,EACLK,MAAOwD,EAAQkR,SACflR,QAASA,EAAQmR,OACjB/U,QAAS,EAAKvD,MAAMuB,UAAY+B,EAChC2U,OAAQ,kBAAI,EAAKE,oBAAoB7U,SAIjD,OACI,wBAAIW,UAAU,aACTnG,I,YAtBO8G,IAAMjM,WCIxB4f,G,4MACFvY,MAAQ,CACJwY,UAAW,I,mEAGO,IAAD,OACjB9c,EAAWiC,UAAU,YAAY7B,MAAK,SAAAd,GAClC,EAAK+I,SAAS,CAACyU,UAAWxd,EAAKyF,a,+BAMnC,OADAvF,QAAQC,IAAIqJ,KAAKxE,MAAMwY,WAEnB,yBAAKvU,UAAU,OACX,kBAAC,GAAD,CAAWmU,KAAM5T,KAAKxE,MAAMwY,YAC5B,yBAAKvU,UAAU,WAAf,uE,GAhBEW,IAAMjM,WAwBTH,KAAW+U,GAAY,CAClC5J,MAAO,8BADInL,CAEZ+f,I,UCsEYE,G,4MAlGXzY,MAAQ,CACJ/C,UAAW,GACXkB,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACToa,QAAS,GACTC,gBAAiB,GACjBC,cAAe,I,EAGnBC,OAAS,SAACvf,EAAK8O,GACX,EAAKrE,SAAL,gBAAgBzK,EAAM8O,K,EAG1B0Q,aAAe,WACXpd,EAAWuC,aAAanC,MAAK,SAAAd,GACtBA,EAAK+d,WAAa,EAAK/Y,MAAM0Y,SAC5B,EAAK3U,SAAS,CAAC2U,QAAS1d,EAAK+d,e,EAazCC,mBAAqB,SAAC1a,EAAS2F,GAC3B,EAAKF,SAAS,CAAC4U,gBAAiBra,EAASsa,cAAe3U,IACxDpB,YAAW,WAAK,EAAKkB,SAAS,CAAC4U,gBAAiB,GAAIC,cAAe,OAAO,M,EAG9ExD,OAAS,SAAClK,GACNA,EAAM+N,iBACNvd,EAAWwC,QACP,EAAK8B,MAAM7B,KACX,EAAK6B,MAAM5B,MACX,EAAK4B,MAAM3B,QACX,EAAK2B,MAAM1B,QACX,EAAK0B,MAAM/C,WACbnB,MAAK,SAAAjB,GACH,EAAKme,mBAAmB,yBAA0B,cACnDjd,OAAM,SAAAjB,GACLI,QAAQC,IAAIL,GACZ,EAAKke,mBAAmB,oBAAqB,a,EAIrDhV,OAAS,WACL,OAAG,EAAKhE,MAAM0Y,QAEN,0BAAMQ,SAAU,EAAK9D,QACjB,yBAAKnR,UAAW,EAAKjE,MAAM4Y,eAAgB,EAAK5Y,MAAM2Y,iBACtD,2BAAOQ,QAAQ,gBAAf,aACA,2BAAOlV,UAAU,QACVmJ,GAAG,eACHlN,KAAK,OACLkI,MAAO,EAAKpI,MAAM7B,KAClBmL,SAAW,SAAA4B,GAAK,OAAI,EAAK2N,OAAO,OAAQ3N,EAAMhG,OAAOkD,UAE5D,2BAAO+Q,QAAQ,iBAAf,iBACA,2BAAOlV,UAAU,QACVmJ,GAAG,gBACHlN,KAAK,OACLkI,MAAO,EAAKpI,MAAM5B,MAClBkL,SAAW,SAAA4B,GAAK,OAAI,EAAK2N,OAAO,QAAS3N,EAAMhG,OAAOkD,UAE7D,2BAAO+Q,QAAQ,mBAAf,WACA,2BAAOlV,UAAU,QACVmJ,GAAG,kBACHlN,KAAK,OACLkI,MAAO,EAAKpI,MAAM3B,QAClBiL,SAAW,SAAA4B,GAAK,OAAI,EAAK2N,OAAO,UAAW3N,EAAMhG,OAAOkD,UAC/D,+BACI,kBAAC,KAAD,CACIgR,QAAS,EAAKpZ,MAAM0Y,QACpBpP,SAAU,SAAAlB,GAAK,OAAI,EAAKyQ,OAAO,YAAazQ,OAGpD,2BAAO+Q,QAAQ,mBAAf,WACA,8BAAU/L,GAAG,kBACHnJ,UAAU,WACVmU,KAAK,IACLhQ,MAAO,EAAKpI,MAAM1B,QAClBgL,SAAW,SAAA4B,GAAK,OAAI,EAAK2N,OAAO,UAAW3N,EAAMhG,OAAOkD,UAElE,2BAAOlI,KAAK,SAAS+D,UAAU,WAAWmE,MAAM,YAIrD,M,mEAtEP5D,KAAKsU,iB,yCAGUrU,EAAWC,EAAWC,GACrCH,KAAKsU,mB,GA7BalU,IAAMjM,WC8BjBH,KAAW+U,GAAY,CAClCnC,aAAa,EACbzH,MAAO,oCAFInL,EA5BC,WACZ,OACI,yBAAKyL,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WAAf,sBACuB,kBAAC,IAAD,CAAMT,GAAG,QAAT,SADvB,4IAKI,6BACA,6BANJ,kMAaJ,yBAAKS,UAAU,UACX,yBAAKA,UAAU,WACX,kBAAC,GAAD,QAGR,yBAAKA,UAAU,cCkCZoV,G,4MA1DXrZ,MAAQ,CACJsZ,YAAa,GACbC,YAAa,GACbC,gBAAiB,I,EAGrBpE,OAAS,a,EAITpR,OAAS,WACL,OACI,0BAAMkV,SAAU,EAAK9D,QACjB,yBAAKnR,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WAAf,2BAEI,6BACA,6BACA,6BACA,wEAGR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,+CACA,2BACI/D,KAAK,WACL+D,UAAU,QACVmE,MAAO,EAAKpI,MAAMsZ,YAClBhQ,SAAU,SAAA4B,GAAK,OAAI,EAAKnH,SAAS,cAAemH,EAAMhG,OAAOkD,UAEjE,+CACA,2BACIlI,KAAK,WACL+D,UAAU,QACVmE,MAAO,EAAKpI,MAAMuZ,YAClBjQ,SAAU,SAAA4B,GAAK,OAAI,EAAKnH,SAAS,cAAemH,EAAMhG,OAAOkD,UAEjE,sDACA,2BACIlI,KAAK,WACL+D,UAAU,QACVmE,MAAO,EAAKpI,MAAMwZ,gBAClBlQ,SAAU,SAAA4B,GAAK,OAAI,EAAKnH,SAAS,kBAAmBmH,EAAMhG,OAAOkD,UAErE,yBAAKnE,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAAS,EAAKkR,QAA3C,yBAIZ,yBAAKnR,UAAU,a,YArDNW,IAAMjM,WC2CpB8gB,G,4MAzCXzZ,MAAQ,CACJ0Z,OAAQ,I,EAGZC,UAAY,WACRje,EAAW6C,YAAYzC,MAAK,SAAAd,GACxB,EAAK+I,SAAS,CAAC2V,OAAQ1e,EAAK0e,a,EAIpC1V,OAAS,WACL,MAA0B,KAAtB,EAAKhE,MAAM0Z,OAEP,kBAAC,IAAMhT,SAAP,KACI,yBAAKzC,UAAU,eAAf,gDAEI,6BACA,qEAEJ,6BACA,6BACA,yBAAKA,UAAU,eACX,4BAAQC,QAAS,EAAKyV,UAAW1V,UAAU,YAA3C,uBAMZ,kBAAC,IAAMyC,SAAP,KACI,yBAAKzC,UAAU,eAAf,4CACA,yBAAKA,UAAU,eAAf,gCACJ,yBAAKA,UAAU,eACX,yBAAKE,MAAO,CAACkD,MAAO,SACfuS,IAAI,SACJC,IAAG,iCAA4B,EAAK7Z,MAAM0Z,a,YAnC3C9U,IAAMjM,WCiBXH,KAAWqN,EAAXrN,EAbC,SAACK,GACb,OACI,6BACI,kBAACsU,GAAD,KACI,kBAAC,GAAD,OAEJ,kBAACA,GAAD,KACI,kBAAC,GAAD,WCPVlG,GAAU,CACZ,CAACM,OAAQ,OAAQjO,IAAK,OAAQ6N,QAAS,SAACS,GAAD,OAAS7K,GAAS6K,EAAInG,QAC7D,CAAC8F,OAAQ,YAAajO,IAAK,YAAa6N,QAAS,SAACS,GAAD,OAAS1L,GAAS0L,EAAIlH,aACvE,CAAC6G,OAAQ,eAAgBjO,IAAK,gBAC9B,CAACiO,OAAQ,iBAAkBjO,IAAK,kBAChC,CAACiO,OAAQ,UAAWjO,IAAK,WACzB,CAACiO,OAAQ,SAAUjO,IAAK,SAAU6N,QAAS,SAACS,GAAD,OAASA,EAAI7M,UAGtD+e,G,4MACF9Z,MAAQ,CACJ,KAAQ,GACR,QAAW,OACX,WAAc,MACd,UAAa,EACb,QAAW,I,EAGf+Z,UAAY,WACRre,EAAWgC,WAAW5B,MAAK,SAAAjB,GACvB,EAAKkJ,SAAS,CAAC/I,KAAMH,EAASqN,c,EAQtCV,KAAO,SAAAwS,GACH,EAAKjW,UAAS,SAAA/D,GACV,IAAMia,EAAM,EAAKja,MAAMyH,UAAYuS,GAAyC,QAA1B,EAAKha,MAAM0H,WAAuB,OAAS,MAC7F,OAAO,2BACA1H,GADP,IAEIyH,QAASuS,EACTtS,WAAYuS,Q,EAKxB/S,UAAY,SAAAgT,GACR,EAAKrhB,MAAMoN,QAAQ3J,KAAK,eAAiB4d,EAAQzY,KAAO,M,mEAfxD+C,KAAKuV,c,+BAmBL,OACI,yBAAK9V,UAAU,sBACX,kBAACkE,EAAD,CACIX,KAAMhD,KAAKgD,KACXC,QAASjD,KAAKxE,MAAMyH,QACpBC,WAAYlD,KAAKxE,MAAM0H,WACvB1M,KAAMwJ,KAAKxE,MAAMhF,KACjBkM,UAAW1C,KAAK0C,UAChBD,QAASA,U,GA3CVrC,IAAMjM,WAiDVH,KAAWqN,EAAXrN,CAAwBshB,ICXxBK,GAnDS,SAAAthB,GACpB,IAAMuc,EAAS,SAAAlK,GACXA,EAAM+N,iBACNpgB,EAAMuc,UAEV,OACI,0BAAM8D,SAAU9D,GACZ,yBAAKnR,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,mDACA,2BACI/D,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMuhB,iBACb9Q,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,mBAAoBnP,EAAMhG,OAAOkD,UAEnE,mEACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMyhB,iBACbhR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,mBAAoBnP,EAAMhG,OAAOkD,UAEnE,kEACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAM0hB,oBACbjR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,sBAAuBnP,EAAMhG,OAAOkD,UAEtE,yBAAKnE,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASkR,GAAtC,eAEKvc,EAAMiR,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,SAKhE,yBAAKL,UAAU,UACX,yBAAKA,UAAU,WAAf,sCAIJ,yBAAKA,UAAU,aCyChBuW,GArFI,SAAA3hB,GACf,IAAMuc,EAAS,SAAAlK,GACXA,EAAM+N,iBACNpgB,EAAMuc,UAEV,OACI,0BAAM8D,SAAU9D,GACZ,yBAAKnR,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,wDACA,2BACI/D,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAM4hB,aACbnR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,eAAgBnP,EAAMhG,OAAOkD,UAE/D,2EACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAM6hB,cACbpR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,gBAAiBnP,EAAMhG,OAAOkD,UAEhE,sEACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAM8hB,wBACbrR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,0BAA2BnP,EAAMhG,OAAOkD,UAE1E,yBAAKnE,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASkR,GAAtC,eAEKvc,EAAMiR,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,SAKhE,yBAAKL,UAAU,UACX,yBAAKA,UAAU,WACX,kDACA,2BACI/D,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAM+hB,WACbtR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,aAAcnP,EAAMhG,OAAOkD,UAE7D,sFACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMgiB,WACbvR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,aAAcnP,EAAMhG,OAAOkD,UAE7D,2EACA,4BACInE,UAAU,QACVmE,MAAOvP,EAAMiiB,iBACbxR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,mBAAoBnP,EAAMhG,OAAOkD,SAE/D,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,UAEwB,UAA3BvP,EAAMiiB,iBACH,kBAAC,IAAMpU,SAAP,KACI,4FACA,2BACIxG,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMkiB,QACbzR,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,UAAWnP,EAAMhG,OAAOkD,WAG9D,OAGZ,yBAAKnE,UAAU,aCNhB+W,GAxEM,SAAAniB,GACjB,IAAMuc,EAAS,SAAAlK,GACXA,EAAM+N,iBACNpgB,EAAMuc,UAGV,OACI,0BAAM8D,SAAU9D,GACZ,yBAAKnR,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,mEACA,2BACI/D,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMoiB,gBACb3R,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,kBAAmBnP,EAAMhG,OAAOkD,UAElE,gFACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMqiB,oBACb5R,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,sBAAuBnP,EAAMhG,OAAOkD,UAEtE,mFACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMsiB,sBACb7R,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,wBAAyBnP,EAAMhG,OAAOkD,UAExE,yBAAKnE,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASkR,GAAtC,eAEKvc,EAAMiR,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,SAKhE,yBAAKL,UAAU,UACX,yBAAKA,UAAU,WACX,+FACA,2BACI/D,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMuiB,uBACb9R,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,yBAA0BnP,EAAMhG,OAAOkD,UAEzE,8FACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMwiB,uBACb/R,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,yBAA0BnP,EAAMhG,OAAOkD,UAEzE,uGACA,2BACIlI,KAAK,SACL+D,UAAU,QACVmE,MAAOvP,EAAMyiB,2BACbhS,SAAU,SAAA4B,GAAK,OAAIrS,EAAMwhB,KAAK,6BAA8BnP,EAAMhG,OAAOkD,YAIrF,yBAAKnE,UAAU,aC3DzBsX,GAAc,CAChB,eACA,gBACA,0BACA,aACA,aACA,UACA,oBAGEC,GAAgB,CAClB,kBACA,wBACA,yBACA,yBACA,6BACA,uBAIEC,GAAc,CAChB,mBACA,mBACA,uBAGEC,G,4MACF1b,MAAQ,CACJ2b,OAAQ,CACJlB,aAAc,KACdC,cAAe,KACfC,wBAAyB,KACzBC,WAAY,KACZC,WAAY,KACZE,QAAS,KACTD,iBAAkB,SAEtBlc,SAAU,CACNqc,gBAAiB,KACjBE,sBAAuB,KACvBC,uBAAwB,KACxBC,uBAAwB,KACxBC,2BAA4B,KAC5BJ,oBAAqB,MAEzBhc,OAAQ,CACJkb,iBAAkB,KAClBE,iBAAkB,KAClBC,oBAAqB,MAEzBzQ,QAAS,I,EAGb8R,eAAiB,SAACjQ,EAAOrS,EAAK8O,GAC1B,EAAKrE,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,mBAEK2L,EAFL,2BAGW3L,EAAM2L,IAHjB,mBAISrS,EAAM8O,U,EAMvByT,YAAc,SAAAlQ,GACV,EAAK5H,SAAS,CAAC+F,QAAS6B,IACxBjQ,EAAW8B,UAAU,EAAKwC,MAAM2L,IAAQ7P,MAAK,SAAAjB,GACzC,EAAKkJ,SAAS,CAAC+F,QAAS,QACzB/N,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAAC+F,QAAS,S,mEAIV,IAAD,OACjBpO,EAAW6B,YAAYzB,MAAK,SAAAjB,GACxB,IAAM8gB,EAAS5jB,OAAO+jB,KAAKjhB,GACtBkhB,QAAO,SAAAziB,GAAG,OAAIiiB,GAAYS,SAAS1iB,MACnC2iB,QAAO,SAACC,EAAK5iB,GAEV,OADA4iB,EAAI5iB,GAAOuB,EAASvB,GACb4iB,IACR,IACDtd,EAAW7G,OAAO+jB,KAAKjhB,GACxBkhB,QAAO,SAAAziB,GAAG,OAAIkiB,GAAcQ,SAAS1iB,MACrC2iB,QAAO,SAACC,EAAK5iB,GAEV,OADA4iB,EAAI5iB,GAAOuB,EAASvB,GACb4iB,IACR,IACDhd,EAASnH,OAAO+jB,KAAKjhB,GACtBkhB,QAAO,SAAAziB,GAAG,OAAImiB,GAAYO,SAAS1iB,MACnC2iB,QAAO,SAACC,EAAK5iB,GAEV,OADA4iB,EAAI5iB,GAAOuB,EAASvB,GACb4iB,IACR,IACP,EAAKnY,SAAS,CACV4X,OAAQA,EACR/c,SAAUA,EACVM,OAAQA,S,+BAKV,IAAD,OACL,OACI,kBAAC,IAAMwH,SAAP,KACI,iDACA,kBAACyG,GAAD,KACI,kBAACgP,GAAD,eACI9B,KAAM,SAAC/gB,EAAK8O,GAAN,OAAgB,EAAKwT,eAAe,SAAUtiB,EAAK8O,IACzD0B,QAA8B,WAArBtF,KAAKxE,MAAM8J,QACpBsL,OAAQ,kBAAM,EAAKyG,YAAY,YAC3BrX,KAAKxE,MAAMd,UAEvB,6BACA,6BACA,sCACA,kBAACiO,GAAD,KACI,kBAACiP,GAAD,eACI/B,KAAM,SAAC/gB,EAAK8O,GAAN,OAAgB,EAAKwT,eAAe,SAAUtiB,EAAK8O,IACzD0B,QAA8B,WAArBtF,KAAKxE,MAAM8J,QACpBsL,OAAQ,kBAAM,EAAKyG,YAAY,YAC3BrX,KAAKxE,MAAM2b,UAEvB,6BACA,6BACA,wCACA,kBAACxO,GAAD,KACI,kBAACkP,GAAD,eACIhC,KAAM,SAAC/gB,EAAK8O,GAAN,OAAgB,EAAKwT,eAAe,WAAYtiB,EAAK8O,IAC3D0B,QAA8B,aAArBtF,KAAKxE,MAAM8J,QACpBsL,OAAQ,kBAAM,EAAKyG,YAAY,cAC3BrX,KAAKxE,MAAMpB,iB,GAzGlBgG,IAAMjM,WAgHZH,KAAWqN,EAAXrN,CAAwBkjB,IC3IjCY,G,4MAEFlM,aAAe,WACX,IAAMG,EAAY,EAAK1X,MAAM0N,MAAMpJ,OAAOlB,OAEtCsU,IADgB,EAAK1X,MAAMoD,QAE3B,EAAKpD,MAAMmK,UAAUuN,I,EAY7BrK,OAAS,SAAAqW,GAAM,MAAI,eAAiB,EAAK1jB,MAAM0N,MAAMpJ,OAAOlB,OAASsgB,G,EACrEvY,OAAS,WACL,OACI,kBAAC,IAAM0C,SAAP,KACI,kBAAC+J,GAAD,CAASxU,OAAQ,EAAKpD,MAAM0N,MAAMpJ,OAAOlB,QACrC,yBAAKgI,UAAU,iBACX,kBAAC,IAAD,CAAST,GAAI,EAAK0C,OAAO,KAAMxC,OAAO,GAAM,uBAAGO,UAAU,4BACzD,kBAAC,IAAD,CAAST,GAAI,EAAK0C,OAAO,YAAaxC,OAAO,GAAM,uBAC/CO,UAAU,2BAIrB,EAAKpL,MAAMyN,W,kEAnBpB9B,KAAK4L,iB,yCAGU3L,EAAWC,EAAWC,GACrCH,KAAK4L,mB,GAfiBxL,IAAMjM,WA6CrBkM,gBATS,SAAA7E,GAAK,MAAK,CAC9BhE,UAAWgE,EAAMgC,IAAIhG,UACrBC,OAAQ+D,EAAMgC,IAAI/F,WAGK,SAAAyG,GAAQ,MAAK,CACpCM,UAAW,SAAC/G,GAAD,OAAYyG,EAASM,EAAU/G,QAG/B4I,CAA6CrM,EAAWqN,EAAXrN,CAAwB8jB,KCjDrE9jB,KAAW8jB,GAAX9jB,CAA4B0c,ICA5B1c,KAAW8jB,GAAX9jB,CAA4Bof,ICCrC4E,G,4MAEFtW,OAAS,SAACC,GAAD,MAAY,oBAAsBA,G,EAE3CnC,OAAS,WACL,OACI,kBAAC,IAAM0C,SAAP,KACI,wBAAIzC,UAAU,gBACV,4BACI,kBAAC,IAAD,CAAST,GAAI,EAAK0C,OAAO,OAAQxC,OAAK,GAAtC,gBAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,UAAWxC,OAAK,GAAzC,iBAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,QAASxC,OAAK,GAAvC,eAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,UAAWxC,OAAK,GAAzC,iBAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,SAAUxC,OAAK,GAAxC,UAEJ,4BACI,kBAAC,IAAD,CAASF,GAAI,EAAK0C,OAAO,gBAAiBxC,OAAK,GAA/C,mBAGP,EAAK7K,MAAMyN,W,YA3BM1B,IAAMjM,WAiCzBH,KAAWqN,EAAXrN,CAAwBgkB,I,qBC5BjCC,I,OAAY,I,OAAIC,WAAmB,CACrCC,QAAQ,EACRC,oBAAoB,EACpBC,eAAe,EACfC,WAAW,KAGTC,G,4MAEF/c,MAAQ,CACJQ,MAAO,GACP1C,SAAU,GACVkf,MAAO,EACPlT,SAAS,G,EAGbmT,gBAAkB,WACd,GAAI,EAAKpkB,MAAMwY,SAAW,EAAKxY,MAAMqkB,UAAW,CAC5C,IAAMpf,EAAQ,YAAO,EAAKkC,MAAMlC,UAC1Bqf,EAAYrf,EAASzE,KAAI,SAAA4Q,GAAI,OAAIA,EAAK,EAAKpR,MAAMqkB,cACnDE,EAAe,EACnB,EAAKvkB,MAAMwY,QAAQhY,KAAI,SAAA4Q,GACnB,GAAIkT,EAAU5jB,QAAQ0Q,GAAQ,EAAG,CAC7B,IAAMrC,EAAM,EAAKyV,iBACjBzV,EAAI,EAAK/O,MAAMqkB,WAAajT,EAC5BnM,EAASxB,KAAKsL,GACdwV,GAAgB,EAEpB,OAAO,QAEPA,EAAe,GACf,EAAKrZ,SAAS,CAACjG,SAAUA,M,EAKrCuf,eAAiB,WACb,IAAMpR,EAAM,GAWZ,OAVA,EAAKpT,MAAM4H,MAAMpH,KAAI,SAAAikB,GAKjB,OAJArR,EAAIqR,EAAQhkB,KAAO,GACfgkB,EAAQC,UACRtR,EAAIqR,EAAQhkB,KAAOgkB,EAAQC,QAAQ,IAEhC,QAEP,EAAK1kB,MAAMsO,UACX8E,EAAI,EAAKpT,MAAMsO,SAAW,IAEvB8E,G,EAGXuR,OAAS,WACL,EAAKzZ,UAAS,SAAA/D,GACV,IAAMyd,EAAa,EAAKJ,iBACxB,OAAO,2BACArd,GADP,IAEIlC,SAAS,GAAD,mBACDkC,EAAMlC,UADL,CAEJ2f,IAEJT,KAAMhd,EAAMlC,SAASrE,OACrBikB,YAAaD,Q,EAKzBE,UAAY,SAACra,GACT,EAAKS,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEIlC,SAAUkC,EAAMlC,SAASie,QAAO,SAAC6B,EAAMC,GAAP,OAAqBA,IAAcva,W,EAK/Ewa,QAAU,SAAAxa,GACN,IAAMya,EAAkB,EAAK/d,MAAMlC,SAASwF,GAC5C,EAAKS,SAAS,CACViZ,KAAM1Z,EACNoa,YAAY,eAAKK,M,EAIzBC,YAAc,WACV,EAAKja,UAAS,SAAA/D,GAAK,MAAK,CACpBgd,MAAO,EACPlf,SAAUkC,EAAMlC,SAASzE,KAAI,SAACgf,EAAU/U,GACpC,OAAOA,IAAUtD,EAAMgd,KAAOhd,EAAM0d,YAAcrF,KAEtDqF,YAAa,Q,EAIrBtI,OAAS,WACL,EAAKrR,SAAS,CAAC+F,SAAS,IACxB,IAAMmU,EAAW,CAACxd,MAAM,YAAK,EAAKT,MAAMlC,WACrC,EAAKjF,MAAM2H,QACVyd,EAASzd,MAAT,eAAqB,EAAKR,MAAMQ,QACpC9E,EAAWmC,UAAU,EAAKhF,MAAMqlB,OAAQD,GAAUniB,MAAK,SAAAjB,GACnD,EAAKkJ,SAAS,CAAC+F,SAAS,IACxB5O,QAAQC,IAAIN,MACbkB,OAAM,SAAAjB,GACL,EAAKiJ,SAAS,CAAC+F,SAAS,IACxB5O,QAAQC,IAAIL,O,EAkBpBqjB,WAAa,SAAC7kB,EAAK8O,GACf,EAAKrE,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEI0d,YAAY,2BACL1d,EAAM0d,aADF,mBAENpkB,EAAM8O,U,EAMvBgW,gBAAkB,SAAC9kB,EAAK8O,GACpB,EAAKrE,UAAS,SAAA/D,GACV,OAAO,2BACAA,GADP,IAEIQ,MAAM,2BACCR,EAAMQ,OADR,mBAEAlH,EAAM8O,U,EAMvBiW,OAAS,SAAA/a,GACL,GAAGA,EAAQ,EAAG,CACV,IAAIxF,EAAQ,YAAO,EAAKkC,MAAMlC,UAC9BA,EAASwF,EAAQ,GAAK,EAAKtD,MAAMlC,SAASwF,GAC1CxF,EAASwF,GAAS,EAAKtD,MAAMlC,SAASwF,EAAQ,GAC9C,EAAKS,SAAS,CAACjG,SAAUA,M,EAIjCwgB,SAAW,SAAAhb,GACP,GAAG,EAAKtD,MAAMlC,SAASrE,OAAS6J,EAAQ,EAAG,CACvC,IAAIxF,EAAQ,YAAO,EAAKkC,MAAMlC,UAC9BA,EAASwF,EAAQ,GAAK,EAAKtD,MAAMlC,SAASwF,GAC1CxF,EAASwF,GAAS,EAAKtD,MAAMlC,SAASwF,EAAQ,GAC9C,EAAKS,SAAS,CAACjG,SAAUA,M,mEApDX,IAAD,OACjBpC,EAAWiC,UAAU6G,KAAK3L,MAAMqlB,QAAQpiB,MAAK,SAAAd,GACtC,EAAKnC,MAAM2H,OAASxF,EAAKwF,MACxB,EAAKuD,SAAS,CAACjG,SAAU9C,EAAKyF,MAAOD,MAAOxF,EAAKwF,MAAOwc,MAAO,IAE/D,EAAKjZ,SAAS,CAACjG,SAAU9C,EAAKyF,MAAOuc,MAAO,S,yCAKrCvY,EAAWC,EAAWC,GACrCH,KAAKyY,oB,+BA6CC,IAAD,OACL,OACI,kBAAC,IAAMvW,SAAP,KACKlC,KAAK3L,MAAM2H,MACR,yBAAKyD,UAAU,SACX,yBAAKA,UAAU,iBACVO,KAAK3L,MAAM2H,MAAMnH,KAAI,SAAA4Q,GAAI,OACtB,+BACKA,EAAKtG,MACN,2BACIzD,KAAK,OACLkI,MAAO,EAAKpI,MAAMQ,MAAMyJ,EAAK3Q,KAC7BgQ,SAAW,SAAA4B,GAAK,OAAI,EAAKkT,gBAAgBnU,EAAK3Q,IAAK4R,EAAMhG,OAAOkD,gBAKpF,KACJ,yBAAKnE,UAAU,sBACX,2BAAOA,UAAU,cACb,+BACA,4BACI,6BACCO,KAAK3L,MAAM4H,MAAMpH,KAAI,SAAA4Q,GAAI,OAAI,wBAAI3Q,IAAK2Q,EAAK3Q,KAAM2Q,EAAKtG,UACvD,wBAAI0D,MAAO,KAAX,YAGJ,+BACC7C,KAAKxE,MAAMlC,SAASzE,KAAI,SAACsO,EAASrE,GAAV,OACrB,kBAAC,IAAMoD,SAAP,CAAgBpN,IAAKgK,GACjB,wBAAIW,UAAWX,IAAU,EAAKtD,MAAMgd,KAAO,WAAa,MACpD,4BACK1Z,EAAQ,EAAI,6BAAK,uBAAGW,UAAU,aAAaC,QAAS,SAAAgH,GAAK,OAAI,EAAKmT,OAAO/a,OAAkB,KAC3FA,EAAQ,EAAKtD,MAAMlC,SAASrE,OAAS,EAAI,6BAAK,uBAAGwK,UAAU,eAAeC,QAAS,SAAAgH,GAAK,OAAE,EAAKoT,SAAShb,OAAkB,MAE9H,EAAKzK,MAAM4H,MAAMpH,KAAI,SAAA4Q,GAClB,OAAQ,wBAAI3Q,IAAK2Q,EAAK3Q,KACjBgK,IAAU,EAAKtD,MAAMgd,KAAQ/S,EAAKsT,QAC/B,4BACItZ,UAAU,QACVqF,SAAU,SAAA4B,GAAK,OAAI,EAAKiT,WAAWlU,EAAK3Q,IAAK4R,EAAMhG,OAAOkD,QAC1DA,MAAO,EAAKpI,MAAM0d,YAAYzT,EAAK3Q,MAClC2Q,EAAKsT,QAAQlkB,KAAI,SAAA4Q,GAAI,OAAI,4BAAQ3Q,IAAK2Q,EACL7B,MAAO6B,GAAOA,OAGpD,2BAAO/J,KAAK,OAAO+D,UAAU,QACtBmE,MAAO,EAAKpI,MAAM0d,YAAYzT,EAAK3Q,KACnCgQ,SAAU,SAAA4B,GAAK,OAAI,EAAKiT,WAAWlU,EAAK3Q,IAAK4R,EAAMhG,OAAOkD,UAEjE,kBAAC,IAAM1B,SAAP,YAEWiB,EAAQsC,EAAK3Q,UAKpC,wBAAI2K,UAAU,UACTX,IAAU,EAAKtD,MAAMgd,KAClB,kBAAC,IAAMtW,SAAP,KACI,4BAAQxC,QAAS,EAAK8Z,aAClB,uBAAG/Z,UAAU,kBAEjB,4BAAQC,QAAS,kBAAM,EAAKH,SAAS,CAACiZ,MAAO,MACzC,uBAAG/Y,UAAU,oBAIrB,kBAAC,IAAMyC,SAAP,KACI,4BAAQxC,QAAS,kBAAM,EAAK4Z,QAAQxa,KAChC,uBAAGW,UAAU,kBAEhB,EAAKpL,MAAMqkB,WAAa,EAAKrkB,MAAMwY,SAAW,EAAKxY,MAAMwY,QAAQkN,MAAK,SAAAnW,GAAK,OAAIA,IAAUT,EAAQ,EAAK9O,MAAMqkB,cAAc,KACvH,4BAAQhZ,QAAS,kBAAM,EAAKyZ,UAAUra,KAClC,uBAAGW,UAAU,uBAOnCX,IAAU,EAAKtD,MAAMgd,MAAQ,EAAKnkB,MAAM2lB,WACtC,wBAAIva,UAAU,YACV,wBAAI+C,QAAS,EAAKnO,MAAM4H,MAAMhH,OAAS,GACnC,kBAAC,KAAD,CACI2O,MAAO,EAAKpI,MAAM0d,YAAY,EAAK7kB,MAAM2lB,YACzCC,YAAa,EAAKze,MAAM0e,kBACxBC,YAAa,SAAAvW,GAAK,OAAI,EAAKrE,SAAS,CAAC2a,kBAAmBtW,KACxDwW,wBAAyB,SAAAC,GAAQ,OAC7BrjB,QAAQI,QAAQ6gB,GAAUqC,SAASD,KAEvCvV,SAAU,SAAAlB,GAAK,OAAI,EAAKrE,UAAS,SAAA/D,GAC7B,OAAO,2BACAA,GADP,IAEI0d,YAAY,2BACL1d,EAAM0d,aADF,mBAEN,EAAK7kB,MAAM2lB,WAAapW,cAMjD,UAIZ,+BACA,4BACI,wBAAIpB,QAASxC,KAAK3L,MAAM4H,MAAMhH,OAAS,EAAG0K,MAAO,CAACgG,QAAS,KACvD,4BAAQjG,QAASM,KAAKgZ,QAClB,uBAAGvZ,UAAU,iBADjB,aAGsB,IAArBO,KAAKxE,MAAMgd,KACR,4BAAQ/Y,UAAU,WAAWC,QAASM,KAAK4Q,OAAQjR,MAAO,CAACiG,MAAO,UAAlE,OAEK5F,KAAKxE,MAAM8J,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,MAEzD,e,GAjRVM,IAAMjM,WA4RjBH,KAAWgkB,GAAXhkB,CAAgCukB,IC1SzCtc,GAAQ,CACV,CAACnH,IAAK,WAAYqK,MAAO,aAYdob,GATU,SAAClmB,GAAD,OACrB,kBAACmmB,GAAD,CACId,OAAO,WACPzd,MAAOA,GACP+d,WAAY,YCRd/d,GAAQ,CACV,CAACnH,IAAK,YAAaqK,MAAO,cAC1B,CAACrK,IAAK,SAAUqK,MAAO,YAYZsb,GATa,SAACpmB,GAAD,OACxB,kBAACmmB,GAAD,CACId,OAAO,YACPzd,MAAOA,GACP+d,WAAW,aCTb/d,GAAQ,CACV,CAACnH,IAAK,QAASqK,MAAO,SACtB,CAACrK,IAAK,QAASqK,MAAO,SACtB,CAACrK,IAAK,YAAaqK,MAAO,0BAA2B4Z,QAAQ,CAAC,KAAM,QACpE,CAACjkB,IAAK,OAAQqK,MAAO,SAGnBub,GAAe,CAAC,IAAK,YAAa,QAAS,WAalCC,GAXe,SAACtmB,GAAD,OAC1B,kBAACmmB,GAAD,CACId,OAAO,gBACPzd,MAAOA,GACP4Q,QAAS6N,GACThC,UAAU,OACVsB,WAAY,QCfd/d,GAAQ,CACV,CAACnH,IAAK,QAASqK,MAAO,SACtB,CAACrK,IAAK,SAAUqK,MAAO,SAAU4Z,QAAQ,CAAC,WAAY,WAAY,aAClE,CAACjkB,IAAK,OAAQqK,MAAO,QACrB,CAACrK,IAAK,SAAUqK,MAAO,wBAAyB4Z,QAAS,CAAC,KAAM,SAG9D6B,GAAa,CACf,CAAC9lB,IAAK,UAAWqK,MAAO,oBACxB,CAACrK,IAAK,UAAWqK,MAAO,kBACxB,CAACrK,IAAK,UAAWqK,MAAO,kBACxB,CAACrK,IAAK,UAAWqK,MAAO,mBAab0b,GAViB,SAACxmB,GAAD,OAC5B,kBAACmmB,GAAD,CACId,OAAO,kBACPzd,MAAOA,GACPD,MAAO4e,GACPlC,UAAU,OACVsB,WAAY,QCpBdY,GAAa,CACf,CAAC9lB,IAAK,eAAgBqK,MAAO,gBAC7B,CAACrK,IAAK,iBAAkBqK,MAAO,mBAC/B,CAACrK,IAAK,aAAcqK,MAAO,eAC3B,CAACrK,IAAK,kBAAmBqK,MAAO,qBAChC,CAACrK,IAAK,gBAAiBqK,MAAO,mBAC9B,CAACrK,IAAK,kBAAmBqK,MAAO,sBAG9BlD,GAAQ,CACV,CAACnH,IAAK,QAASqK,MAAO,kBAaX2b,GAVmB,SAACzmB,GAAD,OAC9B,kBAACmmB,GAAD,CACId,OAAO,aACPzd,MAAOA,GACPD,MAAO4e,GACPlC,UAAU,QACVsB,WAAY,QCnBd/d,GAAQ,CACV,CAACnH,IAAK,QAASqK,MAAO,SACtB,CAACrK,IAAK,OAAQqK,MAAO,eAAgB4Z,QAAS,CAAC,OAAQ,UAAW,UAAW,WAYlEgC,GATmB,SAAC1mB,GAAD,OAC9B,kBAACmmB,GAAD,CACId,OAAO,oBACPzd,MAAOA,GACP+d,WAAY,a,qBCqJLgB,G,4MAvJXxf,MAAQ,CACJjD,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,MAAO,GACPwb,QAAS,GACT5O,SAAS,EACT2V,OAAQ,CACJ1iB,SAAU,GACVC,SAAU,GACVI,eAAgB,GAChBC,UAAW,GACXqiB,iBAAkB,K,EAI1BC,YAAc,SAACrmB,EAAK8O,GAChB,EAAKrE,SAAL,gBAAgBzK,EAAM8O,K,EAG1BwX,SAAW,WACP,IAAMC,EAAcC,KAAYC,MAAM,EAAKlnB,MAAMwC,SAAS2kB,QACtDH,EAAYI,KACZ,EAAKpnB,MAAMoN,QAAQ3J,KAAKujB,EAAYI,MAEpC,EAAKpnB,MAAMoN,QAAQ3J,KAAK,Y,EAchC4jB,OAAS,SAAChV,GACNA,EAAM+N,iBACN,EAAKlV,SAAS,CACV+F,SAAS,EACT2V,OAAQ,CACJ1iB,SAAU,GACVC,SAAU,GACVI,eAAgB,GAChBC,UAAW,GACXqiB,iBAAkB,MAG1BhkB,EAAWoB,MAAM,EAAKkD,MAAMjD,SAAU,EAAKiD,MAAMhD,SAAU,EAAKgD,MAAM/C,UAAW,EAAKC,OAAOpB,MAAK,SAAAjB,GAC9FJ,aAAa0lB,Q7F9DA,Q6F8DmBtlB,EAASL,OACzC,EAAKuJ,SAAS,CAAC+F,SAAS,IACxB,EAAK8V,cACN7jB,OAAM,SAAAjB,GACL,IAAM2kB,EAAS,CACX1iB,SAAU,GACVC,SAAU,GACVI,eAAgB,GAChBC,UAAW,GACXqiB,iBAAkB,IAEhBU,EAAYtlB,EAAMD,SAASG,KACjCjD,OAAO+jB,KAAK2D,GAAQ7V,SAAQ,SAAAtQ,QACDO,IAAnBumB,EAAU9mB,KACVmmB,EAAOnmB,GAAO8mB,EAAU9mB,OAGhC,EAAKyK,SAAS,CAAC+F,SAAS,EAAO2V,OAAQA,IACpC,EAAKzf,MAAM0Y,SACV,EAAK2H,QAAQC,Y,mEA1CH,IAAD,OACb7lB,aAAaC,Q7FxCA,S6FyCb8J,KAAKob,WAELlkB,EAAWmB,WAAWf,MAAK,SAAAd,GACvB,EAAK+I,SAAS,CAAC2U,QAAS1d,EAAK+d,gB,+BA0C/B,IAAD,OAEL,OADA7d,QAAQC,IAAIqJ,KAAKxE,OAEb,yBAAKiE,UAAU,SACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,WAEnB,yBAAKA,UAAU,WACVO,KAAKxE,MAAMyf,OAAOC,iBACf,wBAAIzb,UAAU,OACTO,KAAKxE,MAAMyf,OAAOC,iBAAiBrmB,KAAI,SAAC4Q,EAAM3G,GAC3C,OAAO,wBAAIhK,IAAKgK,GAAQ2G,OAGhC,KACJ,0BAAMhG,UAAU,SAASiV,SAAU1U,KAAK0b,QACpC,uCACA,2CACA,2BACIhgB,KAAK,OACL+D,UAAWO,KAAKxE,MAAMyf,OAAO1iB,SAAW,UAAY,GACpDqL,MAAO5D,KAAKxE,MAAMjD,SAClBuM,SAAU,SAAA4B,GAAK,OAAI,EAAKyU,YAAY,WAAYzU,EAAMhG,OAAOkD,UAEhE5D,KAAKxE,MAAMyf,OAAO1iB,SAAWyH,KAAKxE,MAAMyf,OAAO1iB,SAAS1D,KAAI,SAAC4Q,EAAM3G,GAChE,OAAO,yBAAKW,UAAU,iBAAiB3K,IAAKgK,GAAQ2G,MACnD,KACL,2CACA,2BACI/J,KAAK,WACL+D,UAAWO,KAAKxE,MAAMyf,OAAOziB,SAAW,UAAY,GACpDoL,MAAO5D,KAAKxE,MAAMhD,SAClBsM,SAAU,SAAA4B,GAAK,OAAI,EAAKyU,YAAY,WAAYzU,EAAMhG,OAAOkD,UAEhE5D,KAAKxE,MAAMyf,OAAOziB,SAAWwH,KAAKxE,MAAMyf,OAAOziB,SAAS3D,KAAI,SAAC4Q,EAAM3G,GAChE,OAAO,yBAAKW,UAAU,iBAAiB3K,IAAKgK,GAAQ2G,MACnD,KACL,qDACA,2BACI/J,KAAK,WACLkI,MAAO5D,KAAKxE,MAAM9C,MAClBoM,SAAU,SAAA4B,GAAK,OAAI,EAAKyU,YAAY,QAASzU,EAAMhG,OAAOkD,UAE7D5D,KAAKxE,MAAMyf,OAAOviB,MAAQsH,KAAKxE,MAAMyf,OAAOviB,MAAM7D,KAAI,SAAC4Q,EAAM3G,GAC1D,OAAO,yBAAKW,UAAU,iBAAiB3K,IAAKgK,GAAQ2G,MACnD,KACJzF,KAAKxE,MAAM0Y,QACR,kBAAC,IAAMhS,SAAP,KACI,yBAAKzC,UAAU,cACX,kBAAC,KAAD,CACIsc,IAAK,SAAAhlB,GAAC,OAAK,EAAK8kB,QAAU9kB,GAC1B6d,QAAS5U,KAAKxE,MAAM0Y,QACpBpP,SAAU,SAAAlB,GAAK,OAAI,EAAKuX,YAAY,YAAavX,OAGxD5D,KAAKxE,MAAMyf,OAAOriB,eAAiBoH,KAAKxE,MAAMyf,OAAOriB,eAAe/D,KAAI,SAAC4Q,EAAM3G,GAC5E,OAAO,yBAAKW,UAAU,iBAAiB3K,IAAKgK,GAAQ2G,MACnD,MAEV,KACH,yBAAKhG,UAAU,cACX,4BAAQA,UAAU,WAAWC,QAASM,KAAK0b,QACvC,yBAAK/b,MAAO,CAACqc,aAAc,QAA3B,YACChc,KAAKxE,MAAM8J,QAAU,kBAAC,KAAD,CAAWxF,MAAO,UAAa,c,GA7IjEM,IAAMjM,WC6BpB8nB,G,4MAcFzc,OAAS,WACL,OACI,kBAAC,IAAD,CAAe0c,SAAUroB,EAAWE,UAAY,YAAc,IAC1D,yBAAK0L,UAAU,OACV5L,EAAWC,WACR,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOsF,KAAK,cAAc+iB,UAAW7S,KACrC,kBAAC,KAAD,CAAOlQ,KAAK,cAAc+iB,UAAWC,KACrC,kBAAC,KAAD,CAAOhjB,KAAK,sBAAsB+iB,UAAWE,KAC7C,kBAAC,KAAD,CAAOjjB,KAAK,iBAAiB+iB,UAAWG,KAExC,kBAAC,KAAD,CAAOljB,KAAK,YAAY+iB,UAAWI,KACnC,kBAAC,KAAD,CAAOnjB,KAAK,QAAQ8F,OAAK,EAACid,UAAWpI,KACrC,kBAAC,KAAD,CAAO3a,KAAK,iBAAiB8F,OAAK,EAACid,UAAWK,KAC9C,kBAAC,KAAD,CAAOpjB,KAAK,wBAAwB8F,OAAK,EAACid,UAAWM,KACrD,kBAAC,KAAD,CAAOrjB,KAAK,wBAAwB8F,OAAK,EAACid,UAAWO,KAErD,kBAAC,KAAD,CAAOtjB,KAAK,IAAI8F,OAAK,EAACid,UAAWtT,KAEjC,kBAAC,KAAD,CAAOzP,KAAK,gBAAgB8F,OAAK,EAACid,UAAWQ,KAC7C,kBAAC,KAAD,CAAOvjB,KAAK,iBAAiB8F,OAAK,EAACid,UAAWS,IAC9C,kBAAC,KAAD,CAAOxjB,KAAK,sBAAsB8F,OAAK,EAACid,UAAWS,IACnD,kBAAC,KAAD,CAAOxjB,KAAK,uBAAuB8F,OAAK,EAACid,UAAWU,KACpD,kBAAC,KAAD,CAAOzjB,KAAK,6BAA6B8F,OAAK,EAACid,UAAWW,KAC1D,kBAAC,KAAD,CAAO1jB,KAAK,yBAAyB8F,OAAK,EAACid,UAAWY,KAEtD,kBAAC,KAAD,CAAO3jB,KAAK,kBAAkB8F,OAAK,EAACid,UAAWa,KAC/C,kBAAC,KAAD,CAAO5jB,KAAK,eAAe8F,OAAK,EAACid,UAAWc,KAC5C,kBAAC,KAAD,CAAO7jB,KAAK,uBAAuB8F,OAAK,EAACid,UAAWe,KACpD,kBAAC,KAAD,CAAO9jB,KAAK,8BAA8B8F,OAAK,EAACid,UAAWgB,KAC3D,kBAAC,KAAD,CAAO/jB,KAAK,iBAAiB8F,OAAK,EAACid,UAAWiB,KAC9C,kBAAC,KAAD,CAAOhkB,KAAK,wBAAwB8F,OAAK,EAACid,UAAWkB,KACrD,kBAAC,KAAD,CAAOjkB,KAAK,2BAA2B8F,OAAK,EAACid,UAAWmB,KACxD,kBAAC,KAAD,CAAOlkB,KAAK,yBAAyB8F,OAAK,EAACid,UAAWoB,KACtD,kBAAC,KAAD,CAAOnkB,KAAK,2BAA2B8F,OAAK,EAACid,UAAWqB,KACxD,kBAAC,KAAD,CAAOpkB,KAAK,0BAA0B8F,OAAK,EAACid,UAAWsB,KACvD,kBAAC,KAAD,CAAOrkB,KAAK,iCAAiC8F,OAAK,EAACid,UAAWuB,KAC9D,kBAAC,KAAD,CAAUtkB,KAAK,oBAAoB4F,GAAG,yBACtC,kBAAC,KAAD,CAAU5F,KAAK,UAAU4F,GAAG,mBAC5B,kBAAC,KAAD,CAAO5F,KAAK,IAAI+iB,UAAWnT,KAE3B,kBAAC,KAAD,CAAUhK,GAAG,gBAGjB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO5F,KAAK,cAAc+iB,UAAW7S,KACrC,kBAAC,KAAD,CAAOlQ,KAAK,IAAI8F,OAAK,EAACid,UAAWK,KACjC,kBAAC,KAAD,CAAOpjB,KAAK,WAAW8F,OAAK,EAACid,UAAWM,KACxC,kBAAC,KAAD,CAAOrjB,KAAK,WAAW8F,OAAK,EAACid,UAAWO,KACxC,kBAAC,KAAD,CAAU1d,GAAG,mB,kEA7D7BgB,KAAK3L,MAAM+I,UACX4C,KAAK3L,MAAMspB,aACX3d,KAAK3L,MAAMupB,aACX5d,KAAK3L,MAAMyb,kBACPjc,EAAWE,UACXiM,KAAK3L,MAAMwpB,cAEX7d,KAAK3L,MAAMypB,mB,GATT1d,IAAMjM,WA2FTkM,gBAlBS,SAAA7E,GAAK,MAAK,CAC9B4B,QAAS5B,EAAMkC,GAAGN,YAIK,SAAAc,GACvB,IAAMuJ,EAAM,CACRmW,WAAY,kBAAM1f,GvFhHf,SAAAA,IACa,SAAV4K,IACF5R,EAAWC,OAAOG,MAAK,SAAAjB,GACnBgI,WAAWyK,EAAS,KACpB5K,EAAS,CACLxC,KLPU,iBKQVC,QAAQ,eACDtF,EAASG,WAGrBe,OAAM,SAAAjB,GACL+H,WAAWyK,EAAS,QAG5BA,OuFmGAgV,YAAa,kBAAM5f,GvFEhB,SAAAA,IACa,SAAV4K,IACF5R,EAAWiC,UAAU,qBAAqB7B,MAAK,SAAAjB,GAC3CgI,WAAWyK,EAAS,KACpB,IACI5K,EAASQ,EAAarI,EAAS4F,QACjC,MAAOlF,QAGVQ,OAAM,SAAAjB,GACL+H,WAAWyK,EAAS,QAG5BA,OuFdAgH,gBAAiB,kBAAM5R,EAASF,GAAsB,KACtD2f,WAAY,kBAAMzf,GCtHf,SAAAA,GACHA,EAAS,CACLxC,K7FHkB,iB6FIlBC,QAAS,UDwHjB,OAHI9H,EAAWE,YACX0T,EAAG,YAAkB,kBAAMvJ,GlDxHxB,SAAAA,IACa,SAAV4K,IACFiV,GAAa5mB,OAAOG,MAAK,SAAAjB,GACjB,IAAMG,EAAOH,EAASG,KACtB6H,WAAWyK,EAAS,KACpB5K,EAAS,CACLxC,K1CVO,kB0CWPC,QAAS,CACLnB,OAAQhE,EAAKwnB,aAAexnB,EAAKynB,cACjCxjB,MAAOjE,EAAK0nB,WACZxjB,OAAQlE,EAAK2nB,SACbxjB,OAAQnE,EAAKwnB,WACbpjB,MAAOpE,EAAK4nB,WACZvjB,QAASrE,EAAK6nB,WACdvjB,UAAWtE,EAAK8nB,qBAChBvjB,GAAIvE,EAAK8G,MAAM+F,MAAMtI,GACrBxE,OAAQC,EAAK8G,MAAM/G,OAAOgoB,OAC1BzkB,QAAStD,EAAK8G,MAAM/G,OAAOioB,OAC3BxjB,cAA6C,YAA9BxE,EAAK8G,MAAMmhB,qBAGnClnB,OAAM,SAAAjB,GACL+H,WAAWyK,EAAS,QAIhCA,QkDgGGrB,IAGIpH,CAA6C4b,IErHxCyC,QACW,cAA7BppB,OAAOuB,SAAS8nB,UAEe,UAA7BrpB,OAAOuB,SAAS8nB,UAEhBrpB,OAAOuB,SAAS8nB,SAAS5c,MACvB,2DCVN6c,IAASpf,OAED,kBAAC,IAAD,CAAU5B,MAAOA,GACb,kBAAC,GAAD,OAGRihB,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3nB,MAAK,SAAA4nB,GACjCA,EAAaC,kB","file":"static/js/main.b079c8b0.chunk.js","sourcesContent":["const BuildType = Object.freeze({\n    Server:   Symbol(\"server\"),\n    Proxy:  Symbol(\"proxy\")\n});\n\nconst ProductionType = BuildType.Server;\n\nexport class Production {\n    static IsServer = () => (ProductionType === BuildType.Server);\n    static IsProxy = () => (ProductionType === BuildType.Proxy);\n}\n","import React from 'react';\n\n\nconst withLayout = (Layout, layoutProps=null) => {\n    return (Component, componentProps=null) => {\n        return (props) => (\n            <Layout {...layoutProps} {...props}>\n                <Component {...componentProps} {...props}/>\n            </Layout>\n        )\n    }\n};\n\nexport default withLayout;\n","// a little function to help us with reordering the result\nexport const Reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\nexport const CompareObject = (a, b, exclude=[]) => {\n    if(typeof a === 'object'){\n        // Create arrays of property names\n        let aProps = Object.getOwnPropertyNames(a);\n        let bProps = Object.getOwnPropertyNames(b);\n        exclude.map(key => {\n            if(aProps.indexOf(key)>=0)\n                aProps.pop(aProps.indexOf(key));\n            if(bProps.indexOf(key)>=0)\n                bProps.pop(bProps.indexOf(key));\n            return null;\n        });\n\n        // If number of properties is different,\n        // objects are not equivalent\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (var i = 0; i < aProps.length; i++) {\n            var propName = aProps[i];\n\n            // If values of same property are not equal,\n            // objects are not equivalent\n            if (CompareObject(a[propName], b[propName]) === false) {\n                return false;\n            }\n        }\n\n        // If we made it this far, objects\n        // are considered equivalent\n        return true;\n    }else{\n        return a === b;\n    }\n};\n","import axios from 'axios';\nimport { TOKEN_KEY } from \"../build/constant\";\n// const WINDOWS_BASE_URL = (window._env_ === undefined ? null : window._env_.REACT_APP_BACKEND_URL);\n// const DEFAULT_BASE_URL = WINDOWS_BASE_URL === undefined ? \"https://api.ergopool.lan/api/\" : WINDOWS_BASE_URL;\nconst DEFAULT_BASE_URL = \"http://api.ergopool.lan/api/\"\nconst BASE_URL = (window.backend === undefined ?  DEFAULT_BASE_URL : window.backend);\nconst instance = axios.create({baseURL: BASE_URL});\n\ninstance.interceptors.request.use(config => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n        return {\n            ...config,\n            headers: {\n                ...config.headers,\n                Authorization: \"Token \" + token\n            }\n        }\n    }\n    return config;\n});\n\ninstance.interceptors.response.use(response => response, error => {\n    try {\n        if (error.response.status === 401 || (error.response.status === 403 && error.response.data.detail === 'Expired token.')) {\n            console.log(\"Im here with status unauthorized\");\n            localStorage.removeItem(TOKEN_KEY);\n            window.location.reload();\n        }\n    }catch (e) {\n        console.log(e);\n    }\n    return Promise.reject(error);\n});\n\nexport class ApiNetwork {\n\n    static info = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"info/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static dashboard = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static hashRate = (userId, queries) => {\n        return new Promise((resolve, reject) => {\n            try {\n                const getQueries = [];\n                if (queries.fromTimeStamp)\n                    getQueries.push(\"start=\" + queries.fromTimeStamp);\n                if (queries.toTimeStamp)\n                    getQueries.push(\"stop=\" + queries.toTimeStamp);\n                const getQueryStr = getQueries.join(\"&\");\n                instance.get(\"user/\" + userId + \"/hash_rate/?\" + getQueryStr).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static share = (userId, queries) => {\n        return new Promise((resolve, reject) => {\n            try {\n                const getQueries = [];\n                if (queries.fromTimeStamp)\n                    getQueries.push(\"start=\" + queries.fromTimeStamp);\n                if (queries.toTimeStamp)\n                    getQueries.push(\"stop=\" + queries.toTimeStamp);\n                const getQueryStr = getQueries.join(\"&\");\n                instance.get(\"user/\" + userId + \"/share/?\" + getQueryStr).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static payout = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/payout/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static income = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/income/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static getLogin = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"login/\",).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static login = (username, password, recaptcha, twofa) => {\n        return new Promise((resolve, reject) => {\n            try {\n                let params = {\n                    username: username,\n                    password: password,\n                    recaptcha_code: recaptcha\n                }\n                if (twofa){\n                    params.otp_token = twofa\n                }\n                instance.post(\"login/\", params).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static getConfig = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"conf/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static setConfig = configJson => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"conf/batch_create/\", configJson).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static getUsers = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"administrator/users/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static getUiJson = (path) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"ui/\" + path + \"/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static setUiJson = (path, elements) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"ui/\" + path + \"/\", {data: JSON.stringify(elements)}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static getSupport = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"support/\",).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static support = (name, email, subject, message, recaptcha) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"support/\", {\n                    name: name,\n                    email: email,\n                    subject: subject,\n                    message: message,\n                    recaptcha_code: recaptcha\n                }).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static change2Fa = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"totp/\", {}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    static getPayment = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"payment/\", {}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    static postPayment = (data) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"payment/\", data).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    static getPastPayment = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"administrator/users/payments/\", {}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    static getBlock = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"blocks/\", {}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    static withdraw = (amount) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"balance/\", {}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n}\n\nexport default instance;\n","export const TOKEN_KEY = \"token\";\n","import * as actionTypes from '../actionTypes';\n\n\nexport const proxyInitialState = {\n    node: {\n        synced: false,\n        start: 0,\n        mining: false,\n        height: 0,\n        peers: 0,\n        version: '',\n        bestBlock: '',\n        pk: '',\n        status: 'RED',\n        message: \"\",\n        mnemonicSaved: false,\n    },\n    apiKey: '',\n    walletInitialized: false,\n    walletLocked: true,\n    wallet: {\n        status: '',\n        balance: 0,\n        address: [],\n    }\n};\n\nexport const reducer = (state = proxyInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_NODE_DATA:\n            return {\n                ...state,\n                node: action.payload\n            };\n        case actionTypes.STORE_NODE_API_KEY:\n            return {\n                ...state,\n                apiKey: action.payload.apiKey,\n                walletInitialized: action.payload.walletInitialized,\n                walletLocked: action.payload.walletLocked,\n            };\n        default:\n    }\n    return state\n};\n\nexport default reducer;\n","export const STORE_NODE_DATA = 'STORE_NODE_DATA';\nexport const STORE_NODE_API_KEY = 'STORE_NODE_API_KEY';\nexport const SET_UI_SYNCING = 'SET_UI_SYNCING';\n\nexport const STORE_API_INFO = 'STORE_API_INFO';\nexport const STORE_API_USER_DASHBOARD = 'STORE_API_USER_DASHBOARD';\nexport const SET_USER_PK = \"SET_USER_PK\";\nexport const SET_USER_API_KEY = \"SET_USER_API_KEY\";\nexport const STORE_MENU_LINKS = \"STORE_MENU_LINKS\";\nexport const STORE_FOOTER = \"STORE_FOOTER\";\nexport const STORE_MESSAGES = \"STORE_MESSAGES\";\n","import * as actionTypes from '../actionTypes';\n\n\nexport const apiInitialState = {\n    userId: '',\n    token: '',\n    messages: [],\n    menu: [],\n    footer: {\n        extra: {},\n        items: []\n    },\n    info: {\n        hash_rate: {\n            network: 24843969,\n            pool: 1\n        },\n        miners: 0,\n        active_miners: 0,\n        price: {\n            btc: null,\n            usd: null\n        },\n        blocks_in_hour: 0.0\n    },\n    dashboard: {\n        round_valid_shares: 4454,\n        round_invalid_shares: 0,\n        timestamp: new Date(),\n        hash_rate: {\n            current: 1,\n            avg: 1\n        },\n        user: {\n            round_valid_shares: 0,\n            round_invalid_shares: 0,\n            immature: 0,\n            mature: 0,\n            withdraw: 0,\n            hash_rate: {\n                current: 1,\n                avg: 1\n            }\n        }\n    }\n};\n\nexport const reducer = (state = apiInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_API_INFO:\n            return {\n                ...state,\n                info: action.payload\n            };\n        case actionTypes.STORE_API_USER_DASHBOARD:\n            return {\n                ...state,\n                dashboard: action.payload\n            };\n        case actionTypes.SET_USER_PK:\n            return {\n                ...state,\n                userId: action.payload\n            };\n        case actionTypes.SET_USER_API_KEY:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case actionTypes.STORE_MENU_LINKS:\n            return {\n                ...state,\n                menu: action.payload\n            };\n        case actionTypes.STORE_FOOTER:\n            return {\n                ...state,\n                footer: action.payload\n            };\n        case actionTypes.STORE_MESSAGES:\n            return {\n                ...state,\n                messages: action.payload\n            };\n        default:\n    }\n    return state\n};\n\nexport default reducer;\n","import * as actionTypes from '../actionTypes';\n\nexport const proxyInitialState = {\n    node: {\n        synced: false,\n        start: 0,\n        mining: false,\n        height: 0,\n        peers: 0,\n        version: '',\n        bestBlock: '',\n        pk: '',\n        status: 'GREEN',\n        message: null\n    },\n    apiKey: '',\n    walletInitialized: false,\n    walletLocked: true,\n    wallet: {\n        status: '',\n        balance: 0,\n        address: [],\n    }\n};\n\nexport const reducer = (state = proxyInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_NODE_DATA:\n            return {\n                ...state,\n                node: action.payload\n            };\n        case actionTypes.STORE_NODE_API_KEY:\n            return {\n                ...state,\n                apiKey: action.payload.apiKey,\n                walletInitialized: action.payload.walletInitialized,\n                walletLocked: action.payload.walletLocked,\n            };\n        case actionTypes.SET_UI_SYNCING:\n            return {\n                ...state,\n                syncing: true\n            }\n        default:\n    }\n    return state;\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport proxyReducer from './proxyReducer';\nimport apiReducer from './apiReducer';\nimport uiReducer from './uiReducer';\n\nexport const reducer = combineReducers({\n    proxy: proxyReducer,\n    api: apiReducer,\n    ui: uiReducer,\n});\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(\n    thunk\n));\n\nexport {\n    store\n}\n","import { CompareObject } from \"../../utils\";\nimport * as actionTypes from '../actionTypes';\nimport { ApiNetwork } from '../../network/api';\nimport { store } from '../index'\n\nexport const loadApiInfoAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            ApiNetwork.info().then(response => {\n                setTimeout(getData, 10 * 60 * 1000);\n                dispatch({\n                    type: actionTypes.STORE_API_INFO,\n                    payload: {\n                        ...response.data\n                    }\n                });\n            }).catch(error => {\n                setTimeout(getData, 10 * 60 * 1000);\n            });\n        };\n        getData();\n    }\n};\n\nexport const loadApiDashboardAsync = (loadOnce = false) => {\n    return dispatch => {\n        const loadData = () => {\n            const userId = store.getState().api.userId;\n            if (userId) {\n                ApiNetwork.dashboard(userId).then(response => {\n                    if (!loadOnce) {\n                        setTimeout(() => loadData(), 10 * 60 * 1000);\n                    }\n                    const payload = {\n                        timestamp: new Date(response.data.timestamp.split(\" \").join(\"T\")),\n                        hash_rate: response.data.hash_rate,\n                        round_valid_shares: response.data.round_valid_shares,\n                        round_invalid_shares: response.data.round_invalid_shares,\n                        user: {...response.data.users[userId]}\n                    };\n                    dispatch({\n                        type: actionTypes.STORE_API_USER_DASHBOARD,\n                        payload: {...payload}\n                    });\n                }).catch(error => {\n                    if (!loadOnce) {\n                        setTimeout(() => loadData(), 10 * 60 * 1000);\n                    }\n                })\n            }else{\n                setTimeout(() => loadData(), 5 * 1000);\n            }\n        };\n        loadData();\n    }\n};\n\nexport const setUserPk = (userId) => {\n    return dispatch => {\n        dispatch({\n            type: actionTypes.SET_USER_PK,\n            payload: userId\n        });\n        loadApiDashboardAsync(true);\n    }\n};\n\nexport const loadMenu = () => {\n    return dispatch => {\n        ApiNetwork.getUiJson('MenuLink.json').then(data => {\n            if (CompareObject(store.getState().api.menu, data.items) === false) {\n                dispatch({\n                    type: actionTypes.STORE_MENU_LINKS,\n                    payload: data.items\n                });\n            }\n        });\n    }\n};\n\nexport const loadFooter = () => {\n    return dispatch => {\n        ApiNetwork.getUiJson('FooterLink.json').then(data => {\n            if (CompareObject(store.getState().api.footer, data) === false) {\n                dispatch({\n                    type: actionTypes.STORE_FOOTER,\n                    payload: data\n                });\n            }\n        });\n    }\n};\n\nexport const storeMessage = messages => {\n    const state = store.getState();\n    const newMessages = [...state.api.messages];\n    messages.map(message => {\n        let msgIndex = -1;\n        newMessages.map((msg, index) => {\n            if (CompareObject(msg, message, ['display'])) {\n                msgIndex = index;\n                if (msg.display === \"yes\") {\n                    message.display = \"yes\";\n                }\n            }\n            return null;\n        });\n        if (msgIndex === -1) {\n            newMessages.push({...message});\n        } else {\n            newMessages[msgIndex] = {...message};\n        }\n        return null;\n    });\n    return {\n        type: actionTypes.STORE_MESSAGES,\n        payload: newMessages\n    };\n};\n\nexport const loadMessagesAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            ApiNetwork.getUiJson(\"Notification.json\").then(response => {\n                setTimeout(getData, 10 * 60 * 1000);\n                try {\n                    dispatch(storeMessage(response.items));\n                } catch (e) {\n\n                }\n            }).catch(error => {\n                setTimeout(getData, 10 * 60 * 1000);\n            });\n        };\n        getData();\n    }\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst menu = (props) => {\n    return (\n        <li>\n            <NavLink to={props.link} exact={true}>{props.title}</NavLink>\n        </li>\n    )\n};\n\nexport default menu;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadMenu } from \"../../../../store/actions/apiActions\";\nimport Menu from './menu/Menu';\nimport { TOKEN_KEY } from \"../../../../build/constant\";\n\nclass MenuBar extends React.Component {\n    state={\n        toggled: false\n    };\n\n    componentWillMount() {\n        this.props.loadMenu();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadMenu();\n    }\n    toggleClick = () => {\n        this.setState(state=>{\n            return {...state, toggled: !state.toggled};\n        })\n    };\n\n    render = () => {\n        const className = \"main-menu-bar \" + (this.state.toggled ? \"toggled\" : \"\");\n        return (\n            <div className={className}>\n                <div className=\"wrapper\">\n                    <div className=\"logo\"/>\n                    <button className=\"navigation-toggle\" onClick={this.toggleClick}>\n                        <i className=\"ep-icon-hamburger-menu\"/>\n                        <i className=\"ep-icon-close\"/>\n                    </button>\n                    <ul className=\"menu-bar\" style={this.props.style}>\n                        {this.props.links.map((link, index) => {\n                            if (link.superuser === \"yes\" && !localStorage.getItem(TOKEN_KEY)) return null;\n                            if (link.color) return <Menu key={link.link} link={link.link} title={link.title} style={{color: link.color}}/>;\n                            return <Menu key={link.link} link={link.link} title={link.title}/>;\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    links: state.api.menu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMenu: () => dispatch(loadMenu())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loadFooter } from \"../../../store/actions/apiActions\";\n\n\nclass Footer extends React.Component {\n    state = {\n        links: [],\n        extra: {}\n    };\n\n    componentWillMount() {\n        this.props.loadFooter();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadFooter();\n    }\n\n    renderLink = (link, index) => {\n        if (link.link.startsWith(\"http://\") || link.link.startsWith(\"https://\") || link.newTab === \"yes\") {\n            if (link.newTab === \"yes\") {\n                return <a target=\"_blank\" rel=\"noopener noreferrer\" href={link.link} className=\"link\" key={index}>{link.title}</a>\n            } else {\n                return <a href={link.link} className=\"link\" key={index}>{link.title}</a>\n            }\n        } else {\n            return <Link to={link.link} className=\"link\" key={index}>{link.title}</Link>\n        }\n    };\n\n    render = () => {\n        const columns = [\"column2\", \"column3\", \"column4\"];\n        return (\n            <div className=\"footer\" style={{backgroundColor: this.props.color}}>\n                <div className=\"wrapper\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"big-text\">{this.props.footer.extra.column1}</div>\n                        </div>\n                        {columns.map(column => (\n                            <div className=\"col\" key={column}>\n                                <div className=\"title\">{this.props.footer.extra[column]}</div>\n                                {this.props.footer.items.map((link, index) => {\n                                    return link.column.replace(\" \", \"\").toLowerCase() === column ? this.renderLink(link, index) : null;\n                                })}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"split\"/>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"logo\">Ergopool</div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"social-links\">\n                                <a className=\"social-link\" href=\"https://t.me/joinchat/AAAAAFkhFbEskHGp0p-JLg\"><i\n                                    className=\"ep-icon-social-telegram\"/></a>\n                                <a className=\"social-link\" href=\"https://twitter.com/ergopool\"><i\n                                    className=\"ep-icon-social-twitter\"/></a>\n                                <a className=\"social-link\" href=\"https://discord.gg/CzqeQjE\"><i\n                                    className=\"ep-icon-social-discord\"/></a>\n                                <a className=\"social-link\" href=\"https://github.com/ergopool-io\"><i\n                                    className=\"ep-icon-social-github\"/></a>\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"copyright\">\n                                ®2019-2020 Ergopool\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                        </div>\n                        <div className=\"clear\"/>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    footer: state.api.footer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadFooter: () => dispatch(loadFooter())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\n\n\nconst NavigationToggle = (props) => {\n    return (\n        <li className=\"toggle\">\n            <button onClick={props.click}>\n                <i className=\"ep-icon-hamburger-menu active-hide\"/>\n                <i className=\"ep-icon-left-arrow active-show\"/>\n            </button>\n        </li>\n    )\n};\n\nexport default NavigationToggle;\n","import React from 'react';\nimport MenuBar from '../main_layout/header/menu_bar/MenuBar';\nimport { NavLink } from \"react-router-dom\";\nimport Footer from '../main_layout/footer/Footer';\nimport NavigationToggle from \"./navigation_toggle/NavigationToggle\";\nimport { TOKEN_KEY } from \"../../build/constant\";\n\nclass AdminLayout extends React.Component {\n    state = {\n        navigationOpen: false,\n    };\n\n    componentWillMount() {\n        console.log(localStorage.getItem(TOKEN_KEY));\n        if (!localStorage.getItem(TOKEN_KEY)) {\n            this.props.history.push(\"/admin/login/?next=\" + this.props.match.url);\n        }\n    }\n\n    toggleNavigation = () => {\n        this.setState(prevState => {\n            return {navigationOpen: !prevState.navigationOpen}\n        });\n    };\n\n    logout = () => {\n        localStorage.removeItem(TOKEN_KEY);\n        this.props.history.push(\"/\");\n    };\n\n    getUrl = (suffix) => \"/admin/\" + suffix;\n\n    render = () => {\n        let layoutClasses = [\"user\"];\n        if (this.state.navigationOpen) {\n            layoutClasses.push(\"active\");\n        }\n        layoutClasses = layoutClasses.join(\" \");\n        return (\n            <div>\n                <div className={layoutClasses}>\n                    <MenuBar/>\n                    <ul className=\"navigation\">\n                        <NavigationToggle click={() => this.toggleNavigation()}/>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"system/\")}>\n                                <i className=\"ep-icon-admin-dashboard\"/>\n                                <span>Dashboard</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"user/\")}>\n                                <i className=\"ep-icon-admin-setting\"/>\n                                <span>Users</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"manage/\")}>\n                                <i className=\"ep-icon-admin-management\"/>\n                                <span>Management</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"ui-manage/\")}>\n                                <i className=\"ep-icon-admin-management-ui\"/>\n                                <span>UI management</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"profile/\")}>\n                                <i className=\"ep-icon-useralt-profile\"/>\n                                <span>UI management</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <button onClick={this.logout}>\n                                <i className=\"ep-icon-admin-logout\"/>\n                                <span>Logout</span>\n                            </button>\n                        </li>\n                    </ul>\n                    <div className=\"content\">\n                        {this.props.children}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n                <div className=\"footer\">\n                    <Footer/>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default AdminLayout;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport AdminLayout from '../AdminLayout';\nimport withLayout from '../../../hoc/with_layout/withLayout';\n\nclass AdminSystemLayout extends React.Component {\n\n    getUrl = (suffix) => \"/admin/system/\" + suffix;\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <ul className=\"tab-bar-flex\">\n                    <li>\n                        <NavLink to={this.getUrl(\"\")} exact>System Info</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"block\")} exact>Blocks</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"transaction\")} exact>Transactions</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"payment\")} exact>Payment</NavLink>\n                    </li>\n                </ul>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(AdminSystemLayout);\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport AdminSystemLayout from '../../../layouts/admin_layout/admin_system_layout/AdminSystemLayout'\n// import MiningTree from \"./mining-tree/MiningTree\";\n// import NotificationCenter from './notification-center/NotificationCenter';\n\nconst adminDashboard = (props) => {\n    return (\n        <div>\n            {/*<MiningTree/>*/}\n            {/*<NotificationCenter/>*/}\n        </div>\n    )\n};\n\nexport default withLayout(AdminSystemLayout)(adminDashboard);\n","import React from 'react';\n\nclass TableRow extends React.Component {\n    state = {\n        showDetail: false\n    }\n\n    toggleDetail = () => {\n        this.setState(state => {\n            return {...state, showDetail: !state.showDetail};\n        })\n    }\n\n    getDetailRow = () => {\n        if (this.props.detail && this.state.showDetail) {\n            const DetailComponent = this.props.detail;\n            return (\n                <tr>\n                    <td colSpan={this.props.columns.length + 1} className=\"detail\">\n                        <DetailComponent data={this.props.data}/>\n                    </td>\n                </tr>\n            );\n        }\n        return null\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <tr key={this.props.data.key}>\n                    {this.props.detail ? (\n                        <td onClick={this.toggleDetail}>\n                            {this.state.showDetail ? <i className=\"ep-icon-down\"/> : <i className=\"ep-icon-right\"/>}\n                        </td>\n                    ): null}\n                    {this.props.columns.map(column => (\n                        <td key={column.key}\n                            onClick={() => this.props.rowSelect ? this.props.rowSelect(this.props.data) : null}>\n                            {column.content ? column.content(this.props.data) :\n                                <span>{this.props.data[column.key]}</span>}\n                        </td>\n                    ))}\n                </tr>\n                {this.getDetailRow()}\n            </React.Fragment>\n        )\n    };\n}\n\nexport default TableRow;\n","import React from 'react';\nimport TableRow from './table-row/TableRow.js';\n\nconst dataTable = (props) => {\n    return (\n        <table>\n            <thead>\n            <tr>\n                {props.detail ? (\n                    <td width={40}/>\n                ): null}\n                {props.columns.map(column => (\n                    <th key={column.key} className=\"sorted\">\n                        {props.hideSorting ? column.header : (\n                        <button className=\"sort-button\"\n                                onClick={() => props.sort ? props.sort(column.key) : null}>\n                            {column.header} &nbsp;\n                            {column.key === props.sorting ? props.sortingDir === 'asc' ?\n                                <i className=\"ep-icon-sorted\"/> : <i className=\"ep-icon-sorted flipped\"/> :\n                                <i className=\"ep-icon-sort\"/>}\n                        </button>\n                        )}\n                    </th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {\n                props.data.map((dataRow, index) => (\n                    <TableRow\n                        key={index}\n                        data={dataRow}\n                        columns={props.columns}\n                        rowSelect={props.rowSelect}\n                        detail={props.detail}\n                    />\n                ))\n            }\n            {props.footer ? (\n                <tr colSpan={props.columns.length}>\n                    <td>\n                        {this.props.footer}\n                    </td>\n                </tr>\n            ) : null}\n            </tbody>\n        </table>\n    )\n};\n\nexport default dataTable;\n","import React from 'react';\nimport withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'rc-time-picker/assets/index.css';\nimport AdminSystemLayout from \"../../../../layouts/admin_layout/admin_system_layout/AdminSystemLayout\";\nimport DataTable from \"../../../../components/data_table/DataTable\";\nimport { ApiNetwork } from \"../../../../network/api\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst is_pool = row => {\n    if(row.pool)\n        return <Icon name=\"check\" />\n    return <i className=\"ep-icon-close\"/>\n}\n\n\nconst columns = [\n    {header: \"Height\", key: \"height\"},\n    {header: \"Timestamp\", key: \"timestamp\"},\n    {header: \"Transactions\", key: \"transactionsCount\"},\n    {header: \"Mined by\", key: \"miner\", content: row => {return row.miner.name} },\n    {header: \"Pool?\", key: \"pool\", content: is_pool},\n];\n\nclass Transaction extends React.Component {\n    state = {\n        data: [],\n        date: '',\n        userId: ''\n    };\n\n    loadPayments = () => {\n        ApiNetwork.getBlock().then(response => {\n            debugger\n            this.setState({data: response.results});\n        });\n    };\n\n    componentWillMount() {\n        this.loadPayments();\n    }\n\n    render = () => {\n        return (\n            <div className=\"panel custom-table\">\n                <DataTable\n                    hideSorting={true}\n                    data={this.state.data}\n                    rowSelect={this.rowSelect}\n                    columns={columns}/>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(AdminSystemLayout)(Transaction);\n\n","const suffix = ['', 'K', 'M', 'G', 'T', 'E', 'P'];\n\nexport const hashRate = value => {\n    if (value === undefined)\n        return '0 ';\n    let index = 0;\n    while (value > 1024) {\n        index += 1;\n        value /= 1024;\n    }\n    return value.toFixed(2) + ' ' + suffix[index];\n};\n\n\nexport const ergo = value => {\n    const price = value / 1e9;\n    const pieces = parseFloat(price).toFixed(3).split('');\n    let ii = pieces.length - 10;\n    while ((ii-=3) > 0) {\n        pieces.splice(ii, 0, ',')\n    }\n    return pieces.join('')\n};\n\nexport const username = value => {\n    return (value.length < 12) ? value : value.substr(0, 12) + '...';\n};\n","import React from 'react';\nimport * as formatter from '../../../../../formatter';\nimport DataTable from \"../../../../../components/data_table/DataTable\";\n\nconst columns = [\n    {header: \"User\", key: \"pk\"},\n    {header: \"Amount\", key: \"paid\", content: row => {return formatter.ergo(row.paid)}},\n];\n\n\nconst transactionDetail = (props) => {\n    return (\n        <div className=\"custom-table\">\n        <DataTable\n            hideSorting={true}\n            data={props.data.payments}\n            columns={columns}/>\n        </div>\n    )\n};\n\n\nexport default transactionDetail;\n\n","import React from 'react';\nimport withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport * as formatter from '../../../../formatter';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'rc-time-picker/assets/index.css';\nimport TransactionDetail from './transaction-detail/TransactionDetail.js'\nimport AdminSystemLayout from \"../../../../layouts/admin_layout/admin_system_layout/AdminSystemLayout\";\nimport DataTable from \"../../../../components/data_table/DataTable\";\nimport { ApiNetwork } from \"../../../../network/api\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst is_confirmed = row => {\n    if(row.is_confirmed)\n        return <Icon name=\"check\" />\n    return <i className=\"ep-icon-close\"/>\n}\nconst columns = [\n    {header: \"Transaction ID\", key: \"tx_id\"},\n    {header: \"Amount\", key: \"total_payment\", content: row => {return formatter.ergo(row.total_payment)}},\n    {header: \"Confirmed\", key: \"is_confirmed\", content: is_confirmed},\n    {header: \"Timestamp\", key: \"created_at\"},\n];\n\nclass Transaction extends React.Component {\n    state = {\n        data: [],\n        date: '',\n        userId: ''\n    };\n\n    loadPayments = () => {\n        ApiNetwork.getPastPayment().then(response => {\n            this.setState({data: response});\n        });\n    };\n\n    componentWillMount() {\n        console.log(\"here\")\n        this.loadPayments();\n    }\n\n    render = () => {\n        return (\n            <div className=\"panel custom-table\">\n                <DataTable\n                    hideSorting={true}\n                    data={this.state.data}\n                    rowSelect={this.rowSelect}\n                    detail={TransactionDetail}\n                    columns={columns}/>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(AdminSystemLayout)(Transaction);\n\n","import React from 'react';\nimport { username } from '../../../../../formatter'\nimport * as formatter from \"../../../../../formatter\";\n\n\nconst paymentRow = props => (\n    <tr>\n        <td><input type=\"checkbox\" checked={props.enabled} onChange={e => props.saveEnabled(e.target.checked)}/></td>\n        <td>{username(props.miner_pk)}</td>\n        <td>{formatter.ergo(props.balance)}</td>\n        <td>{formatter.ergo(props.actual_payment)}</td>\n    </tr>\n)\n\nexport default paymentRow;\n","import React from 'react';\nimport withLayout from '../../../../hoc/with_layout/withLayout';\nimport { ApiNetwork } from \"../../../../network/api\";\nimport PaymentRow from './payment-row/PaymentRow';\nimport AdminSystemLayout from \"../../../../layouts/admin_layout/admin_system_layout/AdminSystemLayout\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nclass Payment extends React.Component {\n    state = {\n        \"data\": [],\n        \"sorting\": \"date\",\n        \"sortingDir\": \"asc\",\n        \"pageIndex\": 0,\n        \"perPage\": 10\n    };\n\n    loadPayments = () => {\n        ApiNetwork.getPayment().then(response => {\n            const data = response.map(row => {\n                return {...row, enabled: true}\n            })\n            this.setState({data: data});\n        });\n    };\n\n    submitPayments = () => {\n        this.setState({'loading': true})\n        let data = []\n        this.state.data.forEach(dataRow => {\n            const {enabled, ...submitRow} = dataRow\n            if(enabled){\n                data.push(submitRow)\n            }\n        });\n        ApiNetwork.postPayment(data).then(response => {\n            this.setState({loading: false})\n        }).catch(error => {\n            this.setState({loading: false})\n        })\n    }\n\n    componentWillMount() {\n        this.loadPayments();\n    }\n\n    checkMiner = (index, isChecked) => {\n        let data = [...this.state.data];\n        data[index].enabled = isChecked;\n        console.log(data);\n        this.setState({'data': data});\n    }\n\n    render() {\n        return (\n            <div className=\"panel custom-table\">\n                <table>\n                    <thead>\n                    <tr>\n                        <td></td>\n                        <td>Miner</td>\n                        <td>Balance</td>\n                        <td>Actual Payment</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.data.map((item, index) => <PaymentRow {...item} saveEnabled={value => this.checkMiner(index, value)}/>)}\n                    </tbody>\n                    <tfoot>\n                    <tr>\n                        <td colSpan={4} style={{padding: 10}}>\n                            <button className=\"btn blue\" onClick={this.submitPayments} style={{float: \"right\"}}>\n                                Pay to selected\n                                {this.state.loading ? <BarLoader color={\"white\"}/> : null}\n                            </button>\n                        </td>\n                    </tr>\n                    </tfoot>\n                </table>\n            </div>\n\n        )\n    };\n}\n\nexport default withLayout(AdminSystemLayout)(Payment);\n","import React from 'react';\n\n\nconst ErrorLayout = (props) => {\n    return (\n        <div className=\"error\" style={{background: props.color}}>\n            <div className=\"socials\">\n                <div className=\"socialBar\"/>\n                <a href=\"https://t.me/joinchat/AAAAAFkhFbEskHGp0p-JLg\" className=\"social\"><i className=\"ep-icon-social-telegram\"/> </a>\n                <a href=\"https://twitter.com/ergopool\" className=\"social\"><i className=\"ep-icon-social-twitter\"/> </a>\n                <a href=\"https://discord.gg/CzqeQjE\" className=\"social\"><i className=\"ep-icon-social-discord\"/> </a>\n                <a href=\"https://github.com/ergopool-io\" className=\"social\"><i className=\"ep-icon-social-github\"/> </a>\n            </div>\n            <div className=\"contents\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default ErrorLayout;\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\nimport { Link } from \"react-router-dom\";\n\nconst error404 = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>404</h1>\n                <h2>Something's missing.</h2>\n                <div>Selected page not found.</div>\n                <Link to=\"/\">Back to home</Link>\n            </div>\n            <div className=\"error-image error_404\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(error404);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\nimport { Link } from \"react-router-dom\";\n\nconst error500 = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>500</h1>\n                <h2>Oooops... Something wents wrong</h2>\n                <div>Sorry for this inconvenience, Our team is actively working to fix issue</div>\n                <Link to=\"/\">Back to home</Link>\n            </div>\n            <div className=\"error-image error_500\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout, {\n    color: \"#ffdede\"\n})(error500);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\n\nconst errorMaintenance = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>&nbsp;</h1>\n                <h2>Under maintenance...</h2>\n                <div>Website is currently undergoing scheduled maintenance. we should be back shortly.</div>\n            </div>\n            <div className=\"error-image error_maintenance\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(errorMaintenance);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\n\nconst errorComing = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>&nbsp;</h1>\n                <h2>Comming soon.</h2>\n                <div>Stay tuned and get the latest updates and news from our social media.</div>\n            </div>\n            <div className=\"error-image error_coming\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(errorComing);\n","import React from 'react';\nimport { Markdown } from \"react-showdown\";\nimport { storeMessage } from \"../../store/actions/apiActions\";\nimport { connect } from \"react-redux\";\n\n\nclass Popup extends React.Component {\n\n    getCurrentMessages = () => {\n        let resultMessages = [];\n        this.props.messages.map((message, index) => {\n            if (message.display !== \"yes\") {\n                resultMessages.push(message);\n            }\n            return null\n        });\n        return resultMessages;\n    };\n\n    closeAllMessages = () => {\n        const newMessages = this.props.messages.map(message => {\n            return {...message, display: \"yes\"};\n        });\n        this.props.storeMessage(newMessages);\n    };\n\n    nextMessage = (message) => {\n        this.props.storeMessage([{...message, display: \"yes\"}])\n    };\n\n    render = () => {\n        const messages = this.getCurrentMessages();\n        if (messages.length === 0)\n            return null;\n        const message = messages[0];\n        const className = \"popup popup-\" + message.type;\n        return (\n            <div className=\"popup-container\">\n                <div className={className}>\n                    <div className=\"action-row\">\n                        <button className=\"close-btn\" onClick={this.closeAllMessages}>\n                            <i className=\"ep-icon-close\"/>\n                        </button>\n                    </div>\n                    <div className=\"popup-content\">\n                        <h1>{message.title}</h1>\n                        <Markdown markup={message.content}/>\n                    </div>\n                    <div className=\"action-row-bottom\">\n                        <button className=\"action-btn\" onClick={() => this.nextMessage(message)}>\n                            {messages.length > 1 ? \"Next\" : \"Close\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    messages: state.api.messages,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    storeMessage: (message) => dispatch(storeMessage(message))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { setUserPk } from \"../../../../store/actions/apiActions\";\n\n\nclass Search extends React.Component {\n    state = {\n        user: '',\n    };\n    handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.navigate();\n        }\n    };\n\n    navigate = () => {\n        this.props.setUserPk(this.state.user);\n        this.props.history.push(\"/user/\" + this.state.user + \"/\")\n    };\n\n    render = () => {\n        return (\n            <div className=\"search wrapper\">\n                <i\n                    className=\"ep-icon-search\"\n                    onClick={this.navigate}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search your address\"\n                    value={this.state.user}\n                    onKeyDown={this.handleKeyDown}\n                    onChange={(event) => this.setState({user: event.target.value})}\n                />\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.dashboard\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: () => dispatch(setUserPk)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Search));\n","import React from 'react';\nimport MenuBar from './menu_bar/MenuBar';\nimport Search from './search/Search';\n\nfunction header(props) {\n    return (\n        <div className=\"header\">\n            <MenuBar/>\n            <div className=\"wrapper\">\n                <div className=\"clear\"/>\n                <div className=\"title\">\n                    {props.title}\n                </div>\n                {props.hide_search ? null : <Search/>}\n            </div>\n        </div>\n    )\n}\n\nexport default header;\n","import React from 'react';\n\n\nconst Style = (props) => {\n    return (\n        <div className=\"style\">\n            <div className=\"wrapper\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default Style;\n","import React from 'react';\nimport Footer from './footer/Footer';\nimport Header from './header/Header';\nimport Style from './style/Style';\n\n\nconst mainLayout = (props) => {\n    const classes = \"main \" + (props.customClass ? props.customClass : '');\n    return (\n        <div className={classes}>\n            {process.env.REACT_APP_BACKEND_URL2}\n            <Header hide_search={props.hide_search} title={props.title}/>\n            <Style>\n                {props.children}\n            </Style>\n            <Footer/>\n        </div>\n    )\n};\n\nexport default mainLayout;\n","import React from 'react';\n\n\nconst panel = (props) => {\n    return (\n        <div className={\"panel\" + (props.className ? \" \" + props.className : '')}>\n            <div className=\"panel-content\">\n                {props.children}\n                <div className=\"clear\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default panel;\n","import React from 'react';\n\nclass Earning extends React.Component {\n    state = {\n        hashrate: \"\"\n    };\n\n    blockInDay = () => {\n        let hashrate = 0\n        if(this.state.hashrate)\n            hashrate = this.state.hashrate * 1024 * 1024;\n        const networkHashRate = this.props.network + hashrate;\n        if (networkHashRate === 0) return 0;\n        return hashrate / networkHashRate * 24 * 30;\n    };\n\n    earning = () => {\n        const res = this.blockInDay() * 65;\n        if (res > 0)\n            return res.toFixed(4);\n        return 0;\n    };\n\n    collateral = () => {\n        const res = (Math.ceil(this.blockInDay()) + 2) * 65 + 0.001;\n        return res\n    };\n\n\n    render() {\n        return (\n            <div className=\"earning\">\n                <label>\n                    Autolykos Hashrate(MH/s)\n                    <input value={this.state.hashrate}\n                           onChange={(event) => this.setState({hashrate: event.target.value})}/>\n                </label>\n                <span> * 24H = {this.earning()} Erg</span>\n                <h2>Required collateral: {this.collateral()} Erg</h2>\n                <h1>Daily earning: {this.earning()} Erg</h1>\n            </div>\n        )\n    };\n}\n\nexport default Earning;\n","import React from 'react';\nimport * as formatter from '../../../formatter';\n\nclass HashRate extends React.Component {\n    render() {\n        return (\n            <div className={\"hashrate\"}>\n                <div>\n                    <h2>Network Hashrate</h2>\n                    <h4>(last 30 minutes)</h4>\n                    <h2>{formatter.hashRate(this.props.networkHashRate)}H/s</h2>\n                </div>\n                <div>\n                    <h2>Pool Hashrate</h2>\n                    <h4>(last 30 minutes)</h4>\n                    <h2>{formatter.hashRate(this.props.poolHashRate)}H/s</h2>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default HashRate;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Popup from \"../../components/popup/Popup\";\nimport Search from \"../../layouts/main_layout/header/search/Search\";\nimport MainLayout from \"../../layouts/main_layout/MainLayout\"\nimport Panel from '../../components/panel/Panel';\nimport { Link } from 'react-router-dom';\nimport * as formatter from '../../formatter';\nimport { ApiNetwork } from \"../../network/api\";\nimport { CompareObject } from \"../../utils\";\nimport Earning from \"./earning/Earning\";\nimport HashRate from \"./hash_rate/HashRate\";\n\nconst slider = (props) => {\n    return (\n        <div className=\"slider\">\n            <div className=\"left\">\n                <h1>{props.sliderHeader}</h1>\n                <h2>{props.sliderSubTitle}</h2>\n                <Link className=\"btn blue\" to={props.sliderLink}>{props.sliderLinkTitle}</Link>\n            </div>\n            <div className=\"image\"/>\n            <div className=\"clear\"/>\n        </div>\n    )\n};\n\nclass IndexContent extends React.Component {\n    state = {\n        priceType: \"usd\",\n        features: [],\n        index: {\n            sliderHeader: \"The Mining Hub for Self-Sovereign Ergo Miners!\",\n            sliderSubTitle: \"Ergopool is an impotent semi-decentralized mining pool built to empower the most decentralized blockchain ever existed.\",\n            sliderLink: \"/how/\",\n            sliderLinkTitle: \"Start mining\",\n            firstBoxTitle: \"\",\n            firstBoxContent: \"\",\n        }\n    };\n\n    changePriceType = () => {\n        this.setState(state => {\n            let priceType = \"usd\";\n            if (state.priceType === \"usd\")\n                priceType = \"btc\";\n            return {...state, priceType: priceType};\n        });\n    };\n\n    priceIcon = () => {\n        if (this.state.priceType === \"usd\") return \"$\";\n        return \"btc\";\n    };\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <Popup/>\n                <h1>{this.props.index.firstBoxTitle}</h1>\n                <h3>{this.props.index.firstBoxContent}</h3>\n                <Search/>\n                <div className=\"cols\">\n                    <div className=\"col\">\n                        <h1>Hash Rate </h1>\n                        <h4>(last 30 minutes)</h4>\n                        <h3>{formatter.hashRate(this.props.info.hash_rate.pool)}H/s</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Active Miners</h1>\n                        <h3>{this.props.info.active_miners}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Miners</h1>\n                        <h3>{this.props.info.miners}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Blocks/h</h1>\n                        <h3>{this.props.info.blocks_in_hour}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Price <i className=\"ep-icon-exchange\" onClick={this.changePriceType}/></h1>\n                        <h3>{this.props.info.price[this.state.priceType]} {this.priceIcon()}</h3>\n                    </div>\n                </div>\n                <div className=\"circle\">\n                    <i className=\"ep-icon-star\"/>\n                </div>\n                <h1>Features</h1>\n                <div className=\"features\">\n                    {this.props.features.map((item, index) => (\n                        <div className=\"panel-container\" key={index}>\n                            <div className=\"panel-wrapper\">\n                                <Panel>\n                                    {item.title}\n                                </Panel>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <h1 id=\"calculator\">Calculate your Earning</h1>\n                <Panel className={\"panel-earning\"}>\n                    <HashRate networkHashRate={this.props.info.hash_rate.network}\n                              poolHashRate={this.props.info.hash_rate.pool}/>\n                    <Earning {...this.props.info.hash_rate}/>\n                </Panel>\n            </div>\n        )\n    };\n}\n\nclass Index extends React.Component {\n    state = {\n        features: [],\n        index: {\n            sliderHeader: \"\",\n            sliderSubTitle: \"\",\n            sliderLink: \"\",\n            sliderLinkTitle: \"\",\n            firstBoxTitle: \"\",\n            firstBoxContent: \"\",\n        }\n    };\n    getData = () => {\n        ApiNetwork.getUiJson(\"Index.json\").then(index => {\n            if (CompareObject(index.items, this.state.features) === false || CompareObject(index.extra, this.state.index) === false) {\n                this.setState({\n                    features: index.items,\n                    index: index.extra\n                });\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getData();\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    render = () => {\n        return (\n            <MainLayout hide_search={true} customClass=\"index\" title={slider(this.state.index)} {...this.props}>\n                <IndexContent features={this.state.features} index={this.state.index} {...this.props}/>\n            </MainLayout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.info,\n});\n\nexport default connect(mapStateToProps)(Index);\n","import React from 'react';\nimport { Markdown } from 'react-showdown';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\nimport { ApiNetwork } from \"../../../network/api\";\nimport { CompareObject } from \"../../../utils\";\nimport Error404 from '../../errors/error404/Error404';\n\nclass StaticPage extends React.Component {\n    state = {\n        pages: [],\n        loaded: false\n    };\n\n    getData = () => {\n        ApiNetwork.getUiJson(\"Page.json\").then(pages=>{\n            if(CompareObject(pages.items, this.state.pages) === false) {\n                this.setState({pages: pages.items, loaded: true});\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getData();\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    render = () => {\n        let content = null;\n        let title = null;\n        console.log(this.state);\n        this.state.pages.map(page => {\n            if(this.props.location.pathname === page.urlKey){\n                content = page.content;\n                title = page.title;\n            }\n            return null;\n        });\n        if(content === null && this.state.loaded){\n            return <Error404/>\n        }\n        const Component = withLayout(MainLayout, {title: title})((props) => {\n            return <Markdown markup={content} />\n        });\n        return <div className=\"static-page\"><Component/></div>\n    };\n}\n\nexport default StaticPage;\n","import React from 'react';\n\nconst address = (props) => {\n    return (\n        <div className=\"address-container\">\n            <div className=\"address\" title={props.userId}>\n                {props.userId}\n            </div>\n            {props.children}\n        </div>\n    )\n};\n\nexport default address;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadMenu } from \"../../../../store/actions/apiActions\";\nimport Menu from './menu/Menu';\nimport { TOKEN_KEY } from \"../../../../build/constant\";\n\nclass MenuBar extends React.Component {\n    state = {\n        toggled: false\n    };\n\n    componentWillMount() {\n        this.props.loadMenu();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadMenu();\n    }\n\n    toggleClick = () => {\n        this.setState(state => {\n            return {...state, toggled: !state.toggled};\n        })\n    };\n\n    render = () => {\n        const className = \"navigation-menu \" + (this.state.toggled ? \"toggled\" : \"\");\n        return (\n            <li className={className}>\n                <button className=\"title\" onClick={this.toggleClick}>\n                    Quick Access\n                </button>\n                <ul className=\"menu-bar-navigation\" style={this.props.style}>\n                    {this.props.links.map((link, index) => {\n                        if (link.superuser === \"yes\" && !localStorage.getItem(TOKEN_KEY)) return null;\n                        if (link.color) return <Menu key={link.link} link={link.link} title={link.title}\n                                                     style={{color: link.color}}/>;\n                        return <Menu key={link.link} link={link.link} title={link.title}/>;\n                    })}\n                </ul>\n            </li>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    links: state.api.menu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMenu: () => dispatch(loadMenu())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);\n","import React from 'react';\n\n\nconst modal = (props) => {\n    return (\n        <div>\n            {props.display ? (\n                <div className=\"modal\">\n                    <div className=\"modal-wrapper\">\n                        <div className=\"modal-back\"/>\n                        <div className=\"modal-content\">\n                            {props.children}\n                            <div className=\"action-row\">\n                                <div className=\"btn-holder\">\n                                    <button className=\"btn gray\" onClick={props.onClose}>Cancel</button>\n                                </div>\n                                <div className=\"btn-holder\">\n                                    <button className=\"btn blue\" onClick={props.onSuccess}>{props.successTitle}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n};\n\nexport default modal;\n","import axios from 'axios';\nimport { store } from '../store'\n\nconst instance = axios.create({baseURL: \"/\"});\n\ninstance.interceptors.request.use(config => {\n    const apiKey = store.getState().proxy.apiKey;\n    if (apiKey) {\n        config.headers = {\"api_key\": apiKey};\n    }\n    return config;\n}, error => {\n\n});\n\nclass ProxyNetworking {\n    static info = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"info\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        });\n    }\n\n    static saveMnemonic = (password) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"proxy/mnemonic/save\", {pass: password}).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        });\n    }\n\n    static loadMnemonic = (password) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"proxy/mnemonic/load\", {pass: password}).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        });\n    }\n\n    static payment = (address, amount) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"/wallet/payment/send\", [{\n                    address: address,\n                    value: amount\n                }]).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        });\n    }\n\n    static balance = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"wallet/balances\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        });\n    }\n\n    static walletStatus = (apiKey = '', callback, errorCallback = error => {\n    }) => {\n        try {\n            const headers = {\n                'api_key': apiKey,\n            };\n            instance.get('wallet/status', {headers: headers}).then(response => {\n                callback(response)\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static walletLock = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.get('wallet/lock').then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            });\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static walletUnlock = (password, callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.post('wallet/unlock', {pass: password}).then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            });\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static proxyReload = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.post(\"proxy/config/reload\").then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static proxyResetStatus = (callback, errorCallback = error => {}) => {\n        try {\n            instance.post(\"proxy/status/reset\").then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    }\n}\n\nexport default ProxyNetworking;\n","import React from 'react';\n\n\nconst NavigationToggle = (props) => {\n    return (\n        <li className=\"toggle\">\n            <button onClick={props.click}>\n                <i className=\"ep-icon-hamburger-menu active-hide\"/>\n                <i className=\"ep-icon-left-arrow active-show\"/>\n            </button>\n        </li>\n    )\n};\n\nexport default NavigationToggle;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Modal from \"../../../components/modal/Modal\";\nimport proxyNetworking from \"../../../network/proxy\";\nimport NavigationToggle from \"../navigation_toggle/NavigationToggle\";\nimport { storeApiKey } from \"../../../store/actions/proxyActions\";\n\n\nclass NavigationHeader extends React.Component {\n    state = {\n        authModal: false,\n        unlockModal: false,\n        initialModal: false,\n        apiKey: '',\n        unlockPassword: ''\n    };\n\n    openAuthPanel = () => {\n        this.setState({authModal: true});\n    };\n\n    closeAuthPanel = () => {\n        this.setState({authModal: false, apiKey: ''});\n    };\n\n    openUnlockPanel = () => {\n        this.setState({unlockModal: true});\n    };\n\n    closeUnlockPanel = () => {\n        this.setState({unlockModal: false});\n    };\n\n    setApiKey = () => {\n        proxyNetworking.walletStatus(this.state.apiKey, response => {\n            console.log(response);\n            this.props.storeApiKey(this.state.apiKey, response.data.isInitialized, !response.data.isUnlocked);\n            this.setState({authModal: false, apiKey: ''});\n        }, error => {\n            alert(\"invalid Api key\");\n        });\n    };\n\n    lockWallet = () => {\n        proxyNetworking.walletLock(response => {\n            this.props.storeApiKey(this.props.apiKey, this.props.walletInitialized, true);\n        }, error => {\n\n        })\n    };\n\n    setUnlockPassword = () => {\n        proxyNetworking.walletUnlock(this.state.unlockPassword, response => {\n            this.props.storeApiKey(this.props.apiKey, this.props.walletInitialized, false);\n            this.setState({unlockModal: false, unlockPassword: ''});\n        }, error => {\n\n        });\n    };\n\n    reloadProxyConfig = () => {\n        proxyNetworking.proxyReload(response => {\n        });\n    };\n\n    render() {\n        let statusClassName = \"pr-\";\n        if (this.props.node.status === \"GREEN\") statusClassName += \"success\";\n        if (this.props.node.status === \"RED\") statusClassName += \"error\";\n        if (this.props.node.status === \"YELLOW\") statusClassName += \"warning\";\n        return (\n            <div>\n                <Modal\n                    display={this.state.authModal}\n                    onClose={this.closeAuthPanel}\n                    onSuccess={this.setApiKey}\n                    successTitle=\"Set Api key\"\n                >\n                    <h3>Set Api key</h3>\n                    <p>Authorization</p>\n                    <p>Set api key to access node requests</p>\n                    <input value={this.state.apiKey}\n                           onChange={(event) => this.setState({apiKey: event.target.value})}/>\n                </Modal>\n                <Modal\n                    display={this.state.unlockModal}\n                    onClose={this.closeUnlockPanel}\n                    onSuccess={this.setUnlockPassword}\n                    successTitle=\"Unlock Wallet\">\n                    <p>Enter wallet password</p>\n                    <input value={this.state.unlockPassword}\n                           type=\"password\"\n                           onChange={(event) => this.setState({unlockPassword: event.target.value})}/>\n                </Modal>\n                <div className={\"panel-header \" + statusClassName}>\n                    <ul className=\"navigation\">\n                        <NavigationToggle click={this.props.toggleNavigation}/>\n                    </ul>\n                    <div className=\"content-wrapper\">\n                        <div className=\"logo\">\n                            <div className=\"head-title\">ErgoPool</div>\n                            <div className=\"head-sub-title\">Proxy Interface</div>\n                        </div>\n                        <div className=\"action-button\">\n                            <div className=\"floater\"/>\n                            {this.props.apiKey ? (\n                                <React.Fragment>\n                                    <button className=\"btn blue\" onClick={this.openAuthPanel}>Update Api key</button>\n                                    {!this.props.walletInitialized ? (\n                                        <button className=\"btn bordered\" onClick={this.openAuthPanel}>Initialize\n                                            Wallet</button>\n                                    ) : this.props.walletLocked ?\n                                        <button className=\"btn bordered\" onClick={this.openUnlockPanel}>UnLock\n                                            Wallet</button> :\n                                        <button className=\"btn bordered\" onClick={this.lockWallet}>lock Wallet</button>\n                                    }\n                                </React.Fragment>\n                            ) : <button className=\"btn blue set-api-key\" onClick={this.openAuthPanel}>Set Api key</button>\n                            }\n                            <button className=\"btn bordered icon-button\" onClick={this.reloadProxyConfig}\n                                    title=\"Reload pool configuration\"><i className=\"ep-icon-refresh\"/></button>\n                        </div>\n                        <div className=\"proxy-status\">\n                            {this.props.node.message ? (\n                                <React.Fragment>\n                                    <i className=\"ep-icon-information\"/>\n                                    <div className=\"pr-info\">\n                                        {this.props.node.message}\n                                    </div>\n                                </React.Fragment>) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => {\n    return {\n        apiKey: state.proxy.apiKey,\n        walletInitialized: state.proxy.walletInitialized,\n        walletLocked: state.proxy.walletLocked,\n        node: state.proxy.node\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        storeApiKey: (apiKey, walletInitialized, walletLocked) => dispatch(storeApiKey(apiKey, walletInitialized, walletLocked)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationHeader);\n","import * as actionTypes from '../actionTypes';\nimport proxyNetwork from '../../network/proxy';\n\nexport const loadNodeDataAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            proxyNetwork.info().then(response => {\n                    const data = response.data;\n                    setTimeout(getData, 5000);\n                    dispatch({\n                        type: actionTypes.STORE_NODE_DATA,\n                        payload: {\n                            synced: data.fullHeight === data.headersHeight,\n                            start: data.launchTime,\n                            mining: data.isMining,\n                            height: data.fullHeight,\n                            peers: data.peersCount,\n                            version: data.appVersion,\n                            bestBlock: data.previousFullHeaderId,\n                            pk: data.proxy.miner.pk,\n                            status: data.proxy.status.health,\n                            message: data.proxy.status.reason,\n                            mnemonicSaved: data.proxy.mnemonicStatus === \"success\",\n                        }\n                    });\n                }).catch(error => {\n                    setTimeout(getData, 10000);\n                }\n            );\n        };\n        getData();\n    }\n};\n\n\nexport const storeApiKey = (apiKey, walletInitialized, walletLocked) => ({\n    type: actionTypes.STORE_NODE_API_KEY, payload: {\n        apiKey: apiKey,\n        walletInitialized: walletInitialized,\n        walletLocked: walletLocked\n    }\n});\n","import React from 'react';\nimport { Production } from \"../../build/production\";\nimport Address from \"./address/Address\";\nimport MenuBar from '../main_layout/header/menu_bar/MenuBar';\nimport MenuBarNavigation from '../main_layout/header/menu_bar/MenuBarNavigation';\nimport { NavLink } from \"react-router-dom\";\nimport Footer from '../main_layout/footer/Footer';\nimport NavigationHeader from \"./navigation_header/NavigationHeader\";\nimport NavigationToggle from \"./navigation_toggle/NavigationToggle\";\nimport { connect } from \"react-redux\";\nimport { setUserPk } from \"../../store/actions/apiActions\";\nimport ProxyNetworking from \"../../network/proxy\";\n\nclass UserLayout extends React.Component {\n    state = {\n        navigationOpen: false,\n    };\n\n    updateUserId = () => {\n        const stateUserId = this.props.userId;\n        if (Production.IsProxy()) {\n            const proxyUserId = this.props.proxyUserId;\n            if (proxyUserId !== stateUserId) {\n                this.props.setUserPk(proxyUserId);\n            }\n        } else {\n            const urlUserId = this.props.match.params.userId;\n            if (urlUserId !== stateUserId) {\n                this.props.setUserPk(urlUserId);\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.updateUserId();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.updateUserId();\n    }\n\n    toggleNavigation = () => {\n        this.setState(prevState => {\n            return {navigationOpen: !prevState.navigationOpen}\n        });\n    };\n\n    getUrl = (suffix) => Production.IsServer() ? \"/user/\" + this.props.match.params.userId + suffix : suffix;\n\n    render = () => {\n        let layoutClasses = Production.IsServer() ? [\"user\"] : [\"proxy\", \"user\"];\n        if (this.state.navigationOpen) {\n            layoutClasses.push(\"active\");\n        }\n        layoutClasses = layoutClasses.join(\" \");\n        return (\n            <div>\n                <div className={layoutClasses}>\n                    {Production.IsServer() ? <MenuBar/> : <NavigationHeader toggleNavigation={this.toggleNavigation}/>}\n                    <ul className=\"navigation\">\n                        {Production.IsServer() ? <NavigationToggle click={() => this.toggleNavigation()}/> : null}\n                        <li><NavLink activeClassName=\"active\" to={this.getUrl(\"/\")} exact>\n                            <i className=\"ep-icon-user-dashboard\"/><span>Dashboard</span>\n                        </NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to={this.getUrl(\"/wallet/\")}>\n                            <i className=\"ep-icon-user-wallet\"/><span>Wallet</span>\n                        </NavLink></li>\n                        {/*<li><NavLink activeClassName=\"active\" to={this.getUrl(\"/config/\")}>*/}\n                        {/*    <i className=\"ep-icon-user-setting\"/><span>Settings</span>*/}\n                        {/*</NavLink></li>*/}\n                        {Production.IsProxy() ? (\n                            <React.Fragment>\n                                <li><NavLink activeClassName=\"active\" to={this.getUrl(\"/config/\")}>\n                                    <i className=\"ep-icon-user-setting\"/><span>Settings</span>\n                                </NavLink></li>\n                                <hr/>\n                                <li>\n                                    <a href=\"/swagger\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <i className=\"ep-icon-useralt-swagger\"/>\n                                        <span>Swagger</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://explorer.ergoplatform.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <i className=\"ep-icon-useralt-ergo-explorer\"/>\n                                        <span>Explorer</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://ergoplatform.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <i className=\"ep-icon-useralt-ergo1\"/>\n                                        <span>ErgoPlatform</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://ergopool.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <i className=\"ep-icon-logo-fill\"/>\n                                        <span>ErgoPool</span>\n                                    </a>\n                                </li>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <li><NavLink activeClassName=\"active\" to=\"/support/\">\n                                    <i className=\"ep-icon-user-help-desk\"/><span>Support</span>\n                                </NavLink></li>\n                                <MenuBarNavigation/>\n                            </React.Fragment>\n                        )}\n                    </ul>\n                    <div className=\"content\">\n                        {Production.IsServer() ? (\n                            <React.Fragment>\n                                Welcome,\n                                <Address userId={this.props.match.params.userId}/>\n                            </React.Fragment>\n                        ) : null}\n                        {this.props.children}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n                <Footer/>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => {\n    let res = {\n        dashboard: state.api.dashboard,\n        userId: state.api.userId\n    }\n    if(Production.IsProxy()){\n        res['proxyUserId'] = state.proxy.node.pk;\n    }\n    return res\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: (userId) => dispatch(setUserPk(userId))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);\n","import React from 'react';\n\nclass ChartFilter extends React.Component {\n    state = {\n        visible: false\n    };\n\n    changeState = () => {\n        this.setState(prevState => {\n            return {visible: !prevState.visible}\n        })\n    };\n\n    apply = () => {\n        this.props.onApply();\n        this.changeState();\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul className={\"chart-filter \" + (this.state.visible ? \"active\" : \"\")}>\n                    <div onClick={this.changeState}>\n                        Custom Time period <i className=\"ep-icon-filter-chart\"/>\n                    </div>\n                    <div className=\"chart-filter-content\">\n                        {this.props.children}\n                        <div className=\"action-row\">\n                            <div className=\"btn-holder\">\n                                <button className=\"btn gray\" onClick={this.changeState}>Cancel</button>\n                            </div>\n                            <div className=\"btn-holder\">\n                                <button className=\"btn blue\" onClick={this.apply}>Apply</button>\n                            </div>\n                        </div>\n                    </div>\n                </ul>\n                <ul className=\"chart-filter-series\">\n                    {\n                        this.props.series.map(\n                            value => (\n                                <li key={value.key}>\n                                    <span style={{backgroundColor: value.color}}/>\n                                    {value.key}\n                                </li>\n                            )\n                        )\n                    }\n                </ul>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default ChartFilter;\n","import React from 'react';\n\n\nconst card = (props) => {\n    const className = props.customClass ? \"card \" + props.customClass : \"card\";\n    return (\n        <div className={className}>\n            <div className=\"card-wrapper\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default card;\n","import React from 'react';\n\n\nconst CardTitle = (props) => <div className=\"card-title\">{props.children}</div>;\n\nexport default CardTitle;\n","import React from 'react';\n\n\nconst cardContent = (props) => <div className={\"card-content\" + (props.className ? \" \" + props.className : \"\") }>{props.children}</div>;\n\nexport default cardContent;\n","import React from 'react';\n\n\nconst CardCol = (props) => {\n    return (\n        <div className=\"card-col\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default CardCol;\n","import React from 'react';\n\nclass Timer extends React.Component {\n    state = {\n        initial: new Date().getTime(),\n        seconds:0,\n        minutes:0,\n        hours:0\n    };\n    padDigit = value => value < 10 ? \"0\" + value : value;\n    componentDidMount() {\n        this.start();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.start();\n    }\n    start = () => {\n        setTimeout(()=>{\n            const initial = (this.props.initial ?  this.props.initial : this.state.initial);\n            const currentTime = new Date().getTime();\n            const diff = parseInt((currentTime - initial) / 1000);\n            const seconds = diff % 60;\n            const minutes = parseInt(diff / 60) % 60;\n            const hours = parseInt(diff / 3600);\n            this.setState({\n                seconds: seconds,\n                minutes: minutes,\n                hours: hours\n            })\n        }, 1000)\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"timer-hour\">{this.state.hours}</div>\n                <div className=\"timer-minute\"> :{this.padDigit(this.state.minutes)}</div>\n                <div className=\"timer-second\"> :{this.padDigit(this.state.seconds)}</div>\n            </div>\n        )\n    };\n}\n\nexport default Timer;\n","import React from 'react';\n\n\nconst customCol = (props) => {\n    return (\n        <div className=\"card-col custom\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default customCol;\n\n\n","import React from 'react';\n\n\nconst customCard = (props) => {\n    return (\n        <div className=\"card-holder\">\n            <h1>{props.title}</h1>\n            <div className=\"row-content\">\n                <span>{props.value}</span>\n            </div>\n        </div>\n    )\n};\n\nexport default customCard;\n","import React from 'react';\nimport Card from '../card_row/card/Card';\nimport CardTitle from '../card_row/card/CardTitle';\nimport CardContent from '../card_row/card/CardContent';\nimport CardCol from '../card_row/card_col/CardCol';\nimport Timer from '../../../../components/timer/Timer';\nimport moment from \"moment\";\nimport CustomCol from \"./custom_col/CustomCol\";\nimport CustomCard from './custom_col/custom_card/CustomCard';\nimport { connect } from \"react-redux\";\n\nconst proxyCardRow = (props) => {\n    const node = props.node;\n    const nodeStartDate = moment(new Date(node.start)).format('YYYY-MM-DD');\n    const nodeStartTime = moment(new Date(node.start)).format(' HH:mm:ss');\n    return (\n        <React.Fragment>\n            <CardCol>\n                <Card>\n                    <CardTitle>Node Started At</CardTitle>\n                    <CardContent>\n                        <Timer initial={node.start}/>\n                        <CardContent className=\"sublime\">{nodeStartDate}</CardContent>\n                        <CardContent className=\"sublime\">{nodeStartTime}</CardContent>\n                    </CardContent>\n                </Card>\n            </CardCol>\n            <CardCol>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Node State</CardTitle>\n                    <CardContent\n                        className=\"text-blue\">{node.synced ? \"Synced\" : \"Synchronization\"}</CardContent>\n                </Card>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Mining status</CardTitle>\n                    <CardContent className=\"text-blue\">{node.mining ? \"Enabled\" : \"Disabled\"}</CardContent>\n                </Card>\n            </CardCol>\n            <CardCol>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Current Height</CardTitle>\n                    <CardContent>{node.height}</CardContent>\n                </Card>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Peers Connected</CardTitle>\n                    <CardContent>{node.peers}</CardContent>\n                </Card>\n            </CardCol>\n            <CustomCol>\n                <CustomCard title=\"Node Version\" value={node.version}/>\n                <CustomCard title=\"Best Block id\" value={node.bestBlock}/>\n            </CustomCol>\n        </React.Fragment>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        node: state.proxy.node\n    };\n};\n\nexport default connect(mapStateToProps)(proxyCardRow);\n","import React from 'react';\n\n\nconst CardTitle = (props) => <div className=\"card-title2\">{props.children}</div>;\n\nexport default CardTitle;\n","import React from 'react';\n\n\nconst cardContent = (props) => <div className=\"card-filter\">{props.children}</div>;\n\nexport default cardContent;\n","import React from 'react';\nimport ProxyCardRow from \"../proxy_card_row/ProxyCardRow\";\nimport Card from './card/Card';\nimport CardTitle from './card/CardTitle';\nimport CardTitle2 from './card/CardTitle2';\nimport CardFilter from './card/CardFilter';\nimport CardContent from './card/CardContent';\nimport CardCol from './card_col/CardCol';\nimport Timer from '../../../../components/timer/Timer';\nimport * as formatter from '../../../../formatter';\nimport { connect } from \"react-redux\";\nimport { Production } from '../../../../build/production';\n\nconst PERIOD_STATES = [\"Daily\", \"Weekly\", \"Monthly\"];\n\nclass CardRow extends React.Component {\n    state = {\n        period: \"Daily\"\n    };\n\n    rotatePeriod = () => {\n        this.setState(state => {\n            const index = (PERIOD_STATES.indexOf(state.period) + 1) % PERIOD_STATES.length;\n            return {\n                ...state,\n                period: PERIOD_STATES[index]\n            }\n        });\n    };\n\n    render = () => {\n        let contribution = 1;\n        if (this.props.round_valid_shares)\n            contribution = (this.props.dashboard.round_valid_shares / this.props.round_valid_shares);\n        contribution = (100 * contribution).toFixed(1);\n        const totalShare = this.props.dashboard.user.round_valid_shares + this.props.dashboard.user.round_invalid_shares;\n        const validShareRatio = (totalShare > 0 ? 100 * this.props.dashboard.user.round_valid_shares / totalShare : 100).toFixed(1);\n        const invalidShareRatio = (totalShare > 0 ? 100 * this.props.dashboard.user.round_invalid_shares / totalShare : 0).toFixed(1);\n        const hashRate = this.props.info.hash_rate;\n        let earning = 0;\n        if (hashRate.network !== 1) {\n            earning = 720.0 * (this.props.dashboard.user.hash_rate.avg - 1) / (hashRate.network - 1) * 67500000000;\n        }\n        if (this.state.period === \"Weekly\") {\n            earning *= 7;\n        } else if (this.state.period === \"Monthly\") {\n            earning *= 30;\n        }\n        return (\n            <div className=\"card-row\">\n                <CardCol>\n                    <Card>\n                        <CardTitle>Time Elapsed</CardTitle>\n                        <CardContent>\n                            <Timer initial={this.props.dashboard.timestamp}/>\n                        </CardContent>\n                        <CardTitle>Contribution</CardTitle>\n                        <CardContent>{contribution}%</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card customClass=\"card-half\">\n                        <CardTitle>Immature balance</CardTitle>\n                        <CardContent>{formatter.ergo(this.props.dashboard.user.immature)} Erg</CardContent>\n                    </Card>\n                    <Card customClass=\"card-half\">\n                        <CardTitle>Mature balance</CardTitle>\n                        <CardContent>{formatter.ergo(this.props.dashboard.user.mature)} Erg</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Shares (Round)</CardTitle>\n                        <CardTitle2>Valid {validShareRatio}%</CardTitle2>\n                        <CardContent>{this.props.dashboard.user.round_valid_shares}</CardContent>\n                        <CardTitle2>Invalid {invalidShareRatio}%</CardTitle2>\n                        <CardContent>{this.props.dashboard.user.round_invalid_shares}</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Hashrate</CardTitle>\n                        <CardTitle2>Current <br/>(30 minutes)</CardTitle2>\n                        <CardContent>{formatter.hashRate(this.props.dashboard.user.hash_rate.current)}H/s</CardContent>\n                        <CardTitle2>Average (24h)</CardTitle2>\n                        <CardContent>{formatter.hashRate(this.props.dashboard.user.hash_rate.avg)}H/s</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Estimated Earning</CardTitle>\n                        <CardContent>{formatter.ergo(earning)} Erg</CardContent>\n                        <CardFilter>Time period filter</CardFilter>\n                        <CardContent>\n                            {this.state.period}\n                            <i className=\"ep-icon-filter\" onClick={this.rotatePeriod}/>\n                        </CardContent>\n                    </Card>\n                </CardCol>\n                {Production.IsProxy() ? (\n                    <ProxyCardRow/>\n                ) : null}\n                <div className=\"clear\"/>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    dashboard: state.api.dashboard,\n    api: state.api,\n    info: state.api.info,\n});\n\nexport default connect(mapStateToProps)(CardRow);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport UserLayout from '../../../layouts/user_layout/UserLayout';\nimport ChartFilter from \"../chart_filter/ChartFilter\";\nimport CardRow from './card_row/CardRow';\nimport Panel from '../../../components/panel/Panel';\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from 'rc-time-picker';\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'rc-time-picker/assets/index.css';\nimport { ApiNetwork } from \"../../../network/api\";\nimport * as formatter from '../../../formatter';\nimport { LineChart, Legend, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { loadApiDashboardAsync } from \"../../../store/actions/apiActions\";\n\nconst hashRateSeries = [\n    {key: \"current\", color: \"#42c3be\"},\n    {key: \"avg\", color: \"#5d62b5\"},\n];\n\nconst shareSeries = [\n    {key: \"valid\", color: \"#379f2c\"},\n    {key: \"invalid\", color: \"#d85e5a\"},\n];\n\nclass MainPage extends React.Component {\n    state = {\n        hashRate: {\n            user: '',\n            data: [],\n            fromDate: null,\n            fromTime: null,\n            toDate: null,\n            toTime: null,\n        },\n        share: {\n            user: '',\n            data: [],\n            fromDate: null,\n            fromTime: null,\n            toDate: null,\n            toTime: null,\n        },\n        userId: ''\n    };\n\n    setHashRateState = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                hashRate: {\n                    ...state.hashRate,\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    setShareState = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                share: {\n                    ...state.share,\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    getTimeStamp = (fromDate, fromTime) => {\n        if (fromDate && fromTime) {\n            const dateStr = fromDate.toDateString();\n            const timeStr = new Date(fromTime.toString()).toTimeString();\n            const startDateTime = new Date(dateStr + \" \" + timeStr);\n            return startDateTime.getTime() / 1000;\n        }\n        return null;\n    };\n\n    loadHashRateChart = (force = false) => {\n        if (this.props.userId !== this.state.hashRate.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    hashRate: {\n                        ...state.hashRate,\n                        user: this.props.userId\n                    }\n                }\n            });\n            let fromTimeStamp = this.getTimeStamp(this.state.hashRate.fromDate, this.state.hashRate.fromTime);\n            let toTimeStamp = this.getTimeStamp(this.state.hashRate.toDate, this.state.hashRate.toTime);\n            ApiNetwork.hashRate(this.props.userId, {\n                fromTimeStamp: fromTimeStamp,\n                toTimeStamp: toTimeStamp\n            }).then(response => {\n                this.setState(state => {\n                    return {\n                        ...state,\n                        hashRate: {\n                            ...state.hashRate,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadShareChart = (force = false) => {\n        if (this.props.userId !== this.state.share.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    share: {\n                        ...state.share,\n                        user: this.props.userId\n                    }\n                }\n            });\n            let fromTimeStamp = this.getTimeStamp(this.state.share.fromDate, this.state.share.fromTime);\n            let toTimeStamp = this.getTimeStamp(this.state.share.toDate, this.state.share.toTime);\n            ApiNetwork.share(this.props.userId, {\n                fromTimeStamp: fromTimeStamp,\n                toTimeStamp: toTimeStamp\n            }).then(response => {\n                this.setState(state => {\n                    return {\n                        ...state,\n                        share: {\n                            ...state.share,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadDashboard = () => {\n        if (this.props.userId !== this.state.userId) {\n            this.props.getApiDashboard();\n            this.setState({userId: this.props.userId});\n        }\n    }\n\n    loadCharts = () => {\n        this.loadHashRateChart();\n        this.loadShareChart();\n        this.loadDashboard();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.loadCharts();\n    }\n\n    componentDidMount() {\n        this.loadCharts();\n    };\n\n    render = () => {\n        return (\n            <div>\n                <CardRow/>\n                <Panel>\n                    <ResponsiveContainer height={337}>\n                        <LineChart data={this.state.hashRate.data}>\n                            <XAxis dataKey=\"timestamp\"\n                                   textAnchor=\"end\"\n                                   tickFormatter={timestamp => moment(new Date(1000 * timestamp)).format('HH:mm')}/>\n                            <YAxis tickFormatter={value => (formatter.hashRate(value) + \"H/s\")}/>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <Tooltip\n                                isAnimationActive={false}\n                                formatter={(value, name, props) => (formatter.hashRate(value) + \"H/s\")}\n                                labelFormatter={(value) => moment(new Date(1000 * value)).format(\"YYYY-MM-DD HH:mm\")}/>\n                            <Line isAnimationActive={false} type=\"linear\" dataKey=\"current\" stroke=\"#42c3be\"/>\n                            <Line isAnimationActive={false} type=\"monotone\" dataKey=\"avg\" stroke=\"#5d62b5\"/>\n                            <Legend verticalAlign=\"top\" height={36}/>\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <ChartFilter\n                        onApply={() => this.loadHashRateChart(true)}\n                        series={hashRateSeries}>\n                        <label>From</label>\n                        <DatePicker selected={this.state.hashRate.fromDate}\n                                    onChange={(date) => this.setHashRateState(\"fromDate\", date)}/>\n                        <TimePicker value={this.state.hashRate.fromTime}\n                                    onChange={(time) => this.setHashRateState(\"fromTime\", time)}/>\n                        <label>To</label>\n                        <DatePicker selected={this.state.hashRate.toDate}\n                                    onChange={(date) => this.setHashRateState(\"toDate\", date)}/>\n                        <TimePicker value={this.state.hashRate.toTime}\n                                    onChange={(time) => this.setHashRateState(\"toTime\", time)}/>\n                    </ChartFilter>\n                </Panel>\n                <Panel>\n                    <ResponsiveContainer height={337}>\n                        <LineChart data={this.state.share.data}>\n                            <XAxis dataKey=\"date\"\n                                   tickFormatter={timestamp => moment(new Date(1000 * timestamp)).format('HH:mm')}/>\n                            <YAxis/>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <Tooltip\n                                isAnimationActive={false}\n                                labelFormatter={(value) => moment(new Date(1000 * value)).format(\"YYYY-MM-DD HH:mm\")}/>\n                            <Line\n                                isAnimationActive={false}\n                                type=\"linear\"\n                                dataKey=\"valid\"\n                                stroke=\"#379f2c\"/>\n                            <Line\n                                isAnimationActive={false}\n                                type=\"monotone\"\n                                dataKey=\"invalid\"\n                                stroke=\"#d85e5a\"/>\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <ChartFilter\n                        onApply={() => this.loadShareChart(true)}\n                        series={shareSeries}>\n                        <label>From</label>\n                        <DatePicker selected={this.state.share.fromDate}\n                                    onChange={(date) => this.setShareState(\"fromDate\", date)}/>\n                        <TimePicker value={this.state.share.fromTime}\n                                    onChange={(time) => this.setShareState(\"fromTime\", time)}/>\n                        <label>To</label>\n                        <DatePicker selected={this.state.share.toDate}\n                                    onChange={(date) => this.setShareState(\"toDate\", date)}/>\n                        <TimePicker value={this.state.share.toTime}\n                                    onChange={(time) => this.setShareState(\"toTime\", time)}/>\n                    </ChartFilter>\n                </Panel>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getApiDashboard: () => dispatch(loadApiDashboardAsync(true))\n    };\n};\n\nexport const MainPageConnected = connect(mapStateToProps, mapDispatchToProps)(MainPage);\n\nexport default withLayout(UserLayout)(MainPageConnected);\n\n","import React from 'react';\nimport { loadMenu } from \"../../../../store/actions/apiActions\";\nimport { connect } from \"react-redux\";\nimport ProxyNetworking from \"../../../../network/proxy\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nclass SaveMnemonic extends React.Component {\n    state = {\n        password: '',\n        loading: false,\n        message: ''\n    };\n\n    onChange = (event) => {\n        this.setState({password: event.target.value});\n    };\n\n    submit = () => {\n        this.setState({loading: true})\n        let method = ProxyNetworking.saveMnemonic\n        if(this.props.mnemonicSaved){\n            method = ProxyNetworking.loadMnemonic\n        }\n        method(this.state.password).then(response => {\n            this.setState({loading: false});\n        }).catch(error => {\n            this.setState({loading: false});\n        })\n    }\n\n    render(){\n        console.log(this.props.mnemonicSaved);\n        return (\n            <div className=\"split-panel\">\n                <div className=\"split-panel-form\">\n                    <label>\n                        Mnemonic password\n                        <input type=\"password\" value={this.state.password} onChange={this.onChange}/>\n                    </label>\n                    <button className=\"btn blue\" onClick={this.submit}>\n                        {this.props.mnemonicSaved ? \"Load Mnemonic\" : \"Save Mnemonic\"}\n                        {this.state.loading ? <BarLoader color=\"white\"/> : null}\n                    </button>\n                </div>\n                {this.props.mnemonicSaved ? (\n                    <div className=\"split-panel-text\">\n                        You stored your proxy mnemonic to file.\n                        <br/>\n                        Please load mnemonic to proxy worked\n                    </div>\n                ) : (\n                    <div className=\"split-panel-text\">\n                        You must save mnemonic to a file to avoid mnemonic lost.\n                        <br/>\n                        this mnemonic only used for mining colatoral box\n                    </div>\n                )}\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    mnemonicSaved: state.proxy.node.mnemonicSaved,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMenu: () => dispatch(loadMenu())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveMnemonic);\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport UserLayout from \"../../../layouts/user_layout/UserLayout\";\nimport Panel from '../../../components/panel/Panel';\nimport SaveMnemonic from './save-mnemonic/SaveMnemonic';\n\nconst configPage = (props) => {\n    return (\n        <div className=\"main\">\n            <Panel>\n                <SaveMnemonic/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default withLayout(UserLayout)(configPage);\n","import React from \"react\";\nimport {\n    BarChart,\n    Bar,\n    LineChart,\n    Line,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ReferenceArea, ResponsiveContainer\n} from \"recharts\";\n\nexport default class StreamingDemo extends React.Component {\n    state = {\n        refAreaLeft: \"\",\n        refAreaRight: \"\",\n        zoomStart: \"\",\n        zoomEnd: \"\",\n        sliceData: []\n    };\n\n    zoom() {\n        let {refAreaLeft, refAreaRight} = this.state;\n        if (refAreaLeft === refAreaRight || refAreaRight === \"\") {\n            this.setState(() => ({\n                refAreaLeft: \"\",\n                refAreaRight: \"\"\n            }));\n            return;\n        }\n        // xAxis domain\n        if (refAreaLeft > refAreaRight)\n            [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n        const leftIndex = this.props.data.findIndex(item => item[this.props.xKey] === refAreaLeft);\n        const rightIndex = this.props.data.findIndex(item => item[this.props.xKey] === refAreaRight);\n        this.setState((oldState) => ({\n            refAreaLeft: \"\",\n            refAreaRight: \"\",\n            zoomStart: refAreaLeft,\n            zoomEnd: refAreaRight,\n            sliceData: this.props.data.slice(leftIndex, rightIndex),\n        }));\n    }\n    onMouseDown(e) {\n        try {\n            this.setState({refAreaLeft: e.activeLabel});\n        }catch (e) {\n\n        }\n    }\n    onMouseMove(e) {\n        try {\n            if(this.state.refAreaLeft)\n                this.setState({refAreaRight: e.activeLabel})\n        }catch (e) {\n\n        }\n    }\n\n    xFormatter = value => {\n        console.log(value);\n        if(this.props.xFormatter){\n            return this.props.xFormatter(value)\n        }\n        return value;\n    };\n\n    render() {\n        let sliceData = this.state.sliceData;\n        if(sliceData.length === 0)\n            sliceData = this.props.data;\n        return (\n            <div className=\"highlight-bar-charts\">\n                <ResponsiveContainer height={337}>\n                    <BarChart data={sliceData}>\n                        <XAxis\n                            tickFormatter={this.xFormatter}\n                            dataKey={this.props.xKey}/>\n                        <YAxis/>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <Tooltip isAnimationActive={false}/>\n                        <Bar\n                            isAnimationActive={false}\n                            dataKey={this.props.yKey}\n                            stroke={this.props.color}\n                            fill={this.props.color}/>\n                    </BarChart>\n                </ResponsiveContainer>\n                <ResponsiveContainer height={100}>\n                    <LineChart data={this.props.data}\n                               onMouseDown={this.onMouseDown.bind(this)}\n                               onMouseMove={this.onMouseMove.bind(this)}\n                               onMouseUp={this.zoom.bind(this)}>\n                        <XAxis dataKey={this.props.xKey}/>\n                        <YAxis/>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <Line\n                            type=\"monotone\"\n                            dataKey={this.props.yKey}\n                            stroke={this.props.color}\n                            fill={this.props.color}\n                            isAnimationActive={false}/>\n                        {this.state.refAreaLeft && this.state.refAreaRight ? (\n                        <ReferenceArea\n                            x1={this.state.refAreaLeft}\n                            x2={this.state.refAreaRight}\n                            strokeOpacity={0.3}\n                        />) : (<ReferenceArea\n                            x1={0}\n                            x2={this.state.zoomStart}\n                            strokeOpacity={0.3}\n                        />)}\n                        {this.state.refAreaLeft && this.state.refAreaRight ? null :<ReferenceArea\n                                x1={this.state.zoomEnd}\n                                x2={this.props.data.length - 1}\n                                strokeOpacity={0.3}\n                            />}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport * as formatter from '../../../../formatter';\nimport ProxyNetworking from \"../../../../network/proxy\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nclass WalletBox extends React.Component {\n    state = {\n        amount: 0,\n        address: '',\n        walletAmount: 0,\n        walletLoaded: false,\n        loading: false,\n        sendTransaction: false,\n        paymentMessage: ''\n    };\n\n    onChange = (key, value) => {\n        this.setState({[key]: value});\n    };\n\n    payToAddress = () => {\n        this.setState({sendTransaction: true});\n        ProxyNetworking.payment(this.state.address, this.state.amount * 1e9).then(response => {\n            this.setState({sendTransaction: false, paymentMessage: response.data});\n        }).catch(error => {\n            this.setState({sendTransaction: false, paymentMessage: error.data});\n        });\n    }\n\n    loadWalletAmount = (showLoading) => {\n        if(showLoading) {\n            this.setState({loading: true});\n        }\n        ProxyNetworking.balance().then(response => {\n            this.setState({\n                walletAmount: response.data.balance,\n                walletLoaded: true,\n                loading: false\n            })\n        }).catch(error => {\n            this.setState({loading: false});\n        })\n    }\n\n    componentDidMount() {\n        if(!this.state.walletLoaded && !this.state.loading){\n            this.loadWalletAmount(false);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"split-panel\">\n                <div className=\"split-panel-form\">\n                    <label>\n                        Recipient address\n                        <input value={this.state.address}\n                               onChange={event => this.onChange(\"address\", event.target.value)}/>\n                    </label>\n                    <label>\n                        Amount\n                        <input value={this.state.amount}\n                               onChange={event => this.onChange(\"amount\", event.target.value)}/>\n                    </label>\n                    <button className=\"btn blue\" onClick={this.payToAddress}>\n                        Send\n                        {this.state.sendTransaction ? <BarLoader color=\"white\"/> : null}\n                    </button>\n                    <div>{this.state.paymentMessage}</div>\n                </div>\n                <div className=\"split-panel-text\">\n                    <h1>Wallet Balance</h1>\n                    <h1>{formatter.ergo(this.state.walletAmount)} Ergs</h1>\n                    <button className=\"btn blue\" onClick={() => this.loadWalletAmount(true)}>\n                        Update\n                        {this.state.loading ? <BarLoader color=\"white\"/> : null}\n                    </button>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default WalletBox;\n","import React from 'react';\nimport { ApiNetwork } from \"../../../../network/api\";\n\nconst columns = [\n    {\n        title: 'Paid on',\n        dataIndex: 'date',\n        key: 'date',\n    },\n    {\n        title: 'From height',\n        dataIndex: 'from_height',\n        key: 'from_height',\n    },\n    {\n        title: 'To Height',\n        dataIndex: 'to_height',\n        key: 'to_height',\n    },\n    {\n        title: 'Amount (Erg)',\n        dataIndex: 'amount',\n        key: 'amount',\n    },\n    {\n        title: 'Tx Hash',\n        dataIndex: 'tx',\n        key: 'tx',\n    },\n];\n\nclass Payout extends React.Component {\n    state = {\n        \"data\": [],\n        \"sorting\": \"date\",\n        \"sortingDir\": \"asc\",\n        \"pageIndex\": 0,\n        \"perPage\": 10\n    };\n\n    sort = (key) => {\n        console.log(key);\n        this.setState(oldState => {\n            const direction = (key === this.state.sorting && oldState.sortingDir === 'asc') ? 'desc' : 'asc';\n            return {\n                sorting: key,\n                sortingDir: direction\n            }\n        })\n    };\n\n    loadPayments = () => {\n        ApiNetwork.getPastPayment().then(response => {\n            this.setState({data: response});\n        });\n    };\n\n    componentWillMount() {\n        console.log(\"here\")\n        this.loadPayments();\n    }\n\n    render = () => {\n        const data = this.state.data;\n        return (\n            <div className=\"panel custom-table\">\n                <table>\n                    <thead>\n                    <tr>\n                        {columns.map(column => (\n                                <th key={column.dataIndex} className=\"sorted\">\n                                    <button className=\"sort-button\" onClick={() => this.sort(column.dataIndex)}>\n                                        {column.title} &nbsp;\n                                        {column.dataIndex === this.state.sorting ? this.state.sortingDir === 'asc' ?\n                                            <i className=\"ep-icon-sorted\"/> : <i className=\"ep-icon-sorted flipped\"/> : <i className=\"ep-icon-sort\"/>}\n                                    </button>\n                                </th>\n                            )\n                        )}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {data.map(dataRow => {\n                        return (\n                            <tr key={dataRow.key}>\n                                {columns.map(column => <td key={column.dataIndex}>{dataRow[column.dataIndex]}</td>)}\n                            </tr>\n                        )\n                    })}\n                    <tr colSpan={columns.length}>\n                        <td>\n                            <div className=\"paginator\">\n\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    };\n}\n\nexport default Payout;\n","import React from 'react';\nimport apiNetworking from '../../../../network/api';\n\nclass Withdraw extends React.Component {\n    state = {\n        amount: 0\n    };\n\n    onChange = (event) => {\n        this.setState({amount: event.target.value});\n    };\n\n    onSubmit = () => {\n        apiNetworking.post('/accounting/balance/', {\n            \"miner\": this.props.userId,\n            \"balance\": this.state.amount\n        }).then(response => {\n\n        }, error => {\n\n        })\n    };\n\n    render(){\n        return (\n            <div className=\"split-panel\">\n                <div className=\"split-panel-form\">\n                    <label>\n                        Withdraw\n                        <input value={this.state.amount} onChange={this.onChange}/>\n                    </label>\n                    <button className=\"btn blue\" onClick={this.onSubmit}> Submit </button>\n                </div>\n                <div className=\"split-panel-text\">\n                    System automatically withdraw ergs every day if reach 1 erg.\n                    <br/>\n                    If you want to withdraw any amount of your ergs.\n                    <br/>\n                    <b>you must pay your fee if pay it manually</b>\n                </div>\n            </div>\n        )\n    };\n}\nexport default Withdraw;\n","import React from 'react';\nimport DataTable from \"../../../../components/data_table/DataTable\";\nimport CopyToClipboard from \"@vigosan/react-copy-to-clipboard\";\nimport { Icon } from \"semantic-ui-react\";\n\n\n\nconst render_copy = row => (\n    <CopyToClipboard\n        render={({copy}) => (\n            <div onClick={() => copy(row)}>\n                <Icon name=\"copy\"/>\n            </div>\n        )}\n    />\n)\n\nconst columns = [\n    {header: \"Address\", key: \"address\", content: row => row},\n    {header: \" \", key: \"action\", content: render_copy},\n];\n\nclass Addresses extends React.Component {\n    state = {\n        data: [\"address1\", \"address2\"]\n    }\n    render = () => (\n        <div className=\"panel custom-table\">\n            <DataTable\n                hideSorting={true}\n                data={this.state.data}\n                rowSelect={this.rowSelect}\n                columns={columns}/>\n        </div>\n    );\n}\n\n\nexport default Addresses;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Production } from \"../../../build/production\";\nimport ZoomableChart from \"../../../components/zoomable_chart/ZoomableChart\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport UserLayout from \"../../../layouts/user_layout/UserLayout\";\nimport Panel from '../../../components/panel/Panel';\nimport moment from \"moment\";\nimport WalletBox from \"./wallet_box/WalletBox\";\nimport Withdraw from './withdraw/Withdraw';\nimport Payout from './payout/Payout';\nimport { ApiNetwork } from \"../../../network/api\";\nimport Addresses from \"./addresses/Addresses\";\n\n\nclass WalletPage extends React.Component {\n    state = {\n        data: [],\n        income: {\n            user: '',\n            data: [],\n        },\n        payout: {\n            user: '',\n            data: [\n                {date: new Date().getTime() / 1000, payout: 0},\n            ]\n        }\n    };\n\n    loadPayoutChart = (force = false) => {\n        if (this.props.userId !== this.state.payout.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    payout: {\n                        ...state.payout,\n                        user: this.props.userId\n                    }\n                }\n            });\n            ApiNetwork.payout(this.props.userId).then(response => {\n                this.setState(state => {\n                    let data = response.data.results;\n                    if (!data || data.length === 0)\n                        data = [{date: new Date().getTime() / 1000, payout: 0}];\n                    data.forEach(data_row => {\n                        if (data_row.amount < 0) {\n                            data_row.amount = -data_row.amount;\n                        }\n                    })\n                    return {\n                        ...state,\n                        payout: {\n                            ...state.payout,\n                            user: this.props.userId,\n                            data: data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadIncomeChart = (force = false) => {\n        if (this.props.userId !== this.state.income.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    income: {\n                        ...state.income,\n                        user: this.props.userId\n                    }\n                }\n            });\n            ApiNetwork.income(this.props.userId).then(response => {\n                console.log(response.data)\n                this.setState(state => {\n                    return {\n                        ...state,\n                        income: {\n                            ...state.income,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadCharts = () => {\n        this.loadPayoutChart();\n        this.loadIncomeChart();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.loadCharts();\n    }\n\n    componentDidMount() {\n        this.loadCharts();\n    };\n\n\n    render() {\n        return (\n            <div>\n                {Production.IsProxy() && this.props.apiKey ? (\n                    <Panel>\n                        <WalletBox/>\n                    </Panel>\n                ) : null}\n                {/*<Panel>*/}\n                {/*    <Withdraw/>*/}\n                {/*</Panel>*/}\n                <Panel>\n                    <ZoomableChart\n                        height={337}\n                        color=\"var(--azul)\"\n                        xKey=\"date\"\n                        yKey=\"amount\"\n                        xFormatter={timestamp => moment(new Date(1000 * timestamp)).format('YYYY:MM')}\n                        // yFormatter={amount => amount/1e9}\n                        data={this.state.payout.data}>\n\n                    </ZoomableChart>\n                </Panel>\n                <Panel>\n                    <ZoomableChart\n                        height={337}\n                        color=\"#42c3be\"\n                        xKey=\"height\"\n                        yKey=\"balance\"\n                        data={this.state.income.data}>\n\n                    </ZoomableChart>\n                </Panel>\n                {/*<Payout/>*/}\n                {/*{Production.IsProxy() && this.props.apiKey ? (*/}\n                {/*    <Addresses/>*/}\n                {/*) : null}*/}\n            </div>\n        )\n    };\n}\n\n\nconst mapStateToProps = state => {\n    let res = {\n        info: state.api.dashboard,\n        userId: state.api.userId,\n    }\n    if (Production.IsProxy()) {\n        res.apiKey = state.proxy.apiKey;\n    }\n    return res\n};\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport const WalletPageConnected = connect(mapStateToProps, mapDispatchToProps)(WalletPage);\nexport default withLayout(UserLayout)(WalletPageConnected);\n","import React from 'react';\n\n\nconst Header = (props) => {\n    return <div onClick={props.clicked} className=\"header\">{props.content}</div>;\n};\n\nexport default Header;\n","import React from 'react';\nimport { Markdown } from 'react-showdown';\n\nconst Content = (props) => (\n    <div className=\"content\">\n        <div className=\"wrapper\">\n            <Markdown markup={props.content}/>\n        </div>\n    </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport Header from './Header/Header';\nimport Content from './Content/Content';\n\nconst Element = (props) => {\n    return (\n        <li className={props.display ? \"active\" : null}>\n            <Header\n                content={props.title}\n                clicked={props.active}\n            />\n            <Content\n                content={props.content}\n                display={props.display}\n            />\n        </li>\n    )\n};\n\nexport default Element;\n","import React from 'react';\nimport Element from './Element/Element';\n\nclass Accordion extends React.Component {\n    state = {\n        current: 0\n    };\n    handleElementChange = (index) => {\n        this.setState({current: index});\n    };\n\n    render = () => {\n        let elements = this.props.rows.map((content, index) => {\n            return (\n                <Element\n                    key={index}\n                    title={content.question}\n                    content={content.answer}\n                    display={this.state.current === index}\n                    active={()=>this.handleElementChange(index)}\n                />\n            )\n        });\n        return (\n            <ul className=\"accordion\">\n                {elements}\n            </ul>\n        )\n    };\n}\n\nexport default Accordion;\n","import React from 'react';\nimport { ApiNetwork } from \"../../../network/api\";\nimport Accordion from './Accordion/Accordion';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\n\n\nclass Faq extends React.Component {\n    state = {\n        questions: []\n    };\n\n    componentWillMount() {\n        ApiNetwork.getUiJson(\"Faq.json\").then(data => {\n            this.setState({questions: data.items});\n        })\n    }\n\n    render() {\n        console.log(this.state.questions);\n        return (\n            <div className=\"faq\">\n                <Accordion rows={this.state.questions}/>\n                <div className=\"support\">\n                    Can't find what you are looking for? Ask us in Support section\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(MainLayout, {\n    title: 'Frequently Asked Questions'\n})(Faq);\n","import React from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { ApiNetwork } from \"../../../../network/api\";\n\nclass SupportForm extends React.Component {\n    state = {\n        recaptcha: '',\n        name: '',\n        email: '',\n        subject: '',\n        message: '',\n        siteKey: '',\n        responseMessage: '',\n        responseClass: '',\n    };\n\n    setKey = (key, value) => {\n        this.setState({[key]: value})\n    };\n\n    getRecaptcha = () => {\n        ApiNetwork.getSupport().then(data => {\n            if(data.site_key !== this.state.siteKey){\n                this.setState({siteKey: data.site_key});\n            }\n        })\n    };\n\n    componentWillMount() {\n        this.getRecaptcha();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getRecaptcha();\n    }\n\n    setResponseMessage = (message, className) => {\n        this.setState({responseMessage: message, responseClass: className});\n        setTimeout(()=>{this.setState({responseMessage: '', responseClass: ''})}, 5000);\n    };\n\n    submit = (event) => {\n        event.preventDefault();\n        ApiNetwork.support(\n            this.state.name,\n            this.state.email,\n            this.state.subject,\n            this.state.message,\n            this.state.recaptcha\n        ).then(response => {\n            this.setResponseMessage(\"Successfully submitted\", \"success\")\n        }).catch(error=>{\n            console.log(error);\n            this.setResponseMessage(\"an error occurred\", \"error\")\n        })\n    };\n\n    render = () => {\n        if(this.state.siteKey) {\n            return (\n                <form onSubmit={this.submit}>\n                    <div className={this.state.responseClass}>{this.state.responseMessage}</div>\n                    <label htmlFor=\"support_name\">Full Name</label>\n                    <input className=\"input\"\n                           id=\"support_name\"\n                           type=\"text\"\n                           value={this.state.name}\n                           onChange={(event => this.setKey(\"name\", event.target.value))}/>\n\n                    <label htmlFor=\"support_email\">Email Address</label>\n                    <input className=\"input\"\n                           id=\"support_email\"\n                           type=\"text\"\n                           value={this.state.email}\n                           onChange={(event => this.setKey(\"email\", event.target.value))}/>\n\n                    <label htmlFor=\"support_subject\">Subject</label>\n                    <input className=\"input\"\n                           id=\"support_subject\"\n                           type=\"text\"\n                           value={this.state.subject}\n                           onChange={(event => this.setKey(\"subject\", event.target.value))}/>\n                    <label>\n                        <ReCAPTCHA\n                            sitekey={this.state.siteKey}\n                            onChange={value => this.setKey('recaptcha', value)}\n                        />\n                    </label>\n                    <label htmlFor=\"support_message\">Message</label>\n                    <textarea id=\"support_message\"\n                              className=\"textarea\"\n                              rows=\"5\"\n                              value={this.state.message}\n                              onChange={(event => this.setKey(\"message\", event.target.value))}>\n                    </textarea>\n                    <input type=\"submit\" className=\"btn blue\" value=\"Submit\"/>\n                </form>\n            )\n        }\n        return null;\n    };\n}\n\nexport default SupportForm;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\nimport SupportForm from './support_form/SupportForm';\n\nconst support = () => {\n    return (\n        <div className=\"vertical-form\">\n            <div className=\"column\">\n                <div className=\"content\">\n                    Have you tried our <Link to='/faq'>F.A.Q</Link> section yet?\n                    It has lots of information about the site,\n                    and answers to most questions about using our services.\n                    You should check it out!\n                    <br/>\n                    <br/>\n                    Still need help?\n                    Use this form to get in touch.\n                    Our office hours are Saturday through Wednesday, 8 am to 5 pm +3:30 GMT,\n                    and we attempt to respond to support requests within 1 business day.\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"content\">\n                    <SupportForm/>\n                </div>\n            </div>\n            <div className=\"clear\"/>\n        </div>\n    )\n};\n\n\nexport default withLayout(MainLayout, {\n    hide_search: true,\n    title: 'Questions, Comments or Concerns?'\n})(support);\n","import React from 'react';\n\nclass ChangePassword extends React.Component {\n\n    state = {\n        oldPassword: '',\n        newPassword: '',\n        passwordConfirm: ''\n    }\n\n    submit = () => {\n\n    }\n\n    render = () => {\n        return (\n            <form onSubmit={this.submit}>\n                <div className=\"vertical-form\">\n                    <div className=\"column\">\n                        <div className=\"content\">\n                            Enter password to update\n                            <br/>\n                            <br/>\n                            <br/>\n                            <strong>This Feature is under construction</strong>\n                        </div>\n                    </div>\n                    <div className=\"column\">\n                        <div className=\"content\">\n                            <label>Old password</label>\n                            <input\n                                type=\"password\"\n                                className=\"input\"\n                                value={this.state.oldPassword}\n                                onChange={event => this.setState(\"oldPassword\", event.target.value)}\n                            />\n                            <label>New password</label>\n                            <input\n                                type=\"password\"\n                                className=\"input\"\n                                value={this.state.newPassword}\n                                onChange={event => this.setState(\"newPassword\", event.target.value)}\n                            />\n                            <label>New password retype</label>\n                            <input\n                                type=\"password\"\n                                className=\"input\"\n                                value={this.state.passwordConfirm}\n                                onChange={event => this.setState(\"passwordConfirm\", event.target.value)}\n                            />\n                            <div className=\"button-row\">\n                                <button className=\"btn blue\" onClick={this.submit}>Change my password</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clear\"/>\n                </div>\n            </form>\n        )\n    };\n}\n\nexport default ChangePassword;\n","import React from 'react';\nimport { ApiNetwork } from \"../../../../network/api\";\n\nclass TwoFA extends React.Component {\n    state = {\n        qrcode: ''\n    }\n\n    enable2FA = () => {\n        ApiNetwork.change2Fa().then(data => {\n            this.setState({qrcode: data.qrcode})\n        })\n    }\n\n    render = () => {\n        if (this.state.qrcode === '') {\n            return (\n                <React.Fragment>\n                    <div className=\"text-center\">\n                        To enable 2fa to change it hit button bellow.\n                        <br/>\n                        <strong>this operation can not be undone</strong>\n                    </div>\n                    <br/>\n                    <br/>\n                    <div className=\"text-center\">\n                        <button onClick={this.enable2FA} className=\"btn blue\">Enable/Change 2FA</button>\n                    </div>\n                </React.Fragment>\n            )\n        }\n        return (\n            <React.Fragment>\n                <div className=\"text-center\">Two step Authentication enabled for you.</div>\n                <div className=\"text-center\">Scan this code for later use</div>\n            <div className=\"text-center\">\n                <img style={{width: '200px'}}\n                     alt=\"qrcode\"\n                     src={`data:image/jpeg;base64,${this.state.qrcode}`} />\n            </div>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default TwoFA;\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport AdminLayout from \"../../../layouts/admin_layout/AdminLayout\";\nimport Panel from '../../../components/panel/Panel';\nimport ChangePassword from \"./change_password/ChangePassword\";\nimport TwoFA from \"./twoFA/TwoFA\";\n\nconst profile = (props) => {\n    return (\n        <div>\n            <Panel>\n                <ChangePassword/>\n            </Panel>\n            <Panel>\n                <TwoFA/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default withLayout(AdminLayout)(profile);\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport AdminLayout from '../../../layouts/admin_layout/AdminLayout'\nimport { ApiNetwork } from \"../../../network/api\";\nimport { hashRate, username } from '../../../formatter'\nimport DataTable from '../../../components/data_table/DataTable';\n\nconst columns = [\n    {header: \"User\", key: \"user\", content: (row) => username(row.user)},\n    {header: \"Hash rate\", key: \"hash_rate\", content: (row) => hashRate(row.hash_rate)},\n    {header: \"Valid Shares\", key: \"valid_shares\"},\n    {header: \"Invalid Shares\", key: \"invalid_shares\"},\n    {header: \"Last IP\", key: \"last_ip\"},\n    {header: \"Status\", key: \"status\", content: (row) => row.status},\n];\n\nclass User extends React.Component {\n    state = {\n        \"data\": [],\n        \"sorting\": \"date\",\n        \"sortingDir\": \"asc\",\n        \"pageIndex\": 0,\n        \"perPage\": 10\n    };\n\n    loadUsers = () => {\n        ApiNetwork.getUsers().then(response => {\n            this.setState({data: response.results});\n        });\n    };\n\n    componentWillMount() {\n        this.loadUsers();\n    }\n\n    sort = columnIndex => {\n        this.setState(state => {\n            const dir = this.state.sorting === columnIndex && this.state.sortingDir === 'asc' ? \"dest\" : \"asc\";\n            return {\n                ...state,\n                sorting: columnIndex,\n                sortingDir: dir\n            }\n        });\n    };\n\n    rowSelect = userRow => {\n        this.props.history.push(\"/admin/user/\" + userRow.user + \"/\");\n    };\n\n    render() {\n        return (\n            <div className=\"panel custom-table\">\n                <DataTable\n                    sort={this.sort}\n                    sorting={this.state.sorting}\n                    sortingDir={this.state.sortingDir}\n                    data={this.state.data}\n                    rowSelect={this.rowSelect}\n                    columns={columns}/>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(User);\n","import React from 'react';\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst miningParamForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Pool base factor</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.POOL_BASE_FACTOR}\n                            onChange={event => props.save(\"POOL_BASE_FACTOR\", event.target.value)}\n                        />\n                        <label>Latest allowed height for mining</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.THRESHOLD_HEIGHT}\n                            onChange={event => props.save(\"THRESHOLD_HEIGHT\", event.target.value)}\n                        />\n                        <label>Timestamp diff allowed to miner</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.THRESHOLD_TIMESTAMP}\n                            onChange={event => props.save(\"THRESHOLD_TIMESTAMP\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>\n                                Save changes\n                                {props.loading ? <BarLoader color={\"white\"}/> : null}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        this is comments about this panel\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default miningParamForm;\n","import React from 'react';\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst rewardForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Total reward of round</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.TOTAL_REWARD}\n                            onChange={event => props.save(\"TOTAL_REWARD\", event.target.value)}\n                        />\n                        <label>Total reward factor for pool transaction</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.REWARD_FACTOR}\n                            onChange={event => props.save(\"REWARD_FACTOR\", event.target.value)}\n                        />\n                        <label>Pool reward factor result precision</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.REWARD_FACTOR_PRECISION}\n                            onChange={event => props.save(\"REWARD_FACTOR_PRECISION\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>\n                                Save changes\n                                {props.loading ? <BarLoader color={\"white\"}/> : null}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Pool fee factor</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.FEE_FACTOR}\n                            onChange={event => props.save(\"FEE_FACTOR\", event.target.value)}\n                        />\n                        <label>maximum reward anyone can receive in reward sharing</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_REWARD}\n                            onChange={event => props.save(\"MAX_REWARD\", event.target.value)}\n                        />\n                        <label>Reward algorithm used for sharing reward</label>\n                        <select\n                            className=\"input\"\n                            value={props.REWARD_ALGORITHM}\n                            onChange={event => props.save(\"REWARD_ALGORITHM\", event.target.value)}\n                        >\n                            <option value=\"Prop\">Prop</option>\n                            <option value=\"PPS\">PPS</option>\n                            <option value=\"PPLNS\">PPLNS</option>\n                        </select>\n                        {props.REWARD_ALGORITHM === \"PPNLS\" ? (\n                            <React.Fragment>\n                                <label>Last share used in PPLNS to calculate reward of each user</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"input\"\n                                    value={props.PPLNS_N}\n                                    onChange={event => props.save(\"PPLNS_N\", event.target.value)}\n                                />\n                            </React.Fragment>\n                        ) : null}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default rewardForm;\n","import React from 'react';\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst withdrawForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Transaction fee of a transaction</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.TRANSACTION_FEE}\n                            onChange={event => props.save(\"TRANSACTION_FEE\", event.target.value)}\n                        />\n                        <label>Confirmation length for balances to be mature</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.CONFIRMATION_LENGTH}\n                            onChange={event => props.save(\"CONFIRMATION_LENGTH\", event.target.value)}\n                        />\n                        <label>Maximum number of outputs a transaction can have</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_NUMBER_OF_OUTPUTS}\n                            onChange={event => props.save(\"MAX_NUMBER_OF_OUTPUTS\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>\n                                Save changes\n                                {props.loading ? <BarLoader color={\"white\"}/> : null}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Miner can not set his withdrawal threshold smaller than this</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MIN_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"MIN_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                        <label>Miner can not set his withdrawal threshold bigger than this</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"MAX_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                        <label>Default value for periodic withdrawal if not set by miner explicitly</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.DEFAULT_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"DEFAULT_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default withdrawForm;\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport Panel from '../../../components/panel/Panel';\nimport AdminLayout from '../../../layouts/admin_layout/AdminLayout'\nimport { ApiNetwork } from \"../../../network/api\";\nimport MiningParamForm from \"./MiningParamForm\";\nimport RewardForm from \"./RewardForm\";\nimport WithdrawForm from \"./WithdrawForm\";\n\nconst REWARD_KEYS = [\n    \"TOTAL_REWARD\",\n    \"REWARD_FACTOR\",\n    \"REWARD_FACTOR_PRECISION\",\n    \"FEE_FACTOR\",\n    \"MAX_REWARD\",\n    \"PPLNS_N\",\n    \"REWARD_ALGORITHM\",\n];\n\nconst WITHDRAW_KEYS = [\n    \"TRANSACTION_FEE\",\n    \"MAX_NUMBER_OF_OUTPUTS\",\n    \"MIN_WITHDRAW_THRESHOLD\",\n    \"MAX_WITHDRAW_THRESHOLD\",\n    \"DEFAULT_WITHDRAW_THRESHOLD\",\n    \"CONFIRMATION_LENGTH\",\n\n];\n\nconst MINING_KEYS = [\n    \"POOL_BASE_FACTOR\",\n    \"THRESHOLD_HEIGHT\",\n    \"THRESHOLD_TIMESTAMP\",\n];\n\nclass Manage extends React.Component {\n    state = {\n        reward: {\n            TOTAL_REWARD: null,\n            REWARD_FACTOR: null,\n            REWARD_FACTOR_PRECISION: null,\n            FEE_FACTOR: null,\n            MAX_REWARD: null,\n            PPLNS_N: null,\n            REWARD_ALGORITHM: \"PPLNS\",\n        },\n        withdraw: {\n            TRANSACTION_FEE: null,\n            MAX_NUMBER_OF_OUTPUTS: null,\n            MIN_WITHDRAW_THRESHOLD: null,\n            MAX_WITHDRAW_THRESHOLD: null,\n            DEFAULT_WITHDRAW_THRESHOLD: null,\n            CONFIRMATION_LENGTH: null,\n        },\n        mining: {\n            POOL_BASE_FACTOR: null,\n            THRESHOLD_HEIGHT: null,\n            THRESHOLD_TIMESTAMP: null,\n        },\n        loading: ''\n    };\n\n    savePanelValue = (panel, key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                [panel]: {\n                    ...state[panel],\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    submitPanel = panel => {\n        this.setState({loading: panel});\n        ApiNetwork.setConfig(this.state[panel]).then(response => {\n            this.setState({loading: ''});\n        }).catch(error => {\n            this.setState({loading: ''});\n        });\n    };\n\n    componentWillMount() {\n        ApiNetwork.getConfig().then(response => {\n            const reward = Object.keys(response)\n                .filter(key => REWARD_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            const withdraw = Object.keys(response)\n                .filter(key => WITHDRAW_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            const mining = Object.keys(response)\n                .filter(key => MINING_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            this.setState({\n                reward: reward,\n                withdraw: withdraw,\n                mining: mining\n            });\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h2>Mining parameters</h2>\n                <Panel>\n                    <MiningParamForm\n                        save={(key, value) => this.savePanelValue(\"mining\", key, value)}\n                        loading={this.state.loading==='mining'}\n                        submit={() => this.submitPanel(\"mining\")}\n                        {...this.state.mining} />\n                </Panel>\n                <br/>\n                <br/>\n                <h2>Reward</h2>\n                <Panel>\n                    <RewardForm\n                        save={(key, value) => this.savePanelValue(\"reward\", key, value)}\n                        loading={this.state.loading==='reward'}\n                        submit={() => this.submitPanel(\"reward\")}\n                        {...this.state.reward} />\n                </Panel>\n                <br/>\n                <br/>\n                <h2>withdraw</h2>\n                <Panel>\n                    <WithdrawForm\n                        save={(key, value) => this.savePanelValue(\"withdraw\", key, value)}\n                        loading={this.state.loading==='withdraw'}\n                        submit={() => this.submitPanel(\"withdraw\")}\n                        {...this.state.withdraw} />\n                </Panel>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(Manage);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport { setUserPk } from \"../../../store/actions/apiActions\";\nimport AdminLayout from \"../AdminLayout\";\nimport Address from '../../user_layout/address/Address';\nimport { NavLink } from \"react-router-dom\";\n\nclass AdminUserLayout extends React.Component {\n\n    updateUserId = () => {\n        const urlUserId = this.props.match.params.userId;\n        const stateUserId = this.props.userId;\n        if (urlUserId !== stateUserId) {\n            this.props.setUserPk(urlUserId);\n        }\n    };\n\n    componentDidMount() {\n        this.updateUserId();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.updateUserId();\n    }\n\n    getUrl = prefix => \"/admin/user/\" + this.props.match.params.userId + prefix;\n    render = () => {\n        return (\n            <React.Fragment>\n                <Address userId={this.props.match.params.userId}>\n                    <div className=\"admin-actions\">\n                        <NavLink to={this.getUrl('/')} exact={true}><i className=\"ep-icon-user-dashboard\"/></NavLink>\n                        <NavLink to={this.getUrl(\"/wallet/\")} exact={true}><i\n                            className=\"ep-icon-user-wallet\"/></NavLink>\n                        {/*<NavLink to=\"/\" exact={true}><i className=\"ep-icon-user-dashboard\"/></NavLink>*/}\n                    </div>\n                </Address>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    dashboard: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: (userId) => dispatch(setUserPk(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(AdminLayout)(AdminUserLayout));\n","import withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport { MainPageConnected } from \"../../../user/main/MainPage\";\nimport AdminUserLayout from '../../../../layouts/admin_layout/admin_user_layout/AdminUserLayout';\n\nexport default withLayout(AdminUserLayout)(MainPageConnected);\n","import withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport { WalletPageConnected } from \"../../../user/wallet/WalletPage\";\nimport AdminUserLayout from '../../../../layouts/admin_layout/admin_user_layout/AdminUserLayout';\n\nexport default withLayout(AdminUserLayout)(WalletPageConnected);\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport AdminLayout from '../AdminLayout';\nimport withLayout from '../../../hoc/with_layout/withLayout';\n\nclass AdminUiManageLayout extends React.Component {\n\n    getUrl = (suffix) => \"/admin/ui-manage/\" + suffix;\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <ul className=\"tab-bar-flex\">\n                    <li>\n                        <NavLink to={this.getUrl(\"faq\")} exact>Faq content</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"static\")} exact>Static pages</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"menu\")} exact>Menu links</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"footer\")} exact>Footer links</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"index\")} exact>Index</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"notification\")} exact>Notifications</NavLink>\n                    </li>\n                </ul>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(AdminUiManageLayout);\n","import React from 'react';\nimport withLayout from '../../hoc/with_layout/withLayout';\nimport AdminUiManageLayout from '../../layouts/admin_layout/admin_ui_manage_layout/AdminUiManageLayout';\nimport { ApiNetwork } from \"../../network/api\";\nimport ReactMde from \"react-mde\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport * as Showdown from \"showdown\";\nimport BarLoader from \"react-spinners/BarLoader\";\n// import { Reorder } from \"../../utils\";\n\nconst converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n});\n\nclass FaqUiManage extends React.Component {\n\n    state = {\n        extra: {},\n        elements: [],\n        edit: -1,\n        loading: false,\n    };\n\n    initialElements = () => {\n        if (this.props.initial && this.props.objectKey) {\n            const elements = [...this.state.elements];\n            const available = elements.map(item => item[this.props.objectKey]);\n            let addedElement = 0;\n            this.props.initial.map(item => {\n                if (available.indexOf(item) < 0) {\n                    const row = this.createEmptyRow();\n                    row[this.props.objectKey] = item;\n                    elements.push(row);\n                    addedElement += 1;\n                }\n                return null;\n            });\n            if (addedElement > 0) {\n                this.setState({elements: elements});\n            }\n        }\n    };\n\n    createEmptyRow = () => {\n        const res = {};\n        this.props.items.map(element => {\n            res[element.key] = \"\";\n            if (element.choices) {\n                res[element.key] = element.choices[0];\n            }\n            return null;\n        });\n        if (this.props.content) {\n            res[this.props.content] = '';\n        }\n        return res;\n    };\n\n    addRow = () => {\n        this.setState(state => {\n            const newElement = this.createEmptyRow();\n            return {\n                ...state,\n                elements: [\n                    ...state.elements,\n                    newElement\n                ],\n                edit: state.elements.length,\n                editElement: newElement\n            }\n        })\n    };\n\n    removeRow = (index) => {\n        this.setState(state => {\n            return {\n                ...state,\n                elements: state.elements.filter((elem, elemIndex) => elemIndex !== index)\n            }\n        })\n    };\n\n    editRow = index => {\n        const selectedElement = this.state.elements[index];\n        this.setState({\n            edit: index,\n            editElement: {...selectedElement}\n        });\n    };\n\n    saveChanges = () => {\n        this.setState(state => ({\n            edit: -1,\n            elements: state.elements.map((question, index) => {\n                return index === state.edit ? state.editElement : question\n            }),\n            editElement: {}\n        }));\n    };\n\n    submit = () => {\n        this.setState({loading: true});\n        const postData = {items: [...this.state.elements]};\n        if(this.props.extra)\n            postData.extra = {...this.state.extra};\n        ApiNetwork.setUiJson(this.props.uiPath, postData).then(response => {\n            this.setState({loading: false})\n            console.log(response);\n        }).catch(error => {\n            this.setState({loading: false})\n            console.log(error);\n        })\n    };\n\n    componentWillMount() {\n        ApiNetwork.getUiJson(this.props.uiPath).then(data => {\n            if(this.props.extra && data.extra){\n                this.setState({elements: data.items, extra: data.extra, edit: -1});\n            }else{\n                this.setState({elements: data.items, edit: -1});\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.initialElements();\n    }\n\n    storeValue = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                editElement: {\n                    ...state.editElement,\n                    [key]: value\n                }\n            };\n        })\n    };\n\n    storeExtraValue = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                extra: {\n                    ...state.extra,\n                    [key]: value\n                }\n            };\n        })\n    };\n\n    moveUp = index => {\n        if(index > 0) {\n            let elements = [...this.state.elements];\n            elements[index - 1] = this.state.elements[index];\n            elements[index] = this.state.elements[index - 1];\n            this.setState({elements: elements});\n        }\n    }\n\n    moveDown = index => {\n        if(this.state.elements.length > index - 1) {\n            let elements = [...this.state.elements];\n            elements[index + 1] = this.state.elements[index];\n            elements[index] = this.state.elements[index + 1];\n            this.setState({elements: elements})\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.extra ? (\n                    <div className=\"panel\">\n                        <div className=\"panel-content\">\n                            {this.props.extra.map(item => (\n                                <label>\n                                    {item.title}\n                                    <input\n                                        type=\"text\"\n                                        value={this.state.extra[item.key]}\n                                        onChange={(event => this.storeExtraValue(item.key, event.target.value))}/>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"panel custom-table\">\n                    <table className=\"left-align\">\n                        <thead>\n                        <tr>\n                            <td/>\n                            {this.props.items.map(item => <th key={item.key}>{item.title}</th>)}\n                            <th width={200}>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.elements.map((dataRow, index) => (\n                            <React.Fragment key={index}>\n                                <tr className={index === this.state.edit ? \"edit-row\" : null}>\n                                    <td>\n                                        {index > 0 ? <div><i className=\"ep-icon-up\" onClick={event => this.moveUp(index)}/></div> : null }\n                                        {index < this.state.elements.length - 1 ? <div><i className=\"ep-icon-down\" onClick={event=>this.moveDown(index)}/></div> : null }\n                                    </td>\n                                    {this.props.items.map(item => {\n                                        return (<td key={item.key}>\n                                            {index === this.state.edit ? (item.choices ? (\n                                                <select\n                                                    className=\"input\"\n                                                    onChange={event => this.storeValue(item.key, event.target.value)}\n                                                    value={this.state.editElement[item.key]}>\n                                                    {item.choices.map(item => <option key={item}\n                                                                                      value={item}>{item}</option>)}\n                                                </select>\n                                            ) : (\n                                                <input type=\"text\" className=\"input\"\n                                                       value={this.state.editElement[item.key]}\n                                                       onChange={event => this.storeValue(item.key, event.target.value)}/>\n                                            )) : (\n                                                <React.Fragment>\n                                                    {/*<i className=\"ep-icon-move\"/>*/}\n                                                    &nbsp;{dataRow[item.key]}\n                                                </React.Fragment>\n                                            )}\n                                        </td>)\n                                    })}\n                                    <td className=\"center\">\n                                        {index === this.state.edit ? (\n                                            <React.Fragment>\n                                                <button onClick={this.saveChanges}>\n                                                    <i className=\"ep-icon-edit\"/>\n                                                </button>\n                                                <button onClick={() => this.setState({edit: -1})}>\n                                                    <i className=\"ep-icon-close\"/>\n                                                </button>\n                                            </React.Fragment>\n                                        ) : (\n                                            <React.Fragment>\n                                                <button onClick={() => this.editRow(index)}>\n                                                    <i className=\"ep-icon-edit\"/>\n                                                </button>\n                                                {this.props.objectKey && this.props.initial && this.props.initial.find(value => value === dataRow[this.props.objectKey]) ? null : (\n                                                    <button onClick={() => this.removeRow(index)}>\n                                                        <i className=\"ep-icon-delete\"/>\n                                                    </button>\n                                                )}\n                                            </React.Fragment>\n                                        )}\n                                    </td>\n                                </tr>\n                                {(index === this.state.edit && this.props.contentKey) ? (\n                                    <tr className=\"edit-row\">\n                                        <td colSpan={this.props.items.length + 2}>\n                                            <ReactMde\n                                                value={this.state.editElement[this.props.contentKey]}\n                                                selectedTab={this.state.editorSelectedTab}\n                                                onTabChange={value => this.setState({editorSelectedTab: value})}\n                                                generateMarkdownPreview={markdown =>\n                                                    Promise.resolve(converter.makeHtml(markdown))\n                                                }\n                                                onChange={value => this.setState(state => {\n                                                    return {\n                                                        ...state,\n                                                        editElement: {\n                                                            ...state.editElement,\n                                                            [this.props.contentKey]: value\n                                                        }\n                                                    }\n                                                })}/>\n                                        </td>\n                                    </tr>\n                                ) : null}\n                            </React.Fragment>\n                        ))}\n                        </tbody>\n                        <tfoot>\n                        <tr>\n                            <td colSpan={this.props.items.length + 2} style={{padding: 10}}>\n                                <button onClick={this.addRow}>\n                                    <i className=\"ep-icon-plus\"/> Add new\n                                </button>\n                                {this.state.edit === -1 ? (\n                                    <button className=\"btn blue\" onClick={this.submit} style={{float: \"right\"}}>\n                                        Save\n                                        {this.state.loading ? <BarLoader color={\"white\"}/> : null}\n                                    </button>\n                                ) : null}\n                            </td>\n                        </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminUiManageLayout)(FaqUiManage);\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"question\", title: \"question\"}\n];\n\nconst adminUiManageFaq = (props) => (\n    <DraggableTable\n        uiPath=\"Faq.json\"\n        items={items}\n        contentKey={\"answer\"}\n    />\n);\n\n\nexport default adminUiManageFaq;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"pageTitle\", title: \"Page title\"},\n    {key: \"urlKey\", title: \"Url Key\"}\n];\n\nconst adminUiManageStatic = (props) => (\n    <DraggableTable\n        uiPath=\"Page.json\"\n        items={items}\n        contentKey=\"content\"\n    />\n);\n\n\nexport default adminUiManageStatic;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"color\", title: \"color\"},\n    {key: \"superuser\", title: \"Only super user can see\", choices:[\"no\", \"yes\"]},\n    {key: \"link\", title: \"link\"},\n];\n\nconst initialLinks = ['/', '/support/', '/faq/', '/admin/'];\n\nconst adminUiManageMenuLink = (props) => (\n    <DraggableTable\n        uiPath=\"MenuLink.json\"\n        items={items}\n        initial={initialLinks}\n        objectKey=\"link\"\n        contentKey={null}\n    />\n);\n\n\nexport default adminUiManageMenuLink;\n","import React from 'react';\nimport DraggableTable from \"../../../components/data_table/DraggableTable\";\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"column\", title: \"column\", choices:[\"Column 2\", \"Column 3\", \"Column 4\"]},\n    {key: \"link\", title: \"link\"},\n    {key: \"newTab\", title: \"Open link in new tab?\", choices: [\"no\", \"yes\"]}\n];\n\nconst extraItems = [\n    {key: \"column1\", title: \"Column 1 content\"},\n    {key: \"column2\", title: \"Column 2 Title\"},\n    {key: \"column3\", title: \"Column 3 Title\"},\n    {key: \"column4\", title: \"Column 4 Title\"},\n];\n\nconst adminUiManageFooterLink = (props) => (\n    <DraggableTable\n        uiPath=\"FooterLink.json\"\n        items={items}\n        extra={extraItems}\n        objectKey=\"link\"\n        contentKey={null}\n    />\n);\n\nexport default adminUiManageFooterLink;\n","import React from 'react';\nimport DraggableTable from \"../../../components/data_table/DraggableTable\";\n\nconst extraItems = [\n    {key: \"sliderHeader\", title: \"Slider title\"},\n    {key: \"sliderSubTitle\", title: \"Slider subtitle\"},\n    {key: \"sliderLink\", title: \"Slider link\"},\n    {key: \"sliderLinkTitle\", title: \"Slider link title\"},\n    {key: \"firstBoxTitle\", title: \"First box title\"},\n    {key: \"firstBoxContent\", title: \"First box content\"},\n];\n\nconst items = [\n    {key: \"title\", title: \"Feature title\"},\n];\n\nconst adminUiManageIndexContent = (props) => (\n    <DraggableTable\n        uiPath=\"Index.json\"\n        items={items}\n        extra={extraItems}\n        objectKey=\"title\"\n        contentKey={null}\n    />\n);\n\nexport default adminUiManageIndexContent;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"type\", title: \"message type\", choices: ['info', 'success', 'warning', 'error']},\n];\n\nconst adminUiManageNotification = (props) => (\n    <DraggableTable\n        uiPath=\"Notification.json\"\n        items={items}\n        contentKey={\"content\"}\n    />\n);\n\n\nexport default adminUiManageNotification;\n","import React from 'react';\nimport MenuBar from \"../../../layouts/main_layout/header/menu_bar/MenuBar\";\nimport { ApiNetwork } from \"../../../network/api\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { TOKEN_KEY } from \"../../../build/constant\";\nimport queryString from 'query-string';\nimport BarLoader from \"react-spinners/BarLoader\";\n\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        recaptcha: '',\n        twofa: '',\n        siteKey: '',\n        loading: false,\n        errors: {\n            username: '',\n            password: '',\n            recaptcha_code: '',\n            otp_token: '',\n            non_field_errors: ''\n        }\n    };\n\n    saveContent = (key, value) => {\n        this.setState({[key]: value});\n    };\n\n    redirect = () => {\n        const queryParams = queryString.parse(this.props.location.search);\n        if (queryParams.next) {\n            this.props.history.push(queryParams.next);\n        } else {\n            this.props.history.push(\"/admin/\")\n        }\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem(TOKEN_KEY)) {\n            this.redirect();\n        } else {\n            ApiNetwork.getLogin().then(data => {\n                this.setState({siteKey: data.site_key})\n            })\n        }\n    }\n\n    signIn = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true,\n            errors: {\n                username: '',\n                password: '',\n                recaptcha_code: '',\n                otp_token: '',\n                non_field_errors: ''\n            }\n        })\n        ApiNetwork.login(this.state.username, this.state.password, this.state.recaptcha, this.twofa).then(response => {\n            localStorage.setItem(TOKEN_KEY, response.token);\n            this.setState({loading: false})\n            this.redirect();\n        }).catch(error => {\n            const errors = {\n                username: '',\n                password: '',\n                recaptcha_code: '',\n                otp_token: '',\n                non_field_errors: ''\n            };\n            const errorData = error.response.data;\n            Object.keys(errors).forEach(key => {\n                if (errorData[key] !== undefined) {\n                    errors[key] = errorData[key];\n                }\n            })\n            this.setState({loading: false, errors: errors});\n            if(this.state.siteKey) {\n                this.captcha.reset();\n            }\n        })\n    };\n\n    render() {\n        console.log(this.state)\n        return (\n            <div className=\"login\">\n                <div className=\"header\">\n                    <MenuBar/>\n                    <div className=\"clear\"/>\n                </div>\n                <div className=\"content\">\n                    {this.state.errors.non_field_errors ? (\n                        <ul className=\"red\">\n                            {this.state.errors.non_field_errors.map((item, index) => {\n                                return <li key={index}>{item}</li>\n                            })}\n                        </ul>\n                    ) : null}\n                    <form className=\"with40\" onSubmit={this.signIn}>\n                        <h1>Sign in</h1>\n                        <label>Username</label>\n                        <input\n                            type=\"text\"\n                            className={this.state.errors.username ? \"invalid\" : \"\"}\n                            value={this.state.username}\n                            onChange={event => this.saveContent(\"username\", event.target.value)}\n                        />\n                        {this.state.errors.username ? this.state.errors.username.map((item, index) => {\n                            return <div className=\"red text-small\" key={index}>{item}</div>\n                        }) : null}\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className={this.state.errors.password ? \"invalid\" : \"\"}\n                            value={this.state.password}\n                            onChange={event => this.saveContent(\"password\", event.target.value)}\n                        />\n                        {this.state.errors.password ? this.state.errors.password.map((item, index) => {\n                            return <div className=\"red text-small\" key={index}>{item}</div>\n                        }) : null}\n                        <label>TwoFA (if enabled)</label>\n                        <input\n                            type=\"password\"\n                            value={this.state.twofa}\n                            onChange={event => this.saveContent(\"twofa\", event.target.value)}\n                        />\n                        {this.state.errors.twofa ? this.state.errors.twofa.map((item, index) => {\n                            return <div className=\"red text-small\" key={index}>{item}</div>\n                        }) : null}\n                        {this.state.siteKey ? (\n                            <React.Fragment>\n                                <div className=\"button-row\">\n                                    <ReCAPTCHA\n                                        ref={e => (this.captcha = e)}\n                                        sitekey={this.state.siteKey}\n                                        onChange={value => this.saveContent('recaptcha', value)}\n                                    />\n                                </div>\n                                {this.state.errors.recaptcha_code ? this.state.errors.recaptcha_code.map((item, index) => {\n                                    return <div className=\"red text-small\" key={index}>{item}</div>\n                                }) : null}\n                            </React.Fragment>\n                        ): null}\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={this.signIn}>\n                                <div style={{marginBottom: \"5px\"}}> Sign In</div>\n                                {this.state.loading ? <BarLoader color={\"white\"}/> : null}\n\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default Login;\n","import React from 'react';\nimport { Production } from \"../build/production\";\nimport AdminDashboardInfo from \"../page/admin/dashboard/AdminDashboard\";\nimport AdminDashboardBlock from \"../page/admin/dashboard/block/Block\";\nimport AdminDashboardTransaction from \"../page/admin/dashboard/transaction/Transaction\";\nimport AdminDashboardPayment from \"../page/admin/dashboard/payment/Payment\";\nimport Error404 from \"../page/errors/error404/Error404\";\nimport Error500 from \"../page/errors/error500/Error500\";\nimport ErrorMaintenance from \"../page/errors/error_maintenance/errorMaintenance\";\nimport ErrorComing from \"../page/errors/error_coming/errorComing\";\nimport Index from \"../page/main/Index\";\nimport StaticPage from \"../page/main/static/StaticPage\";\n\nimport UserMainPage from '../page/user/main/MainPage';\nimport UserConfigPage from '../page/user/config/ConfigPage';\nimport UserWalletPage from \"../page/user/wallet/WalletPage\";\n\nimport Faq from \"../page/main/faq/Faq\";\nimport Support from \"../page/main/support/Support\";\nimport { loadNodeDataAsync } from \"../store/actions/proxyActions\";\nimport { loadApiDashboardAsync, loadApiInfoAsync, loadMessagesAsync } from \"../store/actions/apiActions\";\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport AdminProfile from '../page/admin/profile/Profile';\nimport AdminUser from '../page/admin/user/User';\nimport AdminManage from '../page/admin/manage/Manage';\nimport AdminUserMain from '../page/admin/user/UserMain/UserMainPage';\nimport AdminUserWallet from '../page/admin/user/UserWallet/UserWalletPage';\nimport AdminUiManageFaq from '../page/admin/ui_manage/AdminUiManageFaq';\nimport AdminUiManageStatic from '../page/admin/ui_manage/AdminUiManageStatic';\nimport AdminUiManageMenuLink from '../page/admin/ui_manage/AdminUiManageMenuLink';\nimport AdminUiManageFooterLink from '../page/admin/ui_manage/AdminUiManageFooterLink';\nimport AdminUiManageIndexContent from '../page/admin/ui_manage/AdminUiManageIndexContent';\nimport AdminUiManageNotification from '../page/admin/ui_manage/AdminUiManageNotification';\nimport AdminLogin from '../page/admin/login/Login';\nimport { setUiSyncingFlag } from \"../store/actions/uiActions\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        if(!this.props.syncing) {\n            this.props.setSyncing();\n            this.props.getApiInfo();\n            this.props.getApiDashboard();\n            if (Production.IsProxy()) {\n                this.props.getNodeData();\n            } else {\n                this.props.getMessages();\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <BrowserRouter basename={Production.IsProxy() ? \"dashboard\" : \"\"}>\n                <div className=\"App\">\n                    {Production.IsServer() ? (\n                        <Switch>\n                            <Route path=\"/error/404/\" component={Error404}/>\n                            <Route path=\"/error/500/\" component={Error500}/>\n                            <Route path=\"/error/maintenance/\" component={ErrorMaintenance}/>\n                            <Route path=\"/error/coming/\" component={ErrorComing}/>\n\n                            <Route path=\"/support/\" component={Support}/>\n                            <Route path=\"/faq/\" exact component={Faq}/>\n                            <Route path=\"/user/:userId/\" exact component={UserMainPage}/>\n                            <Route path=\"/user/:userId/wallet/\" exact component={UserWalletPage}/>\n                            <Route path=\"/user/:userId/config/\" exact component={UserConfigPage}/>\n\n                            <Route path=\"/\" exact component={Index}/>\n\n                            <Route path=\"/admin/login/\" exact component={AdminLogin}/>\n                            <Route path=\"/admin/system/\" exact component={AdminDashboardInfo}/>\n                            <Route path=\"/admin/system/stat/\" exact component={AdminDashboardInfo}/>\n                            <Route path=\"/admin/system/block/\" exact component={AdminDashboardBlock}/>\n                            <Route path=\"/admin/system/transaction/\" exact component={AdminDashboardTransaction}/>\n                            <Route path=\"/admin/system/payment/\" exact component={AdminDashboardPayment}/>\n\n                            <Route path=\"/admin/profile/\" exact component={AdminProfile}/>\n                            <Route path=\"/admin/user/\" exact component={AdminUser}/>\n                            <Route path=\"/admin/user/:userId/\" exact component={AdminUserMain}/>\n                            <Route path=\"/admin/user/:userId/wallet/\" exact component={AdminUserWallet}/>\n                            <Route path=\"/admin/manage/\" exact component={AdminManage}/>\n                            <Route path=\"/admin/ui-manage/faq/\" exact component={AdminUiManageFaq}/>\n                            <Route path=\"/admin/ui-manage/static/\" exact component={AdminUiManageStatic}/>\n                            <Route path=\"/admin/ui-manage/menu/\" exact component={AdminUiManageMenuLink}/>\n                            <Route path=\"/admin/ui-manage/footer/\" exact component={AdminUiManageFooterLink}/>\n                            <Route path=\"/admin/ui-manage/index/\" exact component={AdminUiManageIndexContent}/>\n                            <Route path=\"/admin/ui-manage/notification/\" exact component={AdminUiManageNotification}/>\n                            <Redirect path=\"/admin/ui-manage/\" to=\"/admin/ui-manage/faq\"/>\n                            <Redirect path=\"/admin/\" to=\"/admin/system/\"/>\n                            <Route path=\"/\" component={StaticPage}/>\n\n                            <Redirect to=\"/error/404\"/>\n                        </Switch>\n                    ) : (\n                        <Switch>\n                            <Route path=\"/error/404/\" component={Error404}/>\n                            <Route path=\"/\" exact component={UserMainPage}/>\n                            <Route path=\"/wallet/\" exact component={UserWalletPage}/>\n                            <Route path=\"/config/\" exact component={UserConfigPage}/>\n                            <Redirect to=\"/error/404\"/>\n                        </Switch>\n                    )}\n                </div>\n                {/*<div className={}*/}\n            </BrowserRouter>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    syncing: state.ui.syncing,\n});\n\n\nconst mapDispatchToProps = dispatch => {\n    const res = {\n        getApiInfo: () => dispatch(loadApiInfoAsync()),\n        getMessages: () => dispatch(loadMessagesAsync()),\n        getApiDashboard: () => dispatch(loadApiDashboardAsync(false)),\n        setSyncing: () => dispatch(setUiSyncingFlag())\n    };\n    if (Production.IsProxy()) {\n        res['getNodeData'] = () => dispatch(loadNodeDataAsync())\n    }\n    return res\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from '../actionTypes';\n\nexport const setUiSyncingFlag = () => {\n    return dispatch => {\n        dispatch({\n            type: actionTypes.SET_UI_SYNCING,\n            payload: {}\n        });\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and user)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content_compiler has been fetched,\n              // but the previous service worker will still serve the older\n              // content_compiler until all client tabs are closed.\n              console.log(\n                'New content_compiler is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nReactDOM.render(\n    (\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}